{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Touch, { TouchRootContext } from '../Touch/Touch';\nimport classNames from '../../lib/classNames';\nimport getClassName from '../../helpers/getClassName';\nimport { IS_PLATFORM_ANDROID } from '../../lib/platform';\nimport { getOffsetRect } from '../../lib/offset';\nimport { coordX, coordY } from '../../lib/touch';\n\nvar ts = function ts() {\n  return +Date.now();\n};\n\nvar baseClassNames = getClassName('Tappable');\nvar ACTIVE_DELAY = 70;\nexport var ACTIVE_EFFECT_DELAY = 600;\nvar storage = {};\n/**\n * Очищает таймауты и хранилище для всех экземпляров компонента, кроме переданного\n *\n * @param {String} exclude ID экземпляра-исключения\n * @returns {void}\n */\n\nfunction deactivateOtherInstances(exclude) {\n  Object.keys(storage).filter(function (id) {\n    return id !== exclude;\n  }).forEach(function (id) {\n    clearTimeout(storage[id].activeTimeout);\n    clearTimeout(storage[id].timeout);\n    storage[id].stop();\n    delete storage[id];\n  });\n}\n\nvar Tappable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Tappable, _Component);\n\n  function Tappable(props) {\n    var _this;\n\n    _classCallCheck(this, Tappable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Tappable).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"isSlide\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"onStart\", function (_ref) {\n      var originalEvent = _ref.originalEvent;\n      !_this.insideTouchRoot && _this.props.stopPropagation && originalEvent.stopPropagation();\n\n      if (originalEvent.touches && originalEvent.touches.length > 1) {\n        return deactivateOtherInstances();\n      }\n\n      if (IS_PLATFORM_ANDROID) {\n        _this.onDown(originalEvent);\n      }\n\n      storage[_this.id] = {};\n      _this.getStorage().stop = _this.stop;\n      _this.getStorage().activeTimeout = setTimeout(_this.start, ACTIVE_DELAY);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onMove\", function (_ref2) {\n      var originalEvent = _ref2.originalEvent,\n          shiftXAbs = _ref2.shiftXAbs,\n          shiftYAbs = _ref2.shiftYAbs;\n      !_this.insideTouchRoot && _this.props.stopPropagation && originalEvent.stopPropagation();\n\n      if (shiftXAbs > 20 || shiftYAbs > 20) {\n        _this.isSlide = true;\n\n        _this.stop();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onEnd\", function (_ref3) {\n      var originalEvent = _ref3.originalEvent;\n      !_this.insideTouchRoot && _this.props.stopPropagation && originalEvent.stopPropagation();\n      var now = ts();\n\n      if (originalEvent.touches && originalEvent.touches.length > 0) {\n        _this.isSlide = false;\n        return;\n      }\n\n      if (_this.state.active) {\n        if (now - _this.state.ts >= 100) {\n          // Долгий тап, выключаем подсветку\n          _this.stop();\n        } else {\n          // Короткий тап, оставляем подсветку\n          var timeout = setTimeout(_this.stop, _this.props.activeEffectDelay - now + _this.state.ts);\n\n          var store = _this.getStorage();\n\n          if (store) {\n            store.timeout = timeout;\n          }\n        }\n      } else if (!_this.isSlide) {\n        // Очень короткий тап, включаем подсветку\n        _this.start();\n\n        var _timeout = setTimeout(_this.stop, _this.props.activeEffectDelay);\n\n        if (_this.getStorage()) {\n          clearTimeout(_this.getStorage().activeTimeout);\n          _this.getStorage().timeout = _timeout;\n        } else {\n          _this.timeout = _timeout;\n        }\n      }\n\n      _this.isSlide = false;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDown\", function (e) {\n      if (IS_PLATFORM_ANDROID) {\n        var _getOffsetRect = getOffsetRect(_this.container),\n            top = _getOffsetRect.top,\n            left = _getOffsetRect.left;\n\n        var x = coordX(e);\n        var y = coordY(e);\n        var key = 'wave' + Date.now().toString();\n\n        _this.setState(function (state) {\n          return {\n            clicks: _objectSpread({}, state.clicks, _defineProperty({}, key, {\n              x: Math.round(x - left),\n              y: Math.round(y - top)\n            }))\n          };\n        });\n\n        _this.wavesTimeout = setTimeout(function () {\n          _this.setState(function (state) {\n            var clicks = _objectSpread({}, state.clicks);\n\n            delete clicks[key];\n            return {\n              clicks: clicks\n            };\n          });\n        }, 225);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"start\", function () {\n      if (!_this.state.active) {\n        _this.setState({\n          active: true,\n          ts: ts()\n        });\n      }\n\n      deactivateOtherInstances(_this.id);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"stop\", function () {\n      if (_this.state.active) {\n        _this.setState({\n          active: false,\n          ts: null\n        });\n      }\n\n      if (_this.getStorage()) {\n        clearTimeout(_this.getStorage().activeTimeout);\n        delete storage[_this.id];\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getStorage\", function () {\n      return storage[_this.id];\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getRef\", function (container) {\n      _this.container = container;\n      var getRootRef = _this.props.getRootRef;\n\n      if (getRootRef) {\n        if (typeof getRootRef === 'function') {\n          getRootRef(container);\n        } else {\n          getRootRef.current = container;\n        }\n      }\n    });\n\n    _this.id = Math.round(Math.random() * 1e8).toString(16);\n    _this.state = {\n      clicks: {},\n      active: false,\n      ts: null\n    };\n    return _this;\n  }\n\n  _createClass(Tappable, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (storage[this.id]) {\n        clearTimeout(storage[this.id].timeout);\n        clearTimeout(storage[this.id].activeTimeout);\n        delete storage[this.id];\n      }\n\n      clearTimeout(this.wavesTimeout);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          clicks = _this$state.clicks,\n          active = _this$state.active;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          component = _this$props.component,\n          activeEffectDelay = _this$props.activeEffectDelay,\n          stopPropagation = _this$props.stopPropagation,\n          getRootRef = _this$props.getRootRef,\n          restProps = _objectWithoutProperties(_this$props, [\"children\", \"className\", \"component\", \"activeEffectDelay\", \"stopPropagation\", \"getRootRef\"]);\n\n      var Component = !restProps.disabled ? Touch : component;\n      var classes = classNames(baseClassNames, className, {\n        'Tappable--active': active,\n        'Tappable--inactive': !active\n      });\n      var props = {};\n\n      if (!restProps.disabled) {\n        props.component = component;\n        props.onStart = this.onStart;\n        props.onMove = this.onMove;\n        props.onEnd = this.onEnd;\n      }\n\n      if (typeof Component === 'string') {\n        props.ref = this.getRef;\n      } else {\n        props.getRootRef = this.getRef;\n      }\n\n      return React.createElement(TouchRootContext.Consumer, null, function (insideTouchRoot) {\n        _this2.insideTouchRoot = insideTouchRoot;\n        return React.createElement(Component, _extends({}, restProps, {\n          className: classes\n        }, props), IS_PLATFORM_ANDROID && React.createElement(\"span\", {\n          className: \"Tappable__waves\"\n        }, Object.keys(clicks).map(function (k) {\n          return React.createElement(\"span\", {\n            className: \"Tappable__wave\",\n            style: {\n              top: clicks[k].y,\n              left: clicks[k].x\n            },\n            key: k\n          });\n        })), children);\n      });\n    }\n  }]);\n\n  return Tappable;\n}(Component);\n\n_defineProperty(Tappable, \"propTypes\", {\n  onClick: PropTypes.func,\n  className: PropTypes.string,\n  children: PropTypes.node,\n  component: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  role: PropTypes.string,\n  activeEffectDelay: PropTypes.number,\n  stopPropagation: PropTypes.bool,\n  disabled: PropTypes.bool,\n  getRootRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.any\n  })])\n});\n\n_defineProperty(Tappable, \"defaultProps\", {\n  component: 'div',\n  role: 'button',\n  stopPropagation: false,\n  disabled: false,\n  activeEffectDelay: ACTIVE_EFFECT_DELAY\n});\n\nexport { Tappable as default };","map":{"version":3,"sources":["../../../../src/components/Tappable/Tappable.js"],"names":["ts","Date","baseClassNames","getClassName","ACTIVE_DELAY","ACTIVE_EFFECT_DELAY","storage","Object","id","clearTimeout","Tappable","Component","Math","clicks","active","onClick","PropTypes","className","children","component","role","activeEffectDelay","stopPropagation","disabled","getRootRef","current","any","originalEvent","deactivateOtherInstances","setTimeout","shiftXAbs","shiftYAbs","now","timeout","store","top","left","getOffsetRect","x","coordX","y","coordY","key","state","restProps","classes","classNames","props","IS_PLATFORM_ANDROID","k"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Touch, { TouchRootContext } from '../Touch/Touch';\nimport classNames from '../../lib/classNames';\nimport getClassName from '../../helpers/getClassName';\nimport { IS_PLATFORM_ANDROID } from '../../lib/platform';\nimport { getOffsetRect } from '../../lib/offset';\nimport { coordX, coordY } from '../../lib/touch';\n\nconst ts = () => +Date.now();\nconst baseClassNames = getClassName('Tappable');\n\nconst ACTIVE_DELAY = 70;\nexport const ACTIVE_EFFECT_DELAY = 600;\n\nlet storage = {};\n\n/**\n * Очищает таймауты и хранилище для всех экземпляров компонента, кроме переданного\n *\n * @param {String} exclude ID экземпляра-исключения\n * @returns {void}\n */\nfunction deactivateOtherInstances (exclude) {\n  Object.keys(storage).filter(id => id !== exclude).forEach(id => {\n    clearTimeout(storage[id].activeTimeout);\n    clearTimeout(storage[id].timeout);\n    storage[id].stop();\n\n    delete storage[id];\n  });\n}\n\nexport default class Tappable extends Component {\n  constructor (props) {\n    super(props);\n    this.id = Math.round(Math.random() * 1e8).toString(16);\n    this.state = {\n      clicks: {},\n      active: false,\n      ts: null\n    };\n  }\n\n  static propTypes = {\n    onClick: PropTypes.func,\n    className: PropTypes.string,\n    children: PropTypes.node,\n    component: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.element\n    ]),\n    role: PropTypes.string,\n    activeEffectDelay: PropTypes.number,\n    stopPropagation: PropTypes.bool,\n    disabled: PropTypes.bool,\n    getRootRef: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.shape({ current: PropTypes.any })\n    ])\n  };\n\n  static defaultProps = {\n    component: 'div',\n    role: 'button',\n    stopPropagation: false,\n    disabled: false,\n    activeEffectDelay: ACTIVE_EFFECT_DELAY\n  };\n\n  isSlide = false;\n\n  /**\n   * Обрабатывает событие touchstart\n   *\n   * @returns {void}\n   */\n  onStart = ({ originalEvent }) => {\n    !this.insideTouchRoot && this.props.stopPropagation && originalEvent.stopPropagation();\n    if (originalEvent.touches && originalEvent.touches.length > 1) {\n      return deactivateOtherInstances();\n    }\n\n    if (IS_PLATFORM_ANDROID) {\n      this.onDown(originalEvent);\n    }\n\n    storage[this.id] = {};\n    this.getStorage().stop = this.stop;\n    this.getStorage().activeTimeout = setTimeout(this.start, ACTIVE_DELAY);\n  };\n\n  /**\n   * Обрабатывает событие touchmove\n   *\n   * @returns {void}\n   */\n  onMove = ({ originalEvent, shiftXAbs, shiftYAbs }) => {\n    !this.insideTouchRoot && this.props.stopPropagation && originalEvent.stopPropagation();\n    if (shiftXAbs > 20 || shiftYAbs > 20) {\n      this.isSlide = true;\n      this.stop();\n    }\n  };\n\n  /**\n   * Обрабатывает событие touchend\n   *\n   * @returns {void}\n   */\n  onEnd = ({ originalEvent }) => {\n    !this.insideTouchRoot && this.props.stopPropagation && originalEvent.stopPropagation();\n    const now = ts();\n\n    if (originalEvent.touches && originalEvent.touches.length > 0) {\n      this.isSlide = false;\n      return;\n    }\n\n    if (this.state.active) {\n      if (now - this.state.ts >= 100) {\n        // Долгий тап, выключаем подсветку\n        this.stop();\n      } else {\n        // Короткий тап, оставляем подсветку\n        const timeout = setTimeout(this.stop, this.props.activeEffectDelay - now + this.state.ts);\n        const store = this.getStorage();\n\n        if (store) {\n          store.timeout = timeout;\n        }\n      }\n    } else if (!this.isSlide) {\n      // Очень короткий тап, включаем подсветку\n      this.start();\n\n      const timeout = setTimeout(this.stop, this.props.activeEffectDelay);\n\n      if (this.getStorage()) {\n        clearTimeout(this.getStorage().activeTimeout);\n        this.getStorage().timeout = timeout;\n      } else {\n        this.timeout = timeout;\n      }\n    }\n\n    this.isSlide = false;\n  };\n\n  /**\n   * Реализует эффект при тапе для Андроида\n   *\n   * @returns {void}\n   */\n  onDown = (e) => {\n    if (IS_PLATFORM_ANDROID) {\n      const { top, left } = getOffsetRect(this.container);\n      const x = coordX(e);\n      const y = coordY(e);\n      const key = 'wave' + Date.now().toString();\n\n      this.setState(state => ({\n        clicks: {\n          ...state.clicks,\n          [key]: {\n            x: Math.round(x - left),\n            y: Math.round(y - top)\n          }\n        }\n      }));\n\n      this.wavesTimeout = setTimeout(() => {\n        this.setState(state => {\n          let clicks = { ...state.clicks };\n          delete clicks[key];\n          return { clicks };\n        });\n      }, 225);\n    }\n  };\n\n  /**\n   * Устанавливает активное выделение\n   *\n   * @returns {void}\n   */\n  start = () => {\n    if (!this.state.active) {\n      this.setState({\n        active: true,\n        ts: ts()\n      });\n    }\n    deactivateOtherInstances(this.id);\n  };\n\n  /**\n   * Снимает активное выделение\n   *\n   * @returns {void}\n   */\n  stop = () => {\n    if (this.state.active) {\n      this.setState({\n        active: false,\n        ts: null\n      });\n    }\n    if (this.getStorage()) {\n      clearTimeout(this.getStorage().activeTimeout);\n      delete storage[this.id];\n    }\n  };\n\n  /**\n   * Возвращает хранилище для экземпляра компонента\n   *\n   * @returns {Object} Хранилище для текущего экземпляра компонента\n   */\n  getStorage = () => {\n    return storage[this.id];\n  };\n\n  /**\n   * Берет ref на DOM-ноду из экземпляра Touch\n   *\n   * @param {React.Component} container Touch component instance\n   */\n  getRef = container => {\n    this.container = container;\n\n    const getRootRef = this.props.getRootRef;\n    if (getRootRef) {\n      if (typeof getRootRef === 'function') {\n        getRootRef(container);\n      } else {\n        getRootRef.current = container;\n      }\n    }\n  };\n\n  componentWillUnmount () {\n    if (storage[this.id]) {\n      clearTimeout(storage[this.id].timeout);\n      clearTimeout(storage[this.id].activeTimeout);\n\n      delete storage[this.id];\n    }\n\n    clearTimeout(this.wavesTimeout);\n  }\n\n  render () {\n    const { clicks, active } = this.state;\n    const { children, className, component, activeEffectDelay, stopPropagation, getRootRef, ...restProps } = this.props;\n    const Component = !restProps.disabled ? Touch : component;\n    const classes = classNames(baseClassNames, className, {\n      'Tappable--active': active,\n      'Tappable--inactive': !active\n    });\n\n    let props = {};\n\n    if (!restProps.disabled) {\n      props.component = component;\n      props.onStart = this.onStart;\n      props.onMove = this.onMove;\n      props.onEnd = this.onEnd;\n    }\n\n    if (typeof Component === 'string') {\n      props.ref = this.getRef;\n    } else {\n      props.getRootRef = this.getRef;\n    }\n\n    return (\n      <TouchRootContext.Consumer>\n        {insideTouchRoot => {\n          this.insideTouchRoot = insideTouchRoot;\n\n          return (\n            <Component {...restProps} className={classes} {...props}>\n              {IS_PLATFORM_ANDROID && (\n                <span className=\"Tappable__waves\">\n                  {Object.keys(clicks).map(k => (\n                    <span className=\"Tappable__wave\" style={{ top: clicks[k].y, left: clicks[k].x }} key={k} />\n                  ))}\n                </span>\n              )}\n              {children}\n            </Component>\n          );\n        }}\n      </TouchRootContext.Consumer>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}