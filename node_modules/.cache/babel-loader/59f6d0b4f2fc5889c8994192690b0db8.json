{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport Tappable from '../Tappable/Tappable';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport usePlatform from '../../hooks/usePlatform';\n\nvar CellButton = function CellButton(_ref) {\n  var className = _ref.className,\n      align = _ref.align,\n      level = _ref.level,\n      before = _ref.before,\n      children = _ref.children,\n      stopPropagation = _ref.stopPropagation,\n      restProps = _objectWithoutProperties(_ref, [\"className\", \"align\", \"level\", \"before\", \"children\", \"stopPropagation\"]);\n\n  var platform = usePlatform();\n  return React.createElement(Tappable, _extends({}, restProps, {\n    className: classNames(getClassName('CellButton', platform), className, \"CellButton--lvl-\".concat(level), \"CellButton--aln-\".concat(align))\n  }), React.createElement(\"div\", {\n    className: \"CellButton__in\"\n  }, before && React.createElement(\"div\", {\n    className: \"CellButton__before\"\n  }, before), children && React.createElement(\"div\", {\n    className: \"CellButton__content\"\n  }, children)));\n};\n\nCellButton.defaultProps = {\n  level: 'primary',\n  component: 'button',\n  align: 'left',\n  stopPropagation: true\n};\nexport default CellButton;","map":{"version":3,"sources":["../../../../src/components/CellButton/CellButton.tsx"],"names":["CellButton","className","align","level","before","children","stopPropagation","restProps","platform","usePlatform","classNames","getClassName","component"],"mappings":";;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,QAAA,MAAA,sBAAA;AACA,OAAA,YAAA,MAAA,4BAAA;AACA,OAAA,UAAA,MAAA,sBAAA;AACA,OAAA,WAAA,MAAA,yBAAA;;AAWA,IAAMA,UAAoD,GAAG,SAAvDA,UAAuD,CAAA,IAAA,EAQtC;AAAA,MAPrBC,SAOqB,GAAA,IAAA,CAPrBA,SAOqB;AAAA,MANrBC,KAMqB,GAAA,IAAA,CANrBA,KAMqB;AAAA,MALrBC,KAKqB,GAAA,IAAA,CALrBA,KAKqB;AAAA,MAJrBC,MAIqB,GAAA,IAAA,CAJrBA,MAIqB;AAAA,MAHrBC,QAGqB,GAAA,IAAA,CAHrBA,QAGqB;AAAA,MAFrBC,eAEqB,GAAA,IAAA,CAFrBA,eAEqB;AAAA,MADlBC,SACkB,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,WAAA,EAAA,OAAA,EAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,iBAAA,CAAA,CAAA;;AACrB,MAAMC,QAAQ,GAAGC,WAAjB,EAAA;AAEA,SACE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA,QAAA,CAAA,EAAA,EAAA,SAAA,EAAA;AAEE,IAAA,SAAS,EAAEC,UAAU,CACnBC,YAAY,CAAA,YAAA,EADO,QACP,CADO,EAAA,SAAA,EAAA,mBAAA,MAAA,CAAA,KAAA,CAAA,EAAA,mBAAA,MAAA,CAAA,KAAA,CAAA;AAFvB,GAAA,CAAA,EASE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EACGP,MAAM,IAAI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EADb,MACa,CADb,EAEGC,QAAQ,IAAI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EAZnB,QAYmB,CAFf,CATF,CADF;AAXF,CAAA;;AA6BAL,UAAU,CAAVA,YAAAA,GAA0B;AACxBG,EAAAA,KAAK,EADmB,SAAA;AAExBS,EAAAA,SAAS,EAFe,QAAA;AAGxBV,EAAAA,KAAK,EAHmB,MAAA;AAIxBI,EAAAA,eAAe,EAAE;AAJO,CAA1BN;AAOA,eAAA,UAAA","sourcesContent":["import React from 'react';\nimport Tappable from '../Tappable/Tappable';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport usePlatform from '../../hooks/usePlatform';\nimport { HasChildren } from '../../types/props';\n\nexport interface CellButtonProps extends React.HTMLAttributes<HTMLElement>, HasChildren {\n  level?: 'primary' | 'danger',\n  align?: 'left' | 'center' | 'right',\n  before?: React.ReactNode,\n  component?: string | React.ComponentType,\n  stopPropagation?: boolean\n}\n\nconst CellButton: React.FunctionComponent<CellButtonProps> = ({\n  className,\n  align,\n  level,\n  before,\n  children,\n  stopPropagation,\n  ...restProps\n}: CellButtonProps) => {\n  const platform = usePlatform();\n\n  return (\n    <Tappable\n      {...restProps}\n      className={classNames(\n        getClassName('CellButton', platform),\n        className,\n        `CellButton--lvl-${level}`,\n        `CellButton--aln-${align}`\n      )}\n    >\n      <div className=\"CellButton__in\">\n        {before && <div className=\"CellButton__before\">{before}</div>}\n        {children && <div className=\"CellButton__content\">{children}</div>}\n      </div>\n    </Tappable>\n  );\n};\n\nCellButton.defaultProps = {\n  level: 'primary',\n  component: 'button',\n  align: 'left',\n  stopPropagation: true\n};\n\nexport default CellButton;\n"]},"metadata":{},"sourceType":"module"}