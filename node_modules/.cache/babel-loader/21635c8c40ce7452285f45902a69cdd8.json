{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport React, { Component } from 'react';\nimport getClassName from '../../helpers/getClassName';\nimport Touch from '../Touch/Touch';\nimport classNames from '../../lib/classNames';\nimport withPlatform from '../../hoc/withPlatform';\nimport { canUseDOM } from '../../lib/dom';\n\nvar Gallery =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Gallery, _Component);\n\n  function Gallery(props) {\n    var _this;\n\n    _classCallCheck(this, Gallery);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Gallery).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"container\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"slidesStore\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"viewport\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"timeout\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"isChildrenDirty\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"go\", function (targetIndex) {\n      _this.setState({\n        animation: true,\n        shiftX: _this.calculateIndent(targetIndex),\n        current: targetIndex\n      });\n\n      if (_this.timeout) {\n        _this.clearTimeout();\n\n        _this.setTimeout(_this.props.autoplay);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onStart\", function (e) {\n      _this.setState({\n        animation: false,\n        startT: e.startT\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onMoveX\", function (e) {\n      if (_this.isDraggable()) {\n        e.originalEvent.preventDefault();\n\n        if (e.isSlideX) {\n          _this.props.onDragStart && _this.props.onDragStart();\n\n          if (_this.state.deltaX !== e.shiftX || _this.state.dragging !== e.isSlideX) {\n            _this.setState({\n              deltaX: e.shiftX,\n              dragging: e.isSlideX\n            });\n          }\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onEnd\", function (e) {\n      var targetIndex = e.isSlide ? _this.getTarget() : _this.state.current;\n      _this.props.onDragEnd && _this.props.onDragEnd();\n\n      _this.setState({\n        shiftX: _this.calculateIndent(targetIndex),\n        deltaX: 0,\n        animation: true,\n        current: targetIndex\n      });\n\n      if (_this.props.onEnd) {\n        _this.props.onEnd({\n          targetIndex: targetIndex\n        });\n      }\n\n      if (_this.timeout) {\n        _this.clearTimeout();\n\n        _this.setTimeout(_this.props.autoplay);\n      }\n\n      return true;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onResize\", function () {\n      _this.initializeSlides();\n\n      var _this$state = _this.state,\n          layerWidth = _this$state.layerWidth,\n          slides = _this$state.slides;\n      var containerWidth = _this.container.current.offsetWidth;\n      var viewportWidth = _this.viewport.offsetWidth;\n\n      _this.setState({\n        shiftX: _this.calculateIndent(_this.state.current),\n        containerWidth: containerWidth,\n        min: _this.calcMin({\n          layerWidth: layerWidth,\n          containerWidth: containerWidth,\n          viewportWidth: viewportWidth,\n          slides: slides\n        }),\n        max: _this.calcMax({\n          viewportWidth: viewportWidth,\n          slides: slides\n        }),\n        animation: false\n      }, function () {\n        window.requestAnimationFrame(function () {\n          return _this.setState({\n            animation: true\n          });\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setTimeout\", function (duration) {\n      if (canUseDOM) {\n        _this.timeout = window.setTimeout(function () {\n          var _this$state2 = _this.state,\n              slides = _this$state2.slides,\n              current = _this$state2.current;\n          var targetIndex = current < slides.length - 1 ? current + 1 : 0;\n\n          _this.go(targetIndex);\n        }, duration);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clearTimeout\", function () {\n      clearTimeout(_this.timeout);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getSlideRef\", function (id) {\n      return function (slide) {\n        _this.slidesStore[\"slide-\".concat(id)] = slide;\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getViewportRef\", function (viewport) {\n      _this.viewport = viewport ? viewport.container : {};\n    });\n\n    var _current = typeof props.slideIndex === 'number' ? props.slideIndex : props.initialSlideIndex;\n\n    _this.state = {\n      containerWidth: 0,\n      current: _current,\n      deltaX: 0,\n      shiftX: 0,\n      slides: [],\n      animation: false,\n      duration: 0.24\n    };\n    _this.container = React.createRef();\n    _this.slidesStore = {};\n    return _this;\n  }\n\n  _createClass(Gallery, [{\n    key: \"initializeSlides\",\n    value: function initializeSlides() {\n      var _this2 = this;\n\n      var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};\n      var slides = React.Children.map(this.props.children, function (_item, i) {\n        var elem = _this2.slidesStore[\"slide-\".concat(i)];\n\n        return {\n          coordX: elem.offsetLeft,\n          width: elem.offsetWidth\n        };\n      });\n      var containerWidth = this.container.current.offsetWidth;\n      var viewportWidth = this.viewport.offsetWidth;\n      var layerWidth = slides.reduce(function (val, slide) {\n        return slide.width + val;\n      }, 0);\n      var min = this.calcMin({\n        containerWidth: containerWidth,\n        layerWidth: layerWidth,\n        viewportWidth: viewportWidth,\n        slides: slides\n      });\n      var max = this.calcMax({\n        viewportWidth: viewportWidth,\n        slides: slides\n      });\n      this.setState({\n        min: min,\n        max: max,\n        layerWidth: layerWidth,\n        containerWidth: containerWidth,\n        slides: slides\n      }, callback);\n    }\n  }, {\n    key: \"calcMin\",\n    value: function calcMin(_ref) {\n      var containerWidth = _ref.containerWidth,\n          layerWidth = _ref.layerWidth,\n          viewportWidth = _ref.viewportWidth,\n          slides = _ref.slides;\n\n      switch (this.props.align) {\n        case 'left':\n          return containerWidth - layerWidth;\n\n        case 'right':\n          return viewportWidth - layerWidth;\n\n        case 'center':\n          if (this.isCenterWithCustomWidth && slides.length) {\n            var _slides = slides[slides.length - 1],\n                coordX = _slides.coordX,\n                width = _slides.width;\n            return viewportWidth / 2 - coordX - width / 2;\n          } else {\n            return viewportWidth - (containerWidth - viewportWidth) / 2 - layerWidth;\n          }\n\n      }\n    }\n  }, {\n    key: \"calcMax\",\n    value: function calcMax(_ref2) {\n      var viewportWidth = _ref2.viewportWidth,\n          slides = _ref2.slides;\n\n      if (this.isCenterWithCustomWidth && slides.length) {\n        var _slides$ = slides[0],\n            width = _slides$.width,\n            coordX = _slides$.coordX;\n        return viewportWidth / 2 - coordX - width / 2;\n      } else {\n        return 0;\n      }\n    }\n    /**\n     * Считает отступ слоя галереи\n     * @param {Number} targetIndex ID целевого слайда\n     * @returns {Number} Значения отступа\n     */\n\n  }, {\n    key: \"calculateIndent\",\n    value: function calculateIndent(targetIndex) {\n      var slides = this.state.slides;\n\n      if (!this.isDraggable()) {\n        return 0;\n      }\n\n      var targetSlide = slides.length ? slides[targetIndex] : null;\n\n      if (targetSlide) {\n        var coordX = targetSlide.coordX,\n            width = targetSlide.width;\n\n        if (this.isCenterWithCustomWidth) {\n          var viewportWidth = this.viewport.offsetWidth;\n          return viewportWidth / 2 - coordX - width / 2;\n        }\n\n        return this.validateIndent(-1 * coordX);\n      } else {\n        return 0;\n      }\n    }\n    /**\n     * Считает отступ слоя галереи во время драга\n     * @returns {Number} Значения отступа\n     */\n\n  }, {\n    key: \"calculateDragIndent\",\n    value: function calculateDragIndent() {\n      var _this$state3 = this.state,\n          shiftX = _this$state3.shiftX,\n          deltaX = _this$state3.deltaX,\n          min = _this$state3.min,\n          max = _this$state3.max;\n      var indent = shiftX + deltaX;\n\n      if (indent > max) {\n        return max + Number((indent - max) / 3);\n      } else if (indent < min) {\n        return min + Number((indent - min) / 3);\n      }\n\n      return indent;\n    }\n  }, {\n    key: \"validateIndent\",\n    value: function validateIndent(value) {\n      var _this$state4 = this.state,\n          min = _this$state4.min,\n          max = _this$state4.max;\n\n      if (value < min) {\n        return min;\n      } else if (value > max) {\n        return max;\n      }\n\n      return value;\n    }\n  }, {\n    key: \"isDraggable\",\n    value: function isDraggable() {\n      return this.state.layerWidth > this.state.containerWidth;\n    }\n    /**\n     * Получает индекс слайда, к которому будет осуществлен переход\n     * @returns {Number} Индекс слайда\n     */\n\n  }, {\n    key: \"getTarget\",\n    value: function getTarget() {\n      var _this$state5 = this.state,\n          slides = _this$state5.slides,\n          current = _this$state5.current,\n          deltaX = _this$state5.deltaX,\n          shiftX = _this$state5.shiftX,\n          startT = _this$state5.startT,\n          max = _this$state5.max;\n      var expectDeltaX = deltaX / (Date.now() - startT) * 240 * 0.6;\n      var shift = shiftX + deltaX + expectDeltaX - max;\n      var direction = deltaX < 0 ? 1 : -1; // Находим ближайшую границу слайда к текущему отступу\n\n      var targetIndex = slides.reduce(function (val, item, index) {\n        var previousValue = Math.abs(slides[val].coordX + shift);\n        var currentValue = Math.abs(item.coordX + shift);\n        return previousValue < currentValue ? val : index;\n      }, current);\n\n      if (targetIndex === current) {\n        var targetSlide = current + direction;\n\n        if (targetSlide >= 0 && targetSlide < slides.length) {\n          if (Math.abs(deltaX) > slides[targetSlide].width * 0.05) {\n            targetIndex = targetSlide;\n          }\n        }\n      }\n\n      return targetIndex;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      this.initializeSlides(function () {\n        _this3.setState({\n          shiftX: _this3.calculateIndent(_this3.state.current)\n        });\n      });\n      window.addEventListener('resize', this.onResize);\n\n      if (this.props.autoplay) {\n        this.setTimeout(this.props.autoplay);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.props.children !== prevProps.children) {\n        this.isChildrenDirty = true;\n      }\n\n      if (this.isChildrenDirty) {\n        this.isChildrenDirty = false;\n        this.initializeSlides();\n      }\n\n      if (prevState.current !== this.state.current && this.props.onChange) {\n        this.props.onChange(this.state.current);\n      }\n\n      if (this.props.autoplay && !prevProps.autoplay) {\n        if (this.props.autoplay) {\n          this.setTimeout(this.props.autoplay);\n        }\n      }\n\n      if (!this.props.autoplay && prevProps.autoplay) {\n        this.clearTimeout();\n      }\n\n      if (this.props.slideIndex !== prevProps.slideIndex && typeof this.props.slideIndex === 'number') {\n        this.go(this.props.slideIndex);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('resize', this.onResize);\n      this.clearTimeout();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$state6 = this.state,\n          animation = _this$state6.animation,\n          duration = _this$state6.duration,\n          current = _this$state6.current,\n          dragging = _this$state6.dragging;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          slideWidth = _this$props.slideWidth,\n          autoplay = _this$props.autoplay,\n          initialSlideIndex = _this$props.initialSlideIndex,\n          slideIndex = _this$props.slideIndex,\n          onDragStart = _this$props.onDragStart,\n          onDragEnd = _this$props.onDragEnd,\n          onChange = _this$props.onChange,\n          onEnd = _this$props.onEnd,\n          align = _this$props.align,\n          bullets = _this$props.bullets,\n          className = _this$props.className,\n          platform = _this$props.platform,\n          restProps = _objectWithoutProperties(_this$props, [\"children\", \"slideWidth\", \"autoplay\", \"initialSlideIndex\", \"slideIndex\", \"onDragStart\", \"onDragEnd\", \"onChange\", \"onEnd\", \"align\", \"bullets\", \"className\", \"platform\"]);\n\n      var indent = dragging ? this.calculateDragIndent() : this.calculateIndent(current);\n      var layerStyle = {\n        WebkitTransform: \"translateX(\".concat(indent, \"px)\"),\n        transform: \"translateX(\".concat(indent, \"px)\"),\n        WebkitTransition: animation ? \"-webkit-transform \".concat(duration, \"s cubic-bezier(.1, 0, .25, 1)\") : 'none',\n        transition: animation ? \"transform \".concat(duration, \"s cubic-bezier(.1, 0, .25, 1)\") : 'none'\n      };\n      return React.createElement(\"div\", _extends({\n        className: classNames(getClassName('Gallery', platform), className, \"Gallery--\".concat(align), {\n          'Gallery--dragging': dragging,\n          'Gallery--custom-width': slideWidth === 'custom'\n        })\n      }, restProps, {\n        ref: this.container\n      }), React.createElement(Touch, {\n        className: \"Gallery__viewport\",\n        onStartX: this.onStart,\n        onMoveX: this.onMoveX,\n        onEnd: this.onEnd,\n        style: {\n          width: slideWidth === 'custom' ? '100%' : slideWidth\n        },\n        ref: this.getViewportRef\n      }, React.createElement(\"div\", {\n        className: \"Gallery__layer\",\n        style: layerStyle\n      }, React.Children.map(children, function (item, i) {\n        return React.createElement(\"div\", {\n          className: \"Gallery__slide\",\n          key: \"slide-\".concat(i),\n          ref: _this4.getSlideRef(i)\n        }, item);\n      }))), bullets && React.createElement(\"div\", {\n        className: classNames('Gallery__bullets', \"Gallery__bullets--\".concat(bullets))\n      }, React.Children.map(children, function (_item, index) {\n        return React.createElement(\"div\", {\n          className: classNames('Gallery__bullet', {\n            'Gallery__bullet--active': index === current\n          }),\n          key: index\n        });\n      })));\n    }\n  }, {\n    key: \"isCenterWithCustomWidth\",\n    get: function get() {\n      return this.props.slideWidth === 'custom' && this.props.align === 'center';\n    }\n  }]);\n\n  return Gallery;\n}(Component);\n\n_defineProperty(Gallery, \"defaultProps\", {\n  slideWidth: '100%',\n  children: '',\n  autoplay: 0,\n  initialSlideIndex: 0,\n  align: 'left',\n  bullets: false\n});\n\nexport default withPlatform(Gallery);","map":{"version":3,"sources":["../../../../src/components/Gallery/Gallery.tsx"],"names":["Gallery","Component","current","props","containerWidth","deltaX","shiftX","slides","animation","duration","React","slideWidth","children","autoplay","initialSlideIndex","align","bullets","callback","elem","coordX","width","offsetWidth","viewportWidth","layerWidth","slide","min","max","targetIndex","targetSlide","indent","Number","value","startT","expectDeltaX","Date","shift","direction","previousValue","Math","currentValue","item","e","dragging","isSlideX","window","clearTimeout","viewport","prevProps","prevState","slideIndex","onDragStart","onDragEnd","onChange","onEnd","className","platform","restProps","layerStyle","WebkitTransform","transform","WebkitTransition","transition","classNames","getClassName","container","getViewportRef","index","withPlatform"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport getClassName from '../../helpers/getClassName';\nimport Touch from '../Touch/Touch';\nimport classNames from '../../lib/classNames';\nimport withPlatform from '../../hoc/withPlatform';\nimport { HasClassName, HasChildren, HasStyleObject, HasPlatform } from '../../types/props';\nimport { canUseDOM } from '../../lib/dom';\n\nexport interface GalleryProps extends HasStyleObject, HasChildren, HasClassName, HasPlatform {\n  slideWidth?: string | number;\n  autoplay?: number;\n  initialSlideIndex?: number;\n  slideIndex?: number;\n  onDragStart?(): void;\n  onDragEnd?(): void,\n  onChange?(current: GalleryState['current']): void,\n  onEnd?({ targetIndex }: { targetIndex: GalleryState['current'] }): void,\n  align?: 'left' | 'center' | 'right',\n  bullets?: 'dark' | 'light' | false\n}\n\nexport interface GalleryState {\n  containerWidth: number,\n  layerWidth?: number,\n  min?: number,\n  max?: number,\n  startT?: number,\n  current: number,\n  deltaX: number,\n  shiftX: number,\n  slides: GallerySlidesState[],\n  animation: boolean,\n  duration: number,\n  dragging?: boolean\n}\n\nexport interface GallerySlidesState {\n  coordX: number,\n  width: number\n}\n\nclass Gallery extends Component<GalleryProps, GalleryState> {\n  constructor (props) {\n    super(props);\n\n    const current = typeof props.slideIndex === 'number' ? props.slideIndex : props.initialSlideIndex;\n\n    this.state = {\n      containerWidth: 0,\n      current,\n      deltaX: 0,\n      shiftX: 0,\n      slides: [],\n      animation: false,\n      duration: 0.24\n    };\n\n    this.container = React.createRef();\n\n    this.slidesStore = {};\n  }\n\n  container: React.RefObject<HTMLDivElement>;\n  slidesStore: Object;\n  viewport: HTMLElement;\n  timeout: number;\n  isChildrenDirty: boolean;\n\n  static defaultProps = {\n    slideWidth: '100%',\n    children: '',\n    autoplay: 0,\n    initialSlideIndex: 0,\n    align: 'left',\n    bullets: false\n  };\n\n  get isCenterWithCustomWidth () {\n    return this.props.slideWidth === 'custom' && this.props.align === 'center';\n  }\n\n  initializeSlides (callback = () => {}) {\n    const slides = React.Children.map(this.props.children, (_item, i): GallerySlidesState => {\n      const elem = this.slidesStore[`slide-${i}`];\n      return {\n        coordX: elem.offsetLeft,\n        width: elem.offsetWidth\n      };\n    });\n\n    const containerWidth = this.container.current.offsetWidth;\n    const viewportWidth = this.viewport.offsetWidth;\n    const layerWidth = slides.reduce((val, slide) => slide.width + val, 0);\n\n    const min = this.calcMin({ containerWidth, layerWidth, viewportWidth, slides });\n    const max = this.calcMax({ viewportWidth, slides });\n\n    this.setState({ min, max, layerWidth, containerWidth, slides }, callback);\n  }\n\n  calcMin ({ containerWidth, layerWidth, viewportWidth, slides }) {\n    switch (this.props.align) {\n      case 'left':\n        return containerWidth - layerWidth;\n      case 'right':\n        return viewportWidth - layerWidth;\n      case 'center':\n        if (this.isCenterWithCustomWidth && slides.length) {\n          const { coordX, width } = slides[slides.length - 1];\n          return (viewportWidth / 2) - coordX - (width / 2);\n        } else {\n          return viewportWidth - (containerWidth - viewportWidth) / 2 - layerWidth;\n        }\n    }\n  }\n\n  calcMax ({ viewportWidth, slides }) {\n    if (this.isCenterWithCustomWidth && slides.length) {\n      const { width, coordX } = slides[0];\n      return (viewportWidth / 2) - coordX - (width / 2);\n    } else {\n      return 0;\n    }\n  }\n\n  /**\n   * Считает отступ слоя галереи\n   * @param {Number} targetIndex ID целевого слайда\n   * @returns {Number} Значения отступа\n   */\n  calculateIndent (targetIndex) {\n    const { slides } = this.state;\n\n    if (!this.isDraggable()) {\n      return 0;\n    }\n\n    const targetSlide = slides.length ? slides[targetIndex] : null;\n\n    if (targetSlide) {\n      const { coordX, width } = targetSlide;\n\n      if (this.isCenterWithCustomWidth) {\n        const viewportWidth = this.viewport.offsetWidth;\n        return (viewportWidth / 2) - coordX - (width / 2);\n      }\n\n      return this.validateIndent(-1 * coordX);\n    } else {\n      return 0;\n    }\n  }\n\n  /**\n   * Считает отступ слоя галереи во время драга\n   * @returns {Number} Значения отступа\n   */\n  calculateDragIndent () {\n    const { shiftX, deltaX, min, max } = this.state;\n    const indent = shiftX + deltaX;\n\n    if (indent > max) {\n      return max + Number((indent - max) / 3);\n    } else if (indent < min) {\n      return min + Number((indent - min) / 3);\n    }\n\n    return indent;\n  }\n\n  validateIndent (value) {\n    const { min, max } = this.state;\n\n    if (value < min) {\n      return min;\n    } else if (value > max) {\n      return max;\n    }\n\n    return value;\n  }\n\n  isDraggable () {\n    return this.state.layerWidth > this.state.containerWidth;\n  }\n\n  /**\n   * Получает индекс слайда, к которому будет осуществлен переход\n   * @returns {Number} Индекс слайда\n   */\n  getTarget () {\n    const { slides, current, deltaX, shiftX, startT, max } = this.state;\n    const expectDeltaX = deltaX / (Date.now() - startT) * 240 * 0.6;\n    const shift = shiftX + deltaX + expectDeltaX - max;\n    const direction = deltaX < 0 ? 1 : -1;\n\n    // Находим ближайшую границу слайда к текущему отступу\n    let targetIndex = slides.reduce((val, item, index) => {\n      const previousValue = Math.abs(slides[val].coordX + shift);\n      const currentValue = Math.abs(item.coordX + shift);\n\n      return previousValue < currentValue ? val : index;\n    }, current);\n\n    if (targetIndex === current) {\n      let targetSlide = current + direction;\n\n      if (targetSlide >= 0 && targetSlide < slides.length) {\n        if (Math.abs(deltaX) > slides[targetSlide].width * 0.05) {\n          targetIndex = targetSlide;\n        }\n      }\n    }\n\n    return targetIndex;\n  }\n\n  go = (targetIndex) => {\n    this.setState({\n      animation: true,\n      shiftX: this.calculateIndent(targetIndex),\n      current: targetIndex\n    });\n\n    if (this.timeout) {\n      this.clearTimeout();\n      this.setTimeout(this.props.autoplay);\n    }\n  };\n\n  onStart = (e) => {\n    this.setState({\n      animation: false,\n      startT: e.startT\n    });\n  }\n\n  onMoveX = (e): void => {\n    if (this.isDraggable()) {\n      e.originalEvent.preventDefault();\n\n      if (e.isSlideX) {\n        this.props.onDragStart && this.props.onDragStart();\n\n        if (this.state.deltaX !== e.shiftX || this.state.dragging !== e.isSlideX) {\n          this.setState({\n            deltaX: e.shiftX,\n            dragging: e.isSlideX\n          });\n        }\n      }\n    }\n  }\n\n  onEnd = (e) => {\n    const targetIndex = e.isSlide ? this.getTarget() : this.state.current;\n    this.props.onDragEnd && this.props.onDragEnd();\n\n    this.setState({\n      shiftX: this.calculateIndent(targetIndex),\n      deltaX: 0,\n      animation: true,\n      current: targetIndex\n    });\n\n    if (this.props.onEnd) {\n      this.props.onEnd({ targetIndex });\n    }\n\n    if (this.timeout) {\n      this.clearTimeout();\n      this.setTimeout(this.props.autoplay);\n    }\n\n    return true;\n  }\n\n  onResize = () => {\n    this.initializeSlides();\n\n    const { layerWidth, slides } = this.state;\n    const containerWidth = this.container.current.offsetWidth;\n\n    const viewportWidth = this.viewport.offsetWidth;\n\n    this.setState({\n      shiftX: this.calculateIndent(this.state.current),\n      containerWidth,\n      min: this.calcMin({ layerWidth, containerWidth, viewportWidth, slides }),\n      max: this.calcMax({ viewportWidth, slides }),\n      animation: false\n    }, () => {\n      window.requestAnimationFrame(() => this.setState({ animation: true }));\n    });\n  };\n\n  setTimeout = (duration) => {\n    if (canUseDOM) {\n      this.timeout = window.setTimeout(() => {\n        const { slides, current } = this.state;\n        const targetIndex = current < slides.length - 1 ? current + 1 : 0;\n\n        this.go(targetIndex);\n      }, duration);\n    }\n  };\n\n  clearTimeout = () => {\n    clearTimeout(this.timeout);\n  };\n\n  getSlideRef = (id) => (slide) => {\n    this.slidesStore[`slide-${id}`] = slide;\n  }\n\n  getViewportRef = (viewport) => {\n    this.viewport = viewport ? viewport.container : {};\n  }\n\n  componentDidMount () {\n    this.initializeSlides(() => {\n      this.setState({\n        shiftX: this.calculateIndent(this.state.current)\n      });\n    });\n\n    window.addEventListener('resize', this.onResize);\n\n    if (this.props.autoplay) {\n      this.setTimeout(this.props.autoplay);\n    }\n  }\n\n  componentDidUpdate (prevProps, prevState) {\n    if (this.props.children !== prevProps.children) {\n      this.isChildrenDirty = true;\n    }\n\n    if (this.isChildrenDirty) {\n      this.isChildrenDirty = false;\n      this.initializeSlides();\n    }\n    if (prevState.current !== this.state.current && this.props.onChange) {\n      this.props.onChange(this.state.current);\n    }\n\n    if (this.props.autoplay && !prevProps.autoplay) {\n      if (this.props.autoplay) {\n        this.setTimeout(this.props.autoplay);\n      }\n    }\n\n    if (!this.props.autoplay && prevProps.autoplay) {\n      this.clearTimeout();\n    }\n\n    if (this.props.slideIndex !== prevProps.slideIndex && typeof this.props.slideIndex === 'number') {\n      this.go(this.props.slideIndex);\n    }\n  }\n\n  componentWillUnmount () {\n    window.removeEventListener('resize', this.onResize);\n    this.clearTimeout();\n  }\n\n  render () {\n    const { animation, duration, current, dragging } = this.state;\n    const {\n      children,\n      slideWidth,\n      autoplay,\n      initialSlideIndex,\n      slideIndex,\n      onDragStart,\n      onDragEnd,\n      onChange,\n      onEnd,\n      align,\n      bullets,\n      className,\n      platform,\n      ...restProps\n    } = this.props;\n\n    const indent = dragging ? this.calculateDragIndent() : this.calculateIndent(current);\n\n    const layerStyle = {\n      WebkitTransform: `translateX(${indent}px)`,\n      transform: `translateX(${indent}px)`,\n      WebkitTransition: animation ? `-webkit-transform ${duration}s cubic-bezier(.1, 0, .25, 1)` : 'none',\n      transition: animation ? `transform ${duration}s cubic-bezier(.1, 0, .25, 1)` : 'none'\n    };\n\n    return (\n      <div className={classNames(getClassName('Gallery', platform), className, `Gallery--${align}`, {\n        'Gallery--dragging': dragging,\n        'Gallery--custom-width': slideWidth === 'custom'\n      })} {...restProps} ref={this.container}>\n        <Touch\n          className='Gallery__viewport'\n          onStartX={this.onStart}\n          onMoveX={this.onMoveX}\n          onEnd={this.onEnd}\n          style={{ width: slideWidth === 'custom' ? '100%' : slideWidth }}\n          ref={this.getViewportRef}\n        >\n          <div className='Gallery__layer' style={layerStyle}>\n            {React.Children.map(children, (item, i) => (\n              <div className='Gallery__slide' key={`slide-${i}`} ref={this.getSlideRef(i)}>{item}</div>\n            ))}\n          </div>\n        </Touch>\n\n        {bullets &&\n        <div className={classNames('Gallery__bullets', `Gallery__bullets--${bullets}`)}>\n          {React.Children.map(children, (_item, index) => (\n            <div\n              className={classNames('Gallery__bullet', { 'Gallery__bullet--active': index === current })}\n              key={index}\n            />\n          ))}\n        </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default withPlatform(Gallery);\n"]},"metadata":{},"sourceType":"module"}