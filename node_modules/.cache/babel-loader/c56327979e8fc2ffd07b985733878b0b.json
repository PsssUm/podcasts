{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport classNames from '../../lib/classNames';\nimport FormField from '../FormField/FormField';\n\nvar Input = function Input(_ref) {\n  var alignment = _ref.alignment,\n      status = _ref.status,\n      getRef = _ref.getRef,\n      className = _ref.className,\n      getRootRef = _ref.getRootRef,\n      restProps = _objectWithoutProperties(_ref, [\"alignment\", \"status\", \"getRef\", \"className\", \"getRootRef\"]);\n\n  return React.createElement(FormField, {\n    className: classNames('Input', className, _defineProperty({}, \"Input--\".concat(alignment), !!alignment)),\n    status: status,\n    getRootRef: getRootRef\n  }, React.createElement(\"input\", _extends({}, restProps, {\n    className: \"Input__el\",\n    ref: getRef\n  })));\n};\n\nInput.defaultProps = {\n  type: 'text'\n};\nexport default Input;","map":{"version":3,"sources":["../../../../src/components/Input/Input.tsx"],"names":["Input","alignment","status","getRef","className","getRootRef","restProps","classNames","type"],"mappings":";;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,UAAA,MAAA,sBAAA;AACA,OAAA,SAAA,MAAA,wBAAA;;AAYA,IAAMA,KAAoC,GAAG,SAAvCA,KAAuC,CAAA,IAAA,EAO3B;AAAA,MANhBC,SAMgB,GAAA,IAAA,CANhBA,SAMgB;AAAA,MALhBC,MAKgB,GAAA,IAAA,CALhBA,MAKgB;AAAA,MAJhBC,MAIgB,GAAA,IAAA,CAJhBA,MAIgB;AAAA,MAHhBC,SAGgB,GAAA,IAAA,CAHhBA,SAGgB;AAAA,MAFhBC,UAEgB,GAAA,IAAA,CAFhBA,UAEgB;AAAA,MADbC,SACa,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,WAAA,EAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,YAAA,CAAA,CAAA;;AAChB,SACE,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA;AACE,IAAA,SAAS,EAAEC,UAAU,CAAA,OAAA,EAAA,SAAA,EAAA,eAAA,CAAA,EAAA,EAAA,UAAA,MAAA,CAAA,SAAA,CAAA,EAAgD,CAAC,CADxE,SACuB,CAAA,CADvB;AAEE,IAAA,MAAM,EAFR,MAAA;AAGE,IAAA,UAAU,EAAEF;AAHd,GAAA,EAKE,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA,QAAA,CAAA,EAAA,EAAA,SAAA,EAAA;AAAsB,IAAA,SAAS,EAA/B,WAAA;AAA4C,IAAA,GAAG,EAAEF;AAAjD,GAAA,CAAA,CALF,CADF;AARF,CAAA;;AAmBAH,KAAK,CAALA,YAAAA,GAAqB;AACnBQ,EAAAA,IAAI,EAAE;AADa,CAArBR;AAIA,eAAA,KAAA","sourcesContent":["import React, { FunctionComponent, HTMLAttributes } from 'react';\nimport classNames from '../../lib/classNames';\nimport FormField, { FormFieldProps } from '../FormField/FormField';\nimport { HasRef, HasRootRef } from '../../types/props';\n\nexport interface InputProps extends HTMLAttributes<HTMLInputElement>, HasRef<HTMLInputElement>, HasRootRef<HTMLDivElement> {\n  alignment?: 'left' | 'center' | 'right';\n  /**\n   * Значение `verified` устарело и будет удалено в 3.0.0. Используйте вместо него `valid`\n   */\n  status?: FormFieldProps['status'];\n  type?: string\n}\n\nconst Input: FunctionComponent<InputProps> = ({\n  alignment,\n  status,\n  getRef,\n  className,\n  getRootRef,\n  ...restProps\n}: InputProps) => {\n  return (\n    <FormField\n      className={classNames('Input', className, { [`Input--${alignment}`]: !!alignment })}\n      status={status}\n      getRootRef={getRootRef}\n    >\n      <input {...restProps} className=\"Input__el\" ref={getRef} />\n    </FormField>\n  );\n};\n\nInput.defaultProps = {\n  type: 'text'\n};\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}