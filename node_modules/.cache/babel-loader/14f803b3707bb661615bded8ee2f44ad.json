{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport Touch from '../Touch/Touch';\nimport { tabbarHeight } from '../../appearance/constants';\nimport withInsets from '../../hoc/withInsets';\nimport withPlatform from '../../hoc/withPlatform';\nimport { isNumeric } from '../../lib/utils';\n\nvar Panel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Panel, _Component);\n\n  function Panel() {\n    _classCallCheck(this, Panel);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Panel).apply(this, arguments));\n  }\n\n  _createClass(Panel, [{\n    key: \"getChildContext\",\n    value: function getChildContext() {\n      return {\n        panel: this.props.id\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          centered = _this$props.centered,\n          children = _this$props.children,\n          theme = _this$props.theme,\n          insets = _this$props.insets,\n          platform = _this$props.platform,\n          restProps = _objectWithoutProperties(_this$props, [\"className\", \"centered\", \"children\", \"theme\", \"insets\", \"platform\"]);\n\n      var tabbarPadding = this.context.hasTabbar ? tabbarHeight : 0;\n      return React.createElement(\"div\", _extends({}, restProps, {\n        className: classNames(getClassName('Panel', platform), className, _defineProperty({\n          'Panel--centered': centered\n        }, \"Panel--tm-\".concat(theme), theme))\n      }), React.createElement(Touch, {\n        className: \"Panel__in\",\n        style: {\n          paddingBottom: isNumeric(insets.bottom) ? insets.bottom + tabbarPadding : null\n        }\n      }, React.createElement(\"div\", {\n        className: \"Panel__in-before\"\n      }), children, React.createElement(\"div\", {\n        className: \"Panel__in-after\"\n      })));\n    }\n  }]);\n\n  return Panel;\n}(Component);\n\n_defineProperty(Panel, \"childContextTypes\", {\n  panel: PropTypes.string\n});\n\n_defineProperty(Panel, \"propTypes\", {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  theme: PropTypes.oneOf(['white', 'gray']),\n  id: PropTypes.string.isRequired,\n  centered: PropTypes.bool,\n  style: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  insets: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  platform: PropTypes.string\n});\n\n_defineProperty(Panel, \"defaultProps\", {\n  children: '',\n  theme: 'gray',\n  centered: false\n});\n\n_defineProperty(Panel, \"contextTypes\", {\n  hasTabbar: PropTypes.bool\n});\n\nexport default withPlatform(withInsets(Panel));","map":{"version":3,"sources":["../../../../src/components/Panel/Panel.js"],"names":["Panel","Component","panel","PropTypes","string","children","className","theme","id","centered","style","insets","platform","hasTabbar","bool","restProps","tabbarPadding","classNames","getClassName","paddingBottom","isNumeric","withPlatform","withInsets"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport Touch from '../Touch/Touch';\nimport { tabbarHeight } from '../../appearance/constants';\nimport withInsets from '../../hoc/withInsets';\nimport withPlatform from '../../hoc/withPlatform';\nimport { isNumeric } from '../../lib/utils';\n\nclass Panel extends Component {\n  static childContextTypes = {\n    panel: PropTypes.string\n  };\n\n  static propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n    theme: PropTypes.oneOf(['white', 'gray']),\n    id: PropTypes.string.isRequired,\n    centered: PropTypes.bool,\n    style: PropTypes.object,\n    /**\n     * @ignore\n     */\n    insets: PropTypes.object,\n    /**\n     * @ignore\n     */\n    platform: PropTypes.string\n  };\n\n  static defaultProps = {\n    children: '',\n    theme: 'gray',\n    centered: false\n  };\n\n  static contextTypes = {\n    hasTabbar: PropTypes.bool\n  };\n\n  getChildContext () {\n    return {\n      panel: this.props.id\n    };\n  }\n\n  render () {\n    const { className, centered, children, theme, insets, platform, ...restProps } = this.props;\n    const tabbarPadding = this.context.hasTabbar ? tabbarHeight : 0;\n\n    return (\n      <div {...restProps} className={classNames(getClassName('Panel', platform), className, {\n        'Panel--centered': centered,\n        [`Panel--tm-${theme}`]: theme\n      })}>\n        <Touch className=\"Panel__in\" style={{\n          paddingBottom: isNumeric(insets.bottom) ? (insets.bottom + tabbarPadding) : null\n        }}>\n          <div className=\"Panel__in-before\" />\n          {children}\n          <div className=\"Panel__in-after\" />\n        </Touch>\n      </div>\n    );\n  }\n}\n\nexport default withPlatform(withInsets(Panel));\n"]},"metadata":{},"sourceType":"module"}