{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport usePlatform from '../../hooks/usePlatform';\n\nvar FormField = function FormField(_ref) {\n  var TagName = _ref.TagName,\n      className = _ref.className,\n      children = _ref.children,\n      status = _ref.status,\n      getRootRef = _ref.getRootRef,\n      restProps = _objectWithoutProperties(_ref, [\"TagName\", \"className\", \"children\", \"status\", \"getRootRef\"]);\n\n  var platform = usePlatform(); // Не используем тут JSX из-за этой проблемы: https://github.com/Microsoft/TypeScript/issues/28892\n\n  return React.createElement(TagName, _objectSpread({}, restProps, {\n    ref: getRootRef,\n    className: classNames(getClassName('FormField', platform), _defineProperty({}, \"FormField--s-\".concat(status), status !== 'default'), className)\n  }), React.createElement(React.Fragment, null, children, React.createElement(\"div\", {\n    className: \"FormField__border\"\n  })));\n};\n\nFormField.defaultProps = {\n  status: 'default',\n  TagName: 'div'\n};\nexport default FormField;","map":{"version":3,"sources":["../../../../src/components/FormField/FormField.tsx"],"names":["FormField","TagName","className","children","status","getRootRef","restProps","platform","usePlatform","ref","classNames","getClassName"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,YAAA,MAAA,4BAAA;AACA,OAAA,UAAA,MAAA,sBAAA;AACA,OAAA,WAAA,MAAA,yBAAA;;AAcA,IAAMA,SAAkD,GAAG,SAArDA,SAAqD,CAAA,IAAA,EAOrC;AAAA,MANpBC,OAMoB,GAAA,IAAA,CANpBA,OAMoB;AAAA,MALpBC,SAKoB,GAAA,IAAA,CALpBA,SAKoB;AAAA,MAJpBC,QAIoB,GAAA,IAAA,CAJpBA,QAIoB;AAAA,MAHpBC,MAGoB,GAAA,IAAA,CAHpBA,MAGoB;AAAA,MAFpBC,UAEoB,GAAA,IAAA,CAFpBA,UAEoB;AAAA,MADjBC,SACiB,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,SAAA,EAAA,WAAA,EAAA,UAAA,EAAA,QAAA,EAAA,YAAA,CAAA,CAAA;;AACpB,MAAMC,QAAQ,GAAGC,WADG,EACpB,CADoB,CAEpB;;AACA,SAAO,KAAK,CAAL,aAAA,CAAA,OAAA,EAAA,aAAA,CAAA,EAAA,EAAA,SAAA,EAAA;AAELC,IAAAA,GAAG,EAFE,UAAA;AAGLP,IAAAA,SAAS,EAAEQ,UAAU,CAACC,YAAY,CAAA,WAAA,EAAb,QAAa,CAAb,EAAA,eAAA,CAAA,EAAA,EAAA,gBAAA,MAAA,CAAA,MAAA,CAAA,EACSP,MAAM,KADf,SAAA,CAAA,EAAA,SAAA;AAHhB,GAAA,CAAA,EAMJ,KAAA,CAAA,aAAA,CAAC,KAAD,CAAA,QAAA,EAAA,IAAA,EAAA,QAAA,EAA0B,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,CAA1B,CANI,CAAP;AAVF,CAAA;;AAmBAJ,SAAS,CAATA,YAAAA,GAAyB;AACvBI,EAAAA,MAAM,EADiB,SAAA;AAEvBH,EAAAA,OAAO,EAAE;AAFc,CAAzBD;AAKA,eAAA,SAAA","sourcesContent":["import React, { HTMLAttributes, ReactNode } from 'react';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport usePlatform from '../../hooks/usePlatform';\nimport { HasChildren, HasFormStatus, HasRootRef } from '../../types/props';\n\nexport interface FormFieldProps extends\n  HTMLAttributes<HTMLElement>,\n  HasRootRef<HTMLElement>,\n  HasChildren,\n  HasFormStatus\n{\n  TagName?: string;\n  top?: ReactNode;\n  bottom?: ReactNode;\n}\n\nconst FormField: React.FunctionComponent<FormFieldProps> = ({\n  TagName,\n  className,\n  children,\n  status,\n  getRootRef,\n  ...restProps\n}: FormFieldProps) => {\n  const platform = usePlatform();\n  // Не используем тут JSX из-за этой проблемы: https://github.com/Microsoft/TypeScript/issues/28892\n  return React.createElement(TagName, {\n    ...restProps,\n    ref: getRootRef,\n    className: classNames(getClassName('FormField', platform), {\n      [`FormField--s-${status}`]: status !== 'default'\n    }, className)\n  }, <React.Fragment>{children}<div className=\"FormField__border\" /></React.Fragment>);\n};\n\nFormField.defaultProps = {\n  status: 'default',\n  TagName: 'div'\n};\n\nexport default FormField;\n"]},"metadata":{},"sourceType":"module"}