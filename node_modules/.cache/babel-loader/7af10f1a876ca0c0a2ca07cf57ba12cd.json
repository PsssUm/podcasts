{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport Touch from '../Touch/Touch';\nimport getClassName from '../../helpers/getClassName';\nimport Slider from '../Slider/Slider';\nimport PropTypes from 'prop-types';\nimport classNames from '../../lib/classNames';\nvar baseClassNames = getClassName('Slider');\n\nvar RangeSlider =\n/*#__PURE__*/\nfunction (_Slider) {\n  _inherits(RangeSlider, _Slider);\n\n  function RangeSlider() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RangeSlider);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RangeSlider)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"onStart\", function (e) {\n      var absolutePosition = _this.validateAbsolute(e.startX - _this.state.containerLeft);\n\n      var percentPosition = _this.absoluteToPecent(absolutePosition);\n\n      var percentRange = _this.calcPercentRange(percentPosition);\n\n      _this.onChange(_this.percentToValue(percentRange), e);\n\n      if (_this.isControlledOutside) {\n        _this.setState({\n          startX: absolutePosition\n        });\n      } else {\n        _this.setState(_objectSpread({\n          startX: absolutePosition\n        }, percentRange));\n      }\n\n      var thumb = e.originalEvent.target.closest('.Slider__thumb');\n\n      if (thumb === _this.thumbStart) {\n        _this.setState({\n          active: 'start'\n        });\n      } else if (thumb === _this.thumbEnd) {\n        _this.setState({\n          active: 'end'\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onMoveX\", function (e) {\n      var absolutePosition = _this.validateAbsolute(_this.state.startX + (e.shiftX || 0));\n\n      var percentPosition = _this.absoluteToPecent(absolutePosition);\n\n      var percentRange = _this.calcPercentRange(percentPosition);\n\n      _this.onChange(_this.percentToValue(percentRange), e);\n\n      if (!_this.isControlledOutside) {\n        _this.setState(percentRange);\n      }\n\n      e.originalEvent.preventDefault();\n    });\n\n    return _this;\n  }\n\n  _createClass(RangeSlider, [{\n    key: \"calcPercentRange\",\n    value: function calcPercentRange(percent) {\n      var _this$state = this.state,\n          percentStart = _this$state.percentStart,\n          percentEnd = _this$state.percentEnd;\n\n      if (percentStart === 100) {\n        return {\n          percentStart: percent,\n          percentEnd: percentEnd\n        };\n      } else if (percentEnd === 0) {\n        return {\n          percentEnd: percent,\n          percentStart: percentStart\n        };\n      } else if (Math.abs(percentStart - percent) <= Math.abs(percentEnd - percent)) {\n        return {\n          percentStart: percent,\n          percentEnd: percentEnd\n        };\n      } else {\n        return {\n          percentEnd: percent,\n          percentStart: percentStart\n        };\n      }\n    }\n  }, {\n    key: \"validatePercent\",\n    value: function validatePercent(_ref) {\n      var percentStart = _ref.percentStart,\n          percentEnd = _ref.percentEnd;\n      return {\n        percentStart: _get(_getPrototypeOf(RangeSlider.prototype), \"validatePercent\", this).call(this, percentStart),\n        percentEnd: _get(_getPrototypeOf(RangeSlider.prototype), \"validatePercent\", this).call(this, percentEnd)\n      };\n    }\n  }, {\n    key: \"percentToValue\",\n    value: function percentToValue(_ref2) {\n      var percentStart = _ref2.percentStart,\n          percentEnd = _ref2.percentEnd;\n      return [_get(_getPrototypeOf(RangeSlider.prototype), \"percentToValue\", this).call(this, percentStart), _get(_getPrototypeOf(RangeSlider.prototype), \"percentToValue\", this).call(this, percentEnd)];\n    }\n  }, {\n    key: \"valueToPercent\",\n    value: function valueToPercent(_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 2),\n          valueStart = _ref4[0],\n          valueEnd = _ref4[1];\n\n      return {\n        percentStart: _get(_getPrototypeOf(RangeSlider.prototype), \"valueToPercent\", this).call(this, valueStart),\n        percentEnd: _get(_getPrototypeOf(RangeSlider.prototype), \"valueToPercent\", this).call(this, valueEnd)\n      };\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      window.addEventListener('resize', this.onResize);\n      this.onResize(function () {\n        _this2.setState(_this2.validatePercent(_this2.valueToPercent(_this2.value)));\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (this.isControlledOutside && nextProps.value !== this.props.value) {\n        this.setState(this.validatePercent(this.valueToPercent(nextProps.value)));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          className = _this$props.className,\n          min = _this$props.min,\n          max = _this$props.max,\n          step = _this$props.step,\n          value = _this$props.value,\n          defaultValue = _this$props.defaultValue,\n          onChange = _this$props.onChange,\n          getRootRef = _this$props.getRootRef,\n          restProps = _objectWithoutProperties(_this$props, [\"className\", \"min\", \"max\", \"step\", \"value\", \"defaultValue\", \"onChange\", \"getRootRef\"]);\n\n      return React.createElement(\"div\", _extends({}, restProps, {\n        className: classNames(baseClassNames, className),\n        ref: this.getRef\n      }), React.createElement(Touch, {\n        onStart: this.onStart,\n        onMoveX: this.onMoveX,\n        onEnd: this.onEnd,\n        className: \"Slider__in\"\n      }, React.createElement(\"div\", {\n        className: \"Slider__dragger\",\n        style: {\n          width: this.state.percentEnd - this.state.percentStart + '%',\n          left: this.state.percentStart + '%'\n        }\n      }, React.createElement(\"span\", {\n        className: classNames('Slider__thumb', 'Slider__thumb--start', {\n          'Slider__thumb--active': this.state.active === 'start'\n        }),\n        ref: function ref(el) {\n          return _this3.thumbStart = el;\n        }\n      }), React.createElement(\"span\", {\n        className: classNames('Slider__thumb', 'Slider__thumb--end', {\n          'Slider__thumb--active': this.state.active === 'end'\n        }),\n        ref: function ref(el) {\n          return _this3.thumbEnd = el;\n        }\n      }))));\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      if (this.isControlledOutside) {\n        return this.props.value;\n      } else if (this.props.hasOwnProperty('defaultValue')) {\n        return this.props.defaultValue;\n      } else {\n        return [this.props.min, this.props.max];\n      }\n    }\n  }]);\n\n  return RangeSlider;\n}(Slider);\n\n_defineProperty(RangeSlider, \"propTypes\", _objectSpread({}, Slider.propTypes, {\n  value: PropTypes.arrayOf(PropTypes.number),\n  defaultValue: PropTypes.arrayOf(PropTypes.number)\n}));\n\n_defineProperty(RangeSlider, \"defaultProps\", Slider.defaultProps);\n\nexport { RangeSlider as default };","map":{"version":3,"sources":["../../../../src/components/RangeSlider/RangeSlider.js"],"names":["baseClassNames","getClassName","RangeSlider","Slider","propTypes","value","PropTypes","defaultValue","defaultProps","absolutePosition","e","percentPosition","percentRange","startX","thumb","active","percent","percentStart","percentEnd","Math","valueStart","valueEnd","window","nextProps","className","min","max","step","onChange","getRootRef","restProps","classNames","getRef","width","left"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Touch from '../Touch/Touch';\nimport getClassName from '../../helpers/getClassName';\nimport Slider from '../Slider/Slider';\nimport PropTypes from 'prop-types';\nimport classNames from '../../lib/classNames';\n\nconst baseClassNames = getClassName('Slider');\n\nexport default class RangeSlider extends Slider {\n  static propTypes = {\n    ...Slider.propTypes,\n    value: PropTypes.arrayOf(PropTypes.number),\n    defaultValue: PropTypes.arrayOf(PropTypes.number)\n  };\n\n  static defaultProps = Slider.defaultProps;\n\n  onStart = e => {\n    const absolutePosition = this.validateAbsolute(e.startX - this.state.containerLeft);\n    const percentPosition = this.absoluteToPecent(absolutePosition);\n    const percentRange = this.calcPercentRange(percentPosition);\n\n    this.onChange(this.percentToValue(percentRange), e);\n\n    if (this.isControlledOutside) {\n      this.setState({ startX: absolutePosition });\n    } else {\n      this.setState({\n        startX: absolutePosition,\n        ...percentRange\n      });\n    }\n\n    const thumb = e.originalEvent.target.closest('.Slider__thumb');\n\n    if (thumb === this.thumbStart) {\n      this.setState({ active: 'start' });\n    } else if (thumb === this.thumbEnd) {\n      this.setState({ active: 'end' });\n    }\n  };\n\n  onMoveX = e => {\n    const absolutePosition = this.validateAbsolute(this.state.startX + (e.shiftX || 0));\n    const percentPosition = this.absoluteToPecent(absolutePosition);\n    const percentRange = this.calcPercentRange(percentPosition);\n\n    this.onChange(this.percentToValue(percentRange), e);\n\n    if (!this.isControlledOutside) {\n      this.setState(percentRange);\n    }\n\n    e.originalEvent.preventDefault();\n  };\n\n  calcPercentRange (percent) {\n    const { percentStart, percentEnd } = this.state;\n\n    if (percentStart === 100) {\n      return { percentStart: percent, percentEnd };\n    } else if (percentEnd === 0) {\n      return { percentEnd: percent, percentStart };\n    } else if (Math.abs(percentStart - percent) <= Math.abs(percentEnd - percent)) {\n      return { percentStart: percent, percentEnd };\n    } else {\n      return { percentEnd: percent, percentStart };\n    }\n  }\n\n  validatePercent ({ percentStart, percentEnd }) {\n    return {\n      percentStart: super.validatePercent(percentStart),\n      percentEnd: super.validatePercent(percentEnd)\n    };\n  }\n\n  percentToValue ({ percentStart, percentEnd }) {\n    return [super.percentToValue(percentStart), super.percentToValue(percentEnd)];\n  }\n\n  valueToPercent ([valueStart, valueEnd]) {\n    return {\n      percentStart: super.valueToPercent(valueStart),\n      percentEnd: super.valueToPercent(valueEnd)\n    };\n  }\n\n  get value () {\n    if (this.isControlledOutside) {\n      return this.props.value;\n    } else if (this.props.hasOwnProperty('defaultValue')) {\n      return this.props.defaultValue;\n    } else {\n      return [this.props.min, this.props.max];\n    }\n  }\n\n  componentDidMount () {\n    window.addEventListener('resize', this.onResize);\n    this.onResize(() => {\n      this.setState(this.validatePercent(this.valueToPercent(this.value)));\n    });\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (this.isControlledOutside && nextProps.value !== this.props.value) {\n      this.setState(this.validatePercent(this.valueToPercent(nextProps.value)));\n    }\n  }\n\n  render () {\n    const { className, min, max, step, value, defaultValue, onChange, getRootRef, ...restProps } = this.props;\n\n    return (\n      <div {...restProps} className={classNames(baseClassNames, className)} ref={this.getRef}>\n        <Touch onStart={this.onStart} onMoveX={this.onMoveX} onEnd={this.onEnd} className=\"Slider__in\">\n          <div\n            className=\"Slider__dragger\"\n            style={{\n              width: this.state.percentEnd - this.state.percentStart + '%',\n              left: this.state.percentStart + '%'\n            }}\n          >\n            <span\n              className={classNames('Slider__thumb', 'Slider__thumb--start', {\n                'Slider__thumb--active': this.state.active === 'start'\n              })}\n              ref={el => this.thumbStart = el}\n            />\n            <span\n              className={classNames('Slider__thumb', 'Slider__thumb--end', {\n                'Slider__thumb--active': this.state.active === 'end'\n              })}\n              ref={el => this.thumbEnd = el}\n            />\n          </div>\n        </Touch>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}