{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Touch, { TouchRootContext } from '../Touch/Touch';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport { setTransformStyle } from '../../lib/styles';\nimport { rubber } from '../../lib/touch';\nimport { IS_PLATFORM_ANDROID } from '../../lib/platform';\nimport transitionEvents from '../../lib/transitionEvents';\nimport withPlatform from '../../hoc/withPlatform';\nexport var TYPE_CARD = 'modal-card';\nexport var TYPE_PAGE = 'modal-page';\n\nfunction numberInRange(number, range) {\n  return number >= range[0] && number <= range[1];\n}\n\nfunction rangeTranslate(number) {\n  return Math.max(0, Math.min(98, number));\n}\n\nvar ModalRoot =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ModalRoot, _Component);\n\n  function ModalRoot(props) {\n    var _this;\n\n    _classCallCheck(this, ModalRoot);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ModalRoot).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"modalsState\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"documentScrolling\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"activeTransitions\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"maskElementRef\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"maskAnimationFrame\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"preventTouch\", function (event) {\n      if (event) {\n        while (event.originalEvent) {\n          event = event.originalEvent;\n        }\n\n        event.preventDefault();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onTouchMove\", function (e) {\n      if (_this.state.switching) return;\n      var activeModal = _this.state.activeModal || _this.state.nextModal;\n      if (!activeModal) return;\n      var modalState = _this.modalsState[activeModal];\n\n      if (modalState.type === TYPE_PAGE) {\n        return _this.onPageTouchMove(e, modalState);\n      }\n\n      if (modalState.type === TYPE_CARD) {\n        return _this.onCardTouchMove(e, modalState);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onTouchEnd\", function (e) {\n      var activeModal = _this.state.activeModal || _this.state.nextModal;\n      if (!activeModal) return;\n      var modalState = _this.modalsState[activeModal];\n\n      if (modalState.type === TYPE_PAGE) {\n        return _this.onPageTouchEnd(e, modalState);\n      }\n\n      if (modalState.type === TYPE_CARD) {\n        return _this.onCardTouchEnd(modalState);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onScroll\", function (e) {\n      var activeModal = _this.state.activeModal;\n\n      if (activeModal && e.target.closest('.ModalPage__content')) {\n        var modalState = _this.modalsState[activeModal];\n        modalState.contentScrolled = true;\n        clearTimeout(modalState.contentScrollStopTimeout);\n        modalState.contentScrollStopTimeout = window.setTimeout(function () {\n          if (modalState.contentScrolled) {\n            modalState.contentScrolled = false;\n          }\n        }, 250);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"prevNextSwitchEndHandler\", function () {\n      _this.activeTransitions = Math.max(0, _this.activeTransitions - 1);\n      if (_this.activeTransitions > 0) return;\n      var activeModal = _this.state.nextModal;\n      var newState = {\n        prevModal: null,\n        nextModal: null,\n        visibleModals: [activeModal],\n        activeModal: activeModal,\n        animated: false,\n        switching: false\n      };\n\n      if (!activeModal) {\n        newState.history = [];\n      }\n\n      _this.setState(newState);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onMaskClick\", function () {\n      if (!_this.state.switching) {\n        _this.triggerActiveModalClose();\n      }\n    });\n\n    var _activeModal = props.activeModal;\n    _this.state = {\n      activeModal: null,\n      prevModal: null,\n      nextModal: _activeModal,\n      visibleModals: _activeModal ? [_activeModal] : [],\n      animated: !!_activeModal,\n      switching: false,\n      history: _activeModal ? [_activeModal] : [],\n      isBack: false,\n      inited: false,\n      touchDown: false,\n      dragging: false\n    };\n    _this.activeTransitions = 0;\n    _this.maskElementRef = React.createRef();\n\n    _this.initModalsState();\n\n    return _this;\n  }\n\n  _createClass(ModalRoot, [{\n    key: \"initModalsState\",\n    value: function initModalsState() {\n      this.modalsState = this.modals.reduce(function (acc, Modal) {\n        var modalProps = Modal.props;\n        var state = {\n          id: Modal.props.id,\n          onClose: Modal.props.onClose,\n          dynamicContentHeight: !!modalProps.dynamicContentHeight\n        }; // ModalPage props\n\n        if (typeof modalProps.settlingHeight === 'number') {\n          state.settlingHeight = modalProps.settlingHeight;\n        }\n\n        acc[state.id] = state;\n        return acc;\n      }, {});\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.initActiveModal();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.toggleDocumentScrolling(true);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          activeModal = _this$state.activeModal,\n          switching = _this$state.switching;\n\n      if (activeModal && this.modalsState[activeModal] && !switching && this.props.children !== prevProps.children) {\n        var modalState = this.modalsState[activeModal];\n\n        if (modalState && modalState.type === TYPE_PAGE && modalState.dynamicContentHeight) {\n          requestAnimationFrame(function () {\n            return _this2.checkPageContentHeight();\n          });\n        }\n      }\n\n      if (this.props.activeModal !== prevProps.activeModal && !this.state.switching) {\n        var nextModal = this.props.activeModal;\n        var prevModal = prevProps.activeModal;\n\n        if (nextModal !== null && !this.modalsState[nextModal]) {\n          return console.warn(\"[ModalRoot.componentDidUpdate] nextModal \".concat(nextModal, \" not found\"));\n        }\n\n        var history = _toConsumableArray(this.state.history);\n\n        var isBack = false;\n\n        if (nextModal === null) {\n          history = [];\n        } else if (history.indexOf(nextModal) !== -1) {\n          history = history.splice(0, history.indexOf(nextModal) + 1);\n          isBack = true;\n        } else {\n          history.push(nextModal);\n        }\n\n        return this.setState({\n          activeModal: null,\n          nextModal: nextModal,\n          prevModal: prevModal,\n          visibleModals: [nextModal, prevModal],\n          history: history,\n          isBack: isBack,\n          animated: true,\n          inited: false,\n          switching: false\n        }, function () {\n          if (nextModal === null) {\n            _this2.closeActiveModal();\n          } else {\n            _this2.initActiveModal();\n          }\n        });\n      }\n\n      if (this.state.switching && !prevState.switching) {\n        requestAnimationFrame(function () {\n          return _this2.switchPrevNext();\n        });\n      }\n\n      if (!this.state.activeModal && !this.state.prevModal && !this.state.nextModal) {\n        this.toggleDocumentScrolling(true);\n      } else {\n        this.toggleDocumentScrolling(false);\n      }\n    }\n  }, {\n    key: \"blurActiveElement\",\n    value: function blurActiveElement() {\n      if (typeof this.window !== 'undefined' && this.document.activeElement) {\n        this.document.activeElement.blur();\n      }\n    }\n    /**\n     * Отключает скролл документа\n     */\n\n  }, {\n    key: \"toggleDocumentScrolling\",\n    value: function toggleDocumentScrolling(enabled) {\n      if (this.documentScrolling === enabled) return;\n      this.documentScrolling = enabled;\n\n      if (enabled) {\n        this.window.removeEventListener('touchmove', this.preventTouch);\n      } else {\n        this.window.addEventListener('touchmove', this.preventTouch, {\n          passive: false\n        });\n      }\n    }\n  }, {\n    key: \"pickModal\",\n    value: function pickModal(modalId) {\n      return this.document.getElementById('modal-' + modalId);\n    }\n    /**\n     * Инициализирует модалку перед анимацией открытия\n     */\n\n  }, {\n    key: \"initActiveModal\",\n    value: function initActiveModal() {\n      var activeModal = this.state.activeModal || this.state.nextModal;\n      if (!activeModal) return;\n      var modalElement = this.pickModal(activeModal);\n      var modalState = this.modalsState[activeModal];\n\n      if (modalElement.querySelector('.ModalPage')) {\n        modalState.type = TYPE_PAGE;\n      } else if (modalElement.querySelector('.ModalCard')) {\n        modalState.type = TYPE_CARD;\n      }\n\n      switch (modalState.type) {\n        case TYPE_PAGE:\n          modalState.settlingHeight = modalState.settlingHeight || 75;\n          this.initPageModal(modalState, modalElement);\n          break;\n\n        case TYPE_CARD:\n          this.initCardModal(modalState, modalElement);\n          break;\n\n        default:\n          console.warn(\"[ModalRoot.initActiveModal] modalState.type is unknown\");\n      }\n\n      this.setState({\n        inited: true,\n        switching: true\n      });\n    }\n  }, {\n    key: \"initPageModal\",\n    value: function initPageModal(modalState, modalElement) {\n      var contentElement = modalElement.querySelector('.ModalPage__content');\n      var contentHeight = contentElement.firstElementChild.offsetHeight;\n      modalState.expandable = contentHeight > contentElement.clientHeight;\n      modalState.modalElement = modalElement;\n      modalState.innerElement = modalElement.querySelector('.ModalPage__in-wrap');\n      modalState.headerElement = modalElement.querySelector('.ModalPage__header');\n      modalState.contentElement = modalElement.querySelector('.ModalPage__content');\n      modalState.footerElement = modalElement.querySelector('.ModalPage__footer');\n      var collapsed;\n      var translateYFrom;\n      var translateY;\n      var expandedRange;\n      var collapsedRange;\n      var hiddenRange;\n\n      if (modalState.expandable) {\n        translateYFrom = 100 - modalState.settlingHeight;\n        var shiftHalf = translateYFrom / 2;\n        var visiblePart = 100 - translateYFrom;\n        expandedRange = [0, shiftHalf];\n        collapsedRange = [shiftHalf, translateYFrom + visiblePart / 4];\n        hiddenRange = [translateYFrom + visiblePart / 4, 100];\n        collapsed = true;\n        translateY = translateYFrom;\n      } else {\n        var headerHeight = modalState.headerElement.offsetHeight;\n        var height = contentHeight + headerHeight;\n        translateYFrom = 100 - height / modalState.innerElement.parentElement.offsetHeight * 100;\n        translateY = translateYFrom;\n        expandedRange = [translateY, translateY + 25];\n        collapsedRange = [translateY + 25, translateY + 25];\n        hiddenRange = [translateY + 25, translateY + 100];\n        collapsed = false;\n      }\n\n      modalState.expandedRange = expandedRange;\n      modalState.collapsedRange = collapsedRange;\n      modalState.hiddenRange = hiddenRange;\n      modalState.translateY = translateY;\n      modalState.translateYFrom = translateYFrom;\n      modalState.collapsed = collapsed;\n    }\n  }, {\n    key: \"initCardModal\",\n    value: function initCardModal(modalState, modalElement) {\n      modalState.modalElement = modalElement;\n      modalState.innerElement = modalElement.querySelector('.ModalCard__in');\n      modalState.translateY = 0;\n    }\n  }, {\n    key: \"checkPageContentHeight\",\n    value: function checkPageContentHeight() {\n      var activeModal = this.state.activeModal;\n      var modalElement = this.pickModal(activeModal);\n\n      if (modalElement) {\n        var modalState = this.modalsState[activeModal];\n\n        var prevModalState = _objectSpread({}, modalState);\n\n        this.initPageModal(modalState, modalElement);\n\n        var currentModalState = _objectSpread({}, modalState);\n\n        var diff = Object.keys(currentModalState).reduce(function (acc, key) {\n          if (prevModalState[key] !== currentModalState[key]) {\n            acc[key] = currentModalState[key];\n          }\n\n          return acc;\n        }, {});\n\n        if (Object.keys(diff).length) {\n          this.animateTranslate(modalState);\n          this.animatePageHeader(modalState);\n        }\n      }\n    }\n  }, {\n    key: \"closeActiveModal\",\n    value: function closeActiveModal() {\n      var prevModal = this.state.prevModal;\n      if (!prevModal) return console.warn(\"[ModalRoot.closeActiveModal] prevModal is \".concat(prevModal));\n      var prevModalState = this.modalsState[prevModal];\n      this.waitTransitionFinish(prevModalState, this.prevNextSwitchEndHandler);\n      this.animateTranslate(prevModalState, 100);\n      this.setMaskOpacity(prevModalState, 0);\n    }\n  }, {\n    key: \"onPageTouchMove\",\n    value: function onPageTouchMove(event, modalState) {\n      var shiftY = event.shiftY,\n          startT = event.startT,\n          originalEvent = event.originalEvent;\n\n      if (!event.isY) {\n        if (originalEvent.target.closest('.ModalPage')) {\n          originalEvent.preventDefault();\n        }\n\n        return;\n      }\n\n      if (!originalEvent.target.closest('.ModalPage__in')) {\n        return originalEvent.preventDefault();\n      }\n\n      originalEvent.stopPropagation();\n      var expandable = modalState.expandable,\n          contentScrolled = modalState.contentScrolled,\n          collapsed = modalState.collapsed,\n          expanded = modalState.expanded;\n\n      if (!this.state.touchDown) {\n        modalState.touchStartTime = startT;\n        modalState.touchStartContentScrollTop = modalState.contentElement.scrollTop;\n        this.setState({\n          touchDown: true\n        });\n      }\n\n      if (contentScrolled) return;\n\n      if (modalState.touchMovePositive === null) {\n        modalState.touchMovePositive = shiftY > 0;\n      }\n\n      if (!modalState.expandable || collapsed || expanded && modalState.touchMovePositive && modalState.touchStartContentScrollTop === 0 || originalEvent.target.closest('.ModalPage__header')) {\n        originalEvent.preventDefault();\n        if (!expandable && shiftY < 0) return;\n        !this.state.dragging && this.setState({\n          dragging: true\n        });\n        var shiftYPercent = shiftY / this.window.innerHeight * 100;\n        var shiftYCurrent = rubber(shiftYPercent, 72, 0.8, IS_PLATFORM_ANDROID);\n        modalState.touchShiftYPercent = shiftYPercent;\n        modalState.translateYCurrent = rangeTranslate(modalState.translateY + shiftYCurrent);\n        this.animateTranslate(modalState, modalState.translateYCurrent);\n        this.setMaskOpacity(modalState);\n      }\n    }\n  }, {\n    key: \"onCardTouchMove\",\n    value: function onCardTouchMove(event, modalState) {\n      var originalEvent = event.originalEvent,\n          shiftY = event.shiftY,\n          startT = event.startT;\n\n      if (originalEvent.target.closest('.ModalCard__container')) {\n        if (!this.state.touchDown) {\n          modalState.touchStartTime = startT;\n          this.setState({\n            touchDown: true,\n            dragging: true\n          });\n        }\n\n        var shiftYPercent = shiftY / modalState.innerElement.offsetHeight * 100;\n        var shiftYCurrent = rubber(shiftYPercent, 72, 1.2, IS_PLATFORM_ANDROID);\n        modalState.touchShiftYPercent = shiftYPercent;\n        modalState.translateYCurrent = Math.max(0, modalState.translateY + shiftYCurrent);\n        this.animateTranslate(modalState, modalState.translateYCurrent);\n        this.setMaskOpacity(modalState);\n      }\n    }\n  }, {\n    key: \"onPageTouchEnd\",\n    value: function onPageTouchEnd(event, modalState) {\n      var _this3 = this;\n\n      var startY = event.startY,\n          shiftY = event.shiftY;\n      modalState.contentScrolled = false;\n      modalState.touchMovePositive = null;\n      var next;\n\n      if (this.state.dragging) {\n        var shiftYEndPercent = (startY + shiftY) / this.window.innerHeight * 100;\n        var translateY = modalState.translateYCurrent;\n        var expectTranslateY = translateY / (Date.now() - modalState.touchStartTime) * 240 * 0.6 * (modalState.touchShiftYPercent < 0 ? -1 : 1);\n        translateY = rangeTranslate(translateY + expectTranslateY);\n\n        if (numberInRange(translateY, modalState.expandedRange)) {\n          translateY = modalState.expandedRange[0];\n        } else if (numberInRange(translateY, modalState.collapsedRange)) {\n          translateY = modalState.translateYFrom;\n        } else if (numberInRange(translateY, modalState.hiddenRange)) {\n          translateY = 100;\n        } else {\n          translateY = modalState.translateYFrom;\n        }\n\n        if (translateY !== 100 && shiftYEndPercent >= 75) {\n          translateY = 100;\n        }\n\n        modalState.translateY = translateY;\n        modalState.translateYCurrent = translateY;\n        modalState.collapsed = translateY > 0 && translateY < shiftYEndPercent;\n        modalState.expanded = translateY === 0;\n        modalState.hidden = translateY === 100;\n\n        if (modalState.hidden) {\n          modalState.onClose();\n        }\n\n        next = function next() {\n          !modalState.hidden && _this3.animateTranslate(modalState);\n\n          _this3.setMaskOpacity(modalState);\n        };\n      }\n\n      this.setState({\n        touchDown: false,\n        dragging: false\n      }, next);\n    }\n  }, {\n    key: \"onCardTouchEnd\",\n    value: function onCardTouchEnd(modalState) {\n      var _this4 = this;\n\n      var next;\n\n      if (this.state.dragging) {\n        var translateY = modalState.translateYCurrent;\n        var expectTranslateY = translateY / (Date.now() - modalState.touchStartTime) * 240 * 0.6 * (modalState.touchShiftYPercent < 0 ? -1 : 1);\n        translateY = Math.max(0, translateY + expectTranslateY);\n\n        if (translateY >= 30) {\n          translateY = 100;\n        } else {\n          translateY = 0;\n        }\n\n        modalState.translateY = translateY;\n        modalState.hidden = translateY === 100;\n\n        if (modalState.hidden) {\n          modalState.onClose();\n        }\n\n        next = function next() {\n          !modalState.hidden && _this4.animateTranslate(modalState);\n\n          _this4.setMaskOpacity(modalState);\n        };\n      }\n\n      this.setState({\n        touchDown: false,\n        dragging: false\n      }, next);\n    }\n  }, {\n    key: \"waitTransitionFinish\",\n    value: function waitTransitionFinish(modalState, eventHandler) {\n      var eventName = transitionEvents.transitionEndEventName;\n\n      var onceHandler = function onceHandler() {\n        modalState.innerElement.removeEventListener(eventName, onceHandler);\n        eventHandler();\n      };\n\n      modalState.innerElement.addEventListener(eventName, onceHandler);\n    }\n  }, {\n    key: \"switchPrevNext\",\n    value: function switchPrevNext() {\n      var _this5 = this;\n\n      var _this$state2 = this.state,\n          prevModal = _this$state2.prevModal,\n          nextModal = _this$state2.nextModal;\n      var prevModalState = this.modalsState[prevModal];\n      var nextModalState = this.modalsState[nextModal];\n\n      if (!prevModalState && !nextModalState) {\n        return console.warn(\"[ModalRoot.switchPrevNext] prevModal is \".concat(prevModal, \", nextModal is \").concat(nextModal));\n      }\n\n      var prevIsPage = !!prevModalState && prevModalState.type === TYPE_PAGE;\n      var prevIsCard = !!prevModalState && prevModalState.type === TYPE_CARD;\n      var nextIsPage = !!nextModalState && nextModalState.type === TYPE_PAGE;\n      var nextIsCard = !!nextModalState && nextModalState.type === TYPE_CARD; // Ждём полного скрытия предыдущей модалки\n\n      if (prevModalState && (nextIsCard || prevIsCard && nextIsPage)) {\n        this.waitTransitionFinish(prevModalState, function () {\n          _this5.activeTransitions += 1;\n\n          _this5.waitTransitionFinish(nextModalState, _this5.prevNextSwitchEndHandler);\n\n          _this5.animateTranslate(nextModalState);\n        });\n        return this.animateTranslate(prevModalState, 100);\n      }\n\n      if (prevModalState && nextIsPage) {\n        this.activeTransitions += 1;\n        this.waitTransitionFinish(prevModalState, this.prevNextSwitchEndHandler);\n\n        if (prevIsPage && prevModalState.translateY <= nextModalState.translateYFrom && !this.state.isBack) {\n          this.animateTranslate(prevModalState, nextModalState.translateYFrom + 10);\n        } else {\n          this.animateTranslate(prevModalState, 100);\n        }\n      }\n\n      this.activeTransitions += 1;\n      this.waitTransitionFinish(nextModalState, this.prevNextSwitchEndHandler);\n      this.animateTranslate(nextModalState);\n    }\n  }, {\n    key: \"animateTranslate\",\n\n    /**\n     * Анимирует сдивг модалки\n     */\n    value: function animateTranslate(modalState) {\n      var currentPercent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      if (currentPercent === null) {\n        currentPercent = modalState.translateY;\n      }\n\n      var frameId = \"animateTranslateFrame\".concat(modalState.id);\n      cancelAnimationFrame(this[frameId]);\n      this[frameId] = requestAnimationFrame(function () {\n        setTransformStyle(modalState.innerElement, \"translateY(\".concat(currentPercent, \"%)\"));\n\n        if (modalState.type === TYPE_PAGE && modalState.footerElement) {\n          var footerHeight = modalState.footerElement.offsetHeight;\n          var factor = modalState.innerElement.offsetHeight * (currentPercent / 100);\n          setTransformStyle(modalState.footerElement, \"translateY(calc(\".concat(footerHeight, \"px * -\").concat(factor / footerHeight, \"))\"));\n        }\n      });\n\n      if (modalState.type === TYPE_PAGE && modalState.expandable) {\n        this.animatePageHeader(modalState, currentPercent);\n      }\n    }\n    /**\n     * Анимирует тень шапки\n     */\n\n  }, {\n    key: \"animatePageHeader\",\n    value: function animatePageHeader(modalState) {\n      var currentPercent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      if (currentPercent === null) {\n        currentPercent = modalState.translateY;\n      }\n\n      var headerOpenPercent = currentPercent < 15 ? Math.max(0, 15 - currentPercent) / 15 : 0;\n      requestAnimationFrame(function () {\n        var headerShadow = modalState.headerElement.querySelector('.ModalPageHeader__shadow');\n\n        if (headerShadow) {\n          headerShadow.style.opacity = headerOpenPercent.toString();\n        }\n      });\n    }\n    /**\n     * Устанавливает прозрачность для полупрозрачной подложки\n     */\n\n  }, {\n    key: \"setMaskOpacity\",\n    value: function setMaskOpacity(modalState) {\n      var _this6 = this;\n\n      var forceOpacity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      if (forceOpacity === null && this.state.history[0] !== modalState.id) return;\n      cancelAnimationFrame(this.maskAnimationFrame);\n      this.maskAnimationFrame = requestAnimationFrame(function () {\n        if (_this6.maskElementRef.current) {\n          var translateY = modalState.translateY,\n              translateYCurrent = modalState.translateYCurrent;\n          var opacity = forceOpacity === null ? 1 - (translateYCurrent - translateY) / (100 - translateY) || 0 : forceOpacity;\n          _this6.maskElementRef.current.style.opacity = Math.max(0, Math.min(100, opacity)).toString();\n        }\n      });\n    }\n    /**\n     * Закрывает текущую модалку\n     */\n\n  }, {\n    key: \"triggerActiveModalClose\",\n    value: function triggerActiveModalClose() {\n      var activeModalState = this.modalsState[this.state.activeModal];\n\n      if (activeModalState) {\n        activeModalState.onClose();\n      }\n    }\n    /**\n     * По клику на полупрозрачный черный фон нужно закрыть текущую модалку\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n\n      var _this$state3 = this.state,\n          prevModal = _this$state3.prevModal,\n          activeModal = _this$state3.activeModal,\n          nextModal = _this$state3.nextModal,\n          visibleModals = _this$state3.visibleModals,\n          animated = _this$state3.animated,\n          touchDown = _this$state3.touchDown,\n          dragging = _this$state3.dragging,\n          switching = _this$state3.switching;\n      if (!activeModal && !prevModal && !nextModal && !animated) return null;\n      return React.createElement(TouchRootContext.Provider, {\n        value: true\n      }, React.createElement(Touch, {\n        className: classNames(getClassName('ModalRoot', this.props.platform), {\n          'ModalRoot--vkapps': this.webviewType === 'vkapps',\n          'ModalRoot--touched': touchDown,\n          'ModalRoot--switching': switching\n        }),\n        onMove: this.onTouchMove,\n        onEnd: this.onTouchEnd,\n        onScroll: this.onScroll\n      }, React.createElement(\"div\", {\n        className: \"ModalRoot__mask\",\n        onClick: this.onMaskClick,\n        ref: this.maskElementRef\n      }), React.createElement(\"div\", {\n        className: \"ModalRoot__viewport\"\n      }, this.modals.map(function (Modal) {\n        var modalId = Modal.props.id;\n        if (visibleModals.indexOf(Modal.props.id) === -1) return null;\n        var modalState = _this7.modalsState[modalId];\n        var isPage = modalState.type === TYPE_PAGE;\n        var key = 'modal-' + modalId;\n        return React.createElement(\"div\", {\n          key: key,\n          id: key,\n          className: classNames('ModalRoot__modal', {\n            'ModalRoot__modal--active': modalId === activeModal,\n            'ModalRoot__modal--prev': modalId === prevModal,\n            'ModalRoot__modal--next': modalId === nextModal,\n            'ModalRoot__modal--dragging': dragging,\n            'ModalRoot__modal--expandable': isPage && modalState.expandable,\n            'ModalRoot__modal--expanded': isPage && modalState.expanded,\n            'ModalRoot__modal--collapsed': isPage && modalState.collapsed\n          })\n        }, Modal);\n      }))));\n    }\n  }, {\n    key: \"document\",\n    get: function get() {\n      return this.context.document || document;\n    }\n  }, {\n    key: \"window\",\n    get: function get() {\n      return this.context.window || window;\n    }\n  }, {\n    key: \"webviewType\",\n    get: function get() {\n      return this.context.webviewType || 'vkapps';\n    }\n  }, {\n    key: \"modals\",\n    get: function get() {\n      return [].concat(this.props.children);\n    }\n  }]);\n\n  return ModalRoot;\n}(Component);\n\n_defineProperty(ModalRoot, \"propTypes\", {\n  activeModal: PropTypes.string,\n  children: PropTypes.node\n});\n\n_defineProperty(ModalRoot, \"contextTypes\", {\n  window: PropTypes.any,\n  document: PropTypes.any,\n  webviewType: PropTypes.oneOf(['vkapps', 'internal'])\n});\n\nexport default withPlatform(ModalRoot);","map":{"version":3,"sources":["../../../../src/components/ModalRoot/ModalRoot.tsx"],"names":["TYPE_CARD","TYPE_PAGE","number","range","Math","ModalRoot","Component","activeModal","props","prevModal","nextModal","visibleModals","animated","switching","history","isBack","inited","touchDown","dragging","React","PropTypes","children","node","window","document","webviewType","modalProps","Modal","state","id","onClose","dynamicContentHeight","acc","prevProps","prevState","modalState","requestAnimationFrame","console","enabled","passive","event","modalId","modalElement","contentElement","contentHeight","translateYFrom","shiftHalf","visiblePart","expandedRange","collapsedRange","hiddenRange","collapsed","translateY","headerHeight","height","prevModalState","currentModalState","diff","Object","shiftY","startT","originalEvent","expandable","contentScrolled","expanded","shiftYPercent","shiftYCurrent","rubber","rangeTranslate","startY","shiftYEndPercent","expectTranslateY","Date","numberInRange","next","e","clearTimeout","eventHandler","eventName","transitionEvents","onceHandler","nextModalState","prevIsPage","prevIsCard","nextIsPage","nextIsCard","newState","currentPercent","frameId","cancelAnimationFrame","setTransformStyle","footerHeight","factor","headerOpenPercent","headerShadow","forceOpacity","translateYCurrent","opacity","activeModalState","classNames","getClassName","onScroll","maskElementRef","isPage","key","withPlatform"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Touch, { TouchRootContext } from '../Touch/Touch';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport { setTransformStyle } from '../../lib/styles';\nimport { rubber } from '../../lib/touch';\nimport { IS_PLATFORM_ANDROID } from '../../lib/platform';\nimport transitionEvents from '../../lib/transitionEvents';\nimport { HasChildren, HasPlatform } from '../../types/props';\nimport withPlatform from '../../hoc/withPlatform';\n\nexport const TYPE_CARD = 'modal-card';\nexport const TYPE_PAGE = 'modal-page';\n\nfunction numberInRange (number, range) {\n  return number >= range[0] && number <= range[1];\n}\n\nfunction rangeTranslate (number) {\n  return Math.max(0, Math.min(98, number));\n}\n\nexport interface ModalsStateEntry {\n  id: string;\n  onClose: () => {};\n  type?: 'modal-card' | 'modal-page';\n\n  settlingHeight?: number;\n  dynamicContentHeight?: boolean;\n  expandable?: boolean;\n\n  modalElement?: HTMLDivElement;\n  innerElement?: HTMLDivElement;\n  headerElement?: HTMLDivElement;\n  contentElement?: HTMLDivElement;\n  footerElement?: HTMLDivElement;\n\n  translateY?: number;\n  translateYFrom?: number;\n  translateYCurrent?: number;\n  touchStartTime?: number;\n  touchStartContentScrollTop?: number;\n  touchMovePositive?: boolean | null;\n  touchShiftYPercent?: number;\n  expanded?: boolean;\n  collapsed?: boolean;\n  hidden?: boolean;\n  contentScrolled?: boolean;\n  expandedRange?: [number, number];\n  collapsedRange?: [number, number];\n  hiddenRange?: [number, number];\n  contentScrollStopTimeout?: number;\n}\n\nexport interface ModalRootProps extends HasChildren, HasPlatform {\n  activeModal?: string;\n\n}\n\nexport interface ModalRootState {\n  activeModal?: string;\n  prevModal?: string;\n  nextModal?: string;\n  visibleModals?: string[];\n  animated?: boolean;\n  switching?: boolean;\n  history?: string[];\n  isBack?: boolean;\n  inited?: boolean;\n  touchDown?: boolean;\n  dragging?: boolean;\n}\n\nclass ModalRoot extends Component<ModalRootProps, ModalRootState> {\n  constructor (props) {\n    super(props);\n\n    const activeModal = props.activeModal;\n\n    this.state = {\n      activeModal: null,\n      prevModal: null,\n      nextModal: activeModal,\n      visibleModals: activeModal ? [activeModal] : [],\n      animated: !!activeModal,\n      switching: false,\n      history: activeModal ? [activeModal] : [],\n      isBack: false,\n      inited: false,\n      touchDown: false,\n      dragging: false\n    };\n\n    this.activeTransitions = 0;\n    this.maskElementRef = React.createRef();\n\n    this.initModalsState();\n  }\n\n  private modalsState: { [id: string]: ModalsStateEntry };\n  private documentScrolling: boolean;\n  private activeTransitions: number;\n  private maskElementRef: React.RefObject<HTMLDivElement>;\n  private maskAnimationFrame: number;\n\n  static propTypes = {\n    activeModal: PropTypes.string,\n    children: PropTypes.node\n  };\n\n  static contextTypes = {\n    window: PropTypes.any,\n    document: PropTypes.any,\n    webviewType: PropTypes.oneOf(['vkapps', 'internal'])\n  };\n\n  get document () {\n    return this.context.document || document;\n  }\n\n  get window () {\n    return this.context.window || window;\n  }\n\n  get webviewType () {\n    return this.context.webviewType || 'vkapps';\n  }\n\n  get modals () {\n    return [].concat(this.props.children);\n  }\n\n  initModalsState () {\n    this.modalsState = this.modals.reduce((acc, Modal) => {\n      const modalProps = Modal.props;\n      const state: ModalsStateEntry = {\n        id: Modal.props.id,\n        onClose: Modal.props.onClose,\n        dynamicContentHeight: !!modalProps.dynamicContentHeight\n      };\n\n      // ModalPage props\n      if (typeof modalProps.settlingHeight === 'number') {\n        state.settlingHeight = modalProps.settlingHeight;\n      }\n\n      acc[state.id] = state;\n      return acc;\n    }, {});\n  }\n\n  componentDidMount () {\n    this.initActiveModal();\n  }\n\n  componentWillUnmount () {\n    this.toggleDocumentScrolling(true);\n  }\n\n  componentDidUpdate (prevProps, prevState) {\n    const { activeModal, switching } = this.state;\n\n    if (activeModal && this.modalsState[activeModal] && !switching && this.props.children !== prevProps.children) {\n      const modalState = this.modalsState[activeModal];\n      if (modalState && modalState.type === TYPE_PAGE && modalState.dynamicContentHeight) {\n        requestAnimationFrame(() => this.checkPageContentHeight());\n      }\n    }\n\n    if (this.props.activeModal !== prevProps.activeModal && !this.state.switching) {\n      const nextModal = this.props.activeModal;\n      const prevModal = prevProps.activeModal;\n\n      if (nextModal !== null && !this.modalsState[nextModal]) {\n        return console.warn(`[ModalRoot.componentDidUpdate] nextModal ${nextModal} not found`);\n      }\n\n      let history = [...this.state.history];\n      let isBack = false;\n\n      if (nextModal === null) {\n        history = [];\n      } else if (history.indexOf(nextModal) !== -1) {\n        history = history.splice(0, history.indexOf(nextModal) + 1);\n        isBack = true;\n      } else {\n        history.push(nextModal);\n      }\n\n      return this.setState({\n        activeModal: null,\n        nextModal,\n        prevModal,\n        visibleModals: [nextModal, prevModal],\n        history,\n        isBack,\n        animated: true,\n        inited: false,\n        switching: false\n      }, () => {\n        if (nextModal === null) {\n          this.closeActiveModal();\n        } else {\n          this.initActiveModal();\n        }\n      });\n    }\n\n    if (this.state.switching && !prevState.switching) {\n      requestAnimationFrame(() => this.switchPrevNext());\n    }\n\n    if (!this.state.activeModal && !this.state.prevModal && !this.state.nextModal) {\n      this.toggleDocumentScrolling(true);\n    } else {\n      this.toggleDocumentScrolling(false);\n    }\n  }\n\n  blurActiveElement () {\n    if (typeof this.window !== 'undefined' && this.document.activeElement) {\n      this.document.activeElement.blur();\n    }\n  }\n\n  /**\n   * Отключает скролл документа\n   */\n  toggleDocumentScrolling (enabled: boolean) {\n    if (this.documentScrolling === enabled) return;\n    this.documentScrolling = enabled;\n\n    if (enabled) {\n      this.window.removeEventListener('touchmove', this.preventTouch);\n    } else {\n      this.window.addEventListener('touchmove', this.preventTouch, { passive: false });\n    }\n  }\n\n  preventTouch = (event) => {\n    if (event) {\n      while (event.originalEvent) event = event.originalEvent;\n      event.preventDefault();\n    }\n  };\n\n  pickModal (modalId) {\n    return this.document.getElementById('modal-' + modalId);\n  }\n\n  /**\n   * Инициализирует модалку перед анимацией открытия\n   */\n  initActiveModal () {\n    const activeModal = this.state.activeModal || this.state.nextModal;\n    if (!activeModal) return;\n\n    const modalElement = this.pickModal(activeModal);\n    const modalState = this.modalsState[activeModal];\n\n    if (modalElement.querySelector('.ModalPage')) {\n      modalState.type = TYPE_PAGE;\n    } else if (modalElement.querySelector('.ModalCard')) {\n      modalState.type = TYPE_CARD;\n    }\n\n    switch (modalState.type) {\n      case TYPE_PAGE:\n        modalState.settlingHeight = modalState.settlingHeight || 75;\n        this.initPageModal(modalState, modalElement);\n        break;\n\n      case TYPE_CARD:\n        this.initCardModal(modalState, modalElement);\n        break;\n\n      default:\n        console.warn(`[ModalRoot.initActiveModal] modalState.type is unknown`);\n    }\n\n    this.setState({ inited: true, switching: true });\n  }\n\n  initPageModal (modalState: ModalsStateEntry, modalElement: HTMLDivElement) {\n    const contentElement: HTMLElement = modalElement.querySelector('.ModalPage__content');\n    const contentHeight = (contentElement.firstElementChild as HTMLElement).offsetHeight;\n\n    modalState.expandable = contentHeight > contentElement.clientHeight;\n\n    modalState.modalElement = modalElement;\n    modalState.innerElement = modalElement.querySelector('.ModalPage__in-wrap');\n    modalState.headerElement = modalElement.querySelector('.ModalPage__header');\n    modalState.contentElement = modalElement.querySelector('.ModalPage__content');\n    modalState.footerElement = modalElement.querySelector('.ModalPage__footer');\n\n    let collapsed;\n    let translateYFrom;\n    let translateY;\n    let expandedRange;\n    let collapsedRange;\n    let hiddenRange;\n\n    if (modalState.expandable) {\n      translateYFrom = 100 - modalState.settlingHeight;\n\n      const shiftHalf = translateYFrom / 2;\n      const visiblePart = 100 - translateYFrom;\n\n      expandedRange = [0, shiftHalf];\n      collapsedRange = [shiftHalf, translateYFrom + visiblePart / 4];\n      hiddenRange = [translateYFrom + visiblePart / 4, 100];\n\n      collapsed = true;\n      translateY = translateYFrom;\n    } else {\n      const headerHeight = modalState.headerElement.offsetHeight;\n      const height = contentHeight + headerHeight;\n\n      translateYFrom = 100 - (height / modalState.innerElement.parentElement.offsetHeight * 100);\n      translateY = translateYFrom;\n\n      expandedRange = [translateY, translateY + 25];\n      collapsedRange = [translateY + 25, translateY + 25];\n      hiddenRange = [translateY + 25, translateY + 100];\n\n      collapsed = false;\n    }\n\n    modalState.expandedRange = expandedRange;\n    modalState.collapsedRange = collapsedRange;\n    modalState.hiddenRange = hiddenRange;\n    modalState.translateY = translateY;\n    modalState.translateYFrom = translateYFrom;\n    modalState.collapsed = collapsed;\n  }\n\n  initCardModal (modalState: ModalsStateEntry, modalElement: HTMLDivElement) {\n    modalState.modalElement = modalElement;\n    modalState.innerElement = modalElement.querySelector('.ModalCard__in');\n\n    modalState.translateY = 0;\n  }\n\n  checkPageContentHeight () {\n    const activeModal = this.state.activeModal;\n\n    const modalElement = this.pickModal(activeModal);\n    if (modalElement) {\n      const modalState = this.modalsState[activeModal];\n\n      const prevModalState = { ...modalState };\n      this.initPageModal(modalState, modalElement);\n      const currentModalState = { ...modalState };\n\n      const diff = Object.keys(currentModalState).reduce((acc, key) => {\n        if (prevModalState[key] !== currentModalState[key]) {\n          acc[key] = currentModalState[key];\n        }\n\n        return acc;\n      }, {});\n\n      if (Object.keys(diff).length) {\n        this.animateTranslate(modalState);\n        this.animatePageHeader(modalState);\n      }\n    }\n  }\n\n  closeActiveModal () {\n    const { prevModal } = this.state;\n    if (!prevModal) return console.warn(`[ModalRoot.closeActiveModal] prevModal is ${prevModal}`);\n\n    const prevModalState = this.modalsState[prevModal];\n\n    this.waitTransitionFinish(prevModalState, this.prevNextSwitchEndHandler);\n    this.animateTranslate(prevModalState, 100);\n    this.setMaskOpacity(prevModalState, 0);\n  }\n\n  onTouchMove = (e) => {\n    if (this.state.switching) return;\n    const activeModal = this.state.activeModal || this.state.nextModal;\n    if (!activeModal) return;\n\n    const modalState = this.modalsState[activeModal];\n\n    if (modalState.type === TYPE_PAGE) {\n      return this.onPageTouchMove(e, modalState);\n    }\n\n    if (modalState.type === TYPE_CARD) {\n      return this.onCardTouchMove(e, modalState);\n    }\n  };\n\n  onPageTouchMove (event, modalState: ModalsStateEntry) {\n    const { shiftY, startT, originalEvent } = event;\n\n    if (!event.isY) {\n      if (originalEvent.target.closest('.ModalPage')) {\n        originalEvent.preventDefault();\n      }\n      return;\n    }\n\n    if (!originalEvent.target.closest('.ModalPage__in')) {\n      return originalEvent.preventDefault();\n    }\n\n    originalEvent.stopPropagation();\n\n    const { expandable, contentScrolled, collapsed, expanded } = modalState;\n\n    if (!this.state.touchDown) {\n      modalState.touchStartTime = startT;\n      modalState.touchStartContentScrollTop = modalState.contentElement.scrollTop;\n      this.setState({ touchDown: true });\n    }\n\n    if (contentScrolled) return;\n\n    if (modalState.touchMovePositive === null) {\n      modalState.touchMovePositive = shiftY > 0;\n    }\n\n    if (\n      !modalState.expandable ||\n      collapsed ||\n      (expanded && modalState.touchMovePositive && (modalState.touchStartContentScrollTop === 0)) ||\n      originalEvent.target.closest('.ModalPage__header')\n    ) {\n      originalEvent.preventDefault();\n      if (!expandable && shiftY < 0) return;\n\n      !this.state.dragging && this.setState({ dragging: true });\n\n      const shiftYPercent = shiftY / this.window.innerHeight * 100;\n      const shiftYCurrent = rubber(shiftYPercent, 72, 0.8, IS_PLATFORM_ANDROID);\n\n      modalState.touchShiftYPercent = shiftYPercent;\n      modalState.translateYCurrent = rangeTranslate(modalState.translateY + shiftYCurrent);\n\n      this.animateTranslate(modalState, modalState.translateYCurrent);\n      this.setMaskOpacity(modalState);\n    }\n  }\n\n  onCardTouchMove (event, modalState: ModalsStateEntry) {\n    const { originalEvent, shiftY, startT } = event;\n    if (originalEvent.target.closest('.ModalCard__container')) {\n      if (!this.state.touchDown) {\n        modalState.touchStartTime = startT;\n        this.setState({ touchDown: true, dragging: true });\n      }\n\n      const shiftYPercent = shiftY / modalState.innerElement.offsetHeight * 100;\n      const shiftYCurrent = rubber(shiftYPercent, 72, 1.2, IS_PLATFORM_ANDROID);\n\n      modalState.touchShiftYPercent = shiftYPercent;\n      modalState.translateYCurrent = Math.max(0, modalState.translateY + shiftYCurrent);\n\n      this.animateTranslate(modalState, modalState.translateYCurrent);\n      this.setMaskOpacity(modalState);\n    }\n  }\n\n  onTouchEnd = (e) => {\n    const activeModal = this.state.activeModal || this.state.nextModal;\n    if (!activeModal) return;\n    const modalState = this.modalsState[activeModal];\n\n    if (modalState.type === TYPE_PAGE) {\n      return this.onPageTouchEnd(e, modalState);\n    }\n\n    if (modalState.type === TYPE_CARD) {\n      return this.onCardTouchEnd(modalState);\n    }\n  };\n\n  onPageTouchEnd (event, modalState: ModalsStateEntry) {\n    const { startY, shiftY } = event;\n\n    modalState.contentScrolled = false;\n    modalState.touchMovePositive = null;\n\n    let next;\n\n    if (this.state.dragging) {\n      const shiftYEndPercent = (startY + shiftY) / this.window.innerHeight * 100;\n\n      let translateY = modalState.translateYCurrent;\n      const expectTranslateY = (translateY / (Date.now() - modalState.touchStartTime) * 240 * 0.6) * (modalState.touchShiftYPercent < 0 ? -1 : 1);\n      translateY = rangeTranslate(translateY + expectTranslateY);\n\n      if (numberInRange(translateY, modalState.expandedRange)) {\n        translateY = modalState.expandedRange[0];\n      } else if (numberInRange(translateY, modalState.collapsedRange)) {\n        translateY = modalState.translateYFrom;\n      } else if (numberInRange(translateY, modalState.hiddenRange)) {\n        translateY = 100;\n      } else {\n        translateY = modalState.translateYFrom;\n      }\n\n      if (translateY !== 100 && shiftYEndPercent >= 75) {\n        translateY = 100;\n      }\n\n      modalState.translateY = translateY;\n      modalState.translateYCurrent = translateY;\n      modalState.collapsed = translateY > 0 && translateY < shiftYEndPercent;\n      modalState.expanded = translateY === 0;\n      modalState.hidden = translateY === 100;\n\n      if (modalState.hidden) {\n        modalState.onClose();\n      }\n\n      next = () => {\n        !modalState.hidden && this.animateTranslate(modalState);\n        this.setMaskOpacity(modalState);\n      };\n    }\n\n    this.setState({\n      touchDown: false,\n      dragging: false\n    }, next);\n  }\n\n  onCardTouchEnd (modalState: ModalsStateEntry) {\n    let next;\n\n    if (this.state.dragging) {\n      let translateY = modalState.translateYCurrent;\n\n      const expectTranslateY = (translateY / (Date.now() - modalState.touchStartTime) * 240 * 0.6) * (modalState.touchShiftYPercent < 0 ? -1 : 1);\n      translateY = Math.max(0, translateY + expectTranslateY);\n\n      if (translateY >= 30) {\n        translateY = 100;\n      } else {\n        translateY = 0;\n      }\n\n      modalState.translateY = translateY;\n      modalState.hidden = translateY === 100;\n\n      if (modalState.hidden) {\n        modalState.onClose();\n      }\n\n      next = () => {\n        !modalState.hidden && this.animateTranslate(modalState);\n        this.setMaskOpacity(modalState);\n      };\n    }\n\n    this.setState({\n      touchDown: false,\n      dragging: false\n    }, next);\n  }\n\n  onScroll = (e) => {\n    const activeModal = this.state.activeModal;\n\n    if (activeModal && e.target.closest('.ModalPage__content')) {\n      const modalState = this.modalsState[activeModal];\n      modalState.contentScrolled = true;\n\n      clearTimeout(modalState.contentScrollStopTimeout);\n\n      modalState.contentScrollStopTimeout = window.setTimeout(() => {\n        if (modalState.contentScrolled) {\n          modalState.contentScrolled = false;\n        }\n      }, 250);\n    }\n  };\n\n  waitTransitionFinish (modalState: ModalsStateEntry, eventHandler: () => void) {\n    const eventName = transitionEvents.transitionEndEventName;\n\n    const onceHandler = () => {\n      modalState.innerElement.removeEventListener(eventName, onceHandler);\n      eventHandler();\n    };\n\n    modalState.innerElement.addEventListener(eventName, onceHandler);\n  }\n\n  switchPrevNext () {\n    const { prevModal, nextModal } = this.state;\n\n    const prevModalState = this.modalsState[prevModal];\n    const nextModalState = this.modalsState[nextModal];\n\n    if (!prevModalState && !nextModalState) {\n      return console.warn(`[ModalRoot.switchPrevNext] prevModal is ${prevModal}, nextModal is ${nextModal}`);\n    }\n\n    const prevIsPage = !!prevModalState && (prevModalState.type === TYPE_PAGE);\n    const prevIsCard = !!prevModalState && (prevModalState.type === TYPE_CARD);\n\n    const nextIsPage = !!nextModalState && (nextModalState.type === TYPE_PAGE);\n    const nextIsCard = !!nextModalState && (nextModalState.type === TYPE_CARD);\n\n    // Ждём полного скрытия предыдущей модалки\n    if (prevModalState && (nextIsCard || (prevIsCard && nextIsPage))) {\n      this.waitTransitionFinish(prevModalState, () => {\n        this.activeTransitions += 1;\n        this.waitTransitionFinish(nextModalState, this.prevNextSwitchEndHandler);\n        this.animateTranslate(nextModalState);\n      });\n\n      return this.animateTranslate(prevModalState, 100);\n    }\n\n    if (prevModalState && nextIsPage) {\n      this.activeTransitions += 1;\n      this.waitTransitionFinish(prevModalState, this.prevNextSwitchEndHandler);\n\n      if (prevIsPage && prevModalState.translateY <= nextModalState.translateYFrom && !this.state.isBack) {\n        this.animateTranslate(prevModalState, nextModalState.translateYFrom + 10);\n      } else {\n        this.animateTranslate(prevModalState, 100);\n      }\n    }\n\n    this.activeTransitions += 1;\n    this.waitTransitionFinish(nextModalState, this.prevNextSwitchEndHandler);\n    this.animateTranslate(nextModalState);\n  }\n\n  prevNextSwitchEndHandler = () => {\n    this.activeTransitions = Math.max(0, this.activeTransitions - 1);\n    if (this.activeTransitions > 0) return;\n\n    const activeModal = this.state.nextModal;\n\n    const newState: ModalRootState = {\n      prevModal: null,\n      nextModal: null,\n      visibleModals: [activeModal],\n      activeModal: activeModal,\n      animated: false,\n      switching: false\n    };\n\n    if (!activeModal) {\n      newState.history = [];\n    }\n\n    this.setState(newState);\n  };\n\n  /**\n   * Анимирует сдивг модалки\n   */\n  animateTranslate (modalState: ModalsStateEntry, currentPercent: number = null) {\n    if (currentPercent === null) {\n      currentPercent = modalState.translateY;\n    }\n\n    const frameId = `animateTranslateFrame${modalState.id}`;\n\n    cancelAnimationFrame(this[frameId]);\n    this[frameId] = requestAnimationFrame(() => {\n      setTransformStyle(modalState.innerElement, `translateY(${currentPercent}%)`);\n\n      if (modalState.type === TYPE_PAGE && modalState.footerElement) {\n        const footerHeight = modalState.footerElement.offsetHeight;\n        const factor = modalState.innerElement.offsetHeight * (currentPercent / 100);\n\n        setTransformStyle(modalState.footerElement, `translateY(calc(${footerHeight}px * -${factor / footerHeight}))`);\n      }\n    });\n\n    if (modalState.type === TYPE_PAGE && modalState.expandable) {\n      this.animatePageHeader(modalState, currentPercent);\n    }\n  }\n\n  /**\n   * Анимирует тень шапки\n   */\n  animatePageHeader (modalState: ModalsStateEntry, currentPercent: number = null) {\n    if (currentPercent === null) {\n      currentPercent = modalState.translateY;\n    }\n    const headerOpenPercent = currentPercent < 15 ? Math.max(0, 15 - currentPercent) / 15 : 0;\n\n    requestAnimationFrame(() => {\n      const headerShadow: HTMLElement = modalState.headerElement.querySelector('.ModalPageHeader__shadow');\n      if (headerShadow) {\n        headerShadow.style.opacity = headerOpenPercent.toString();\n      }\n    });\n  }\n\n  /**\n   * Устанавливает прозрачность для полупрозрачной подложки\n   */\n  setMaskOpacity (modalState: ModalsStateEntry, forceOpacity: number = null) {\n    if (forceOpacity === null && this.state.history[0] !== modalState.id) return;\n\n    cancelAnimationFrame(this.maskAnimationFrame);\n    this.maskAnimationFrame = requestAnimationFrame(() => {\n      if (this.maskElementRef.current) {\n        const { translateY, translateYCurrent } = modalState;\n\n        const opacity = forceOpacity === null ? 1 - ((translateYCurrent - translateY) / (100 - translateY)) || 0 : forceOpacity;\n        this.maskElementRef.current.style.opacity = Math.max(0, Math.min(100, opacity)).toString();\n      }\n    });\n  }\n\n  /**\n   * Закрывает текущую модалку\n   */\n  triggerActiveModalClose () {\n    const activeModalState = this.modalsState[this.state.activeModal];\n    if (activeModalState) {\n      activeModalState.onClose();\n    }\n  }\n\n  /**\n   * По клику на полупрозрачный черный фон нужно закрыть текущую модалку\n   */\n  onMaskClick = () => {\n    if (!this.state.switching) {\n      this.triggerActiveModalClose();\n    }\n  };\n\n  render () {\n    const { prevModal, activeModal, nextModal, visibleModals, animated, touchDown, dragging, switching } = this.state;\n\n    if (!activeModal && !prevModal && !nextModal && !animated) return null;\n\n    return (\n      <TouchRootContext.Provider value={true}>\n        <Touch\n          className={classNames(getClassName('ModalRoot', this.props.platform), {\n            'ModalRoot--vkapps': this.webviewType === 'vkapps',\n            'ModalRoot--touched': touchDown,\n            'ModalRoot--switching': switching\n          })}\n          onMove={this.onTouchMove}\n          onEnd={this.onTouchEnd}\n          onScroll={this.onScroll}\n        >\n          <div\n            className=\"ModalRoot__mask\"\n            onClick={this.onMaskClick}\n            ref={this.maskElementRef}\n          />\n          <div className=\"ModalRoot__viewport\">\n            {this.modals.map((Modal) => {\n              const modalId = Modal.props.id;\n              if (visibleModals.indexOf(Modal.props.id) === -1) return null;\n              const modalState = this.modalsState[modalId];\n\n              const isPage = modalState.type === TYPE_PAGE;\n              const key = 'modal-' + modalId;\n\n              return (\n                <div\n                  key={key}\n                  id={key}\n                  className={classNames('ModalRoot__modal', {\n                    'ModalRoot__modal--active': modalId === activeModal,\n                    'ModalRoot__modal--prev': modalId === prevModal,\n                    'ModalRoot__modal--next': modalId === nextModal,\n\n                    'ModalRoot__modal--dragging': dragging,\n\n                    'ModalRoot__modal--expandable': isPage && modalState.expandable,\n                    'ModalRoot__modal--expanded': isPage && modalState.expanded,\n                    'ModalRoot__modal--collapsed': isPage && modalState.collapsed\n                  })}\n                >{Modal}</div>\n              );\n            })}\n          </div>\n        </Touch>\n      </TouchRootContext.Provider>\n    );\n  }\n}\n\nexport default withPlatform(ModalRoot);\n"]},"metadata":{},"sourceType":"module"}