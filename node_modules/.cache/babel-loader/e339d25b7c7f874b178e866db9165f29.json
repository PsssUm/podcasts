{"ast":null,"code":"var _jsxFileName = \"/Users/spbiphones/Dropbox/projects/web projects/podcasts/src/pages/custom_views/UploadPodcast.js\";\nimport React from 'react';\nimport { Button } from '@vkontakte/vkui';\nimport podcast_icon from \"../../resources/icons/podcast_icon.svg\";\nimport moment from 'moment';\nvar objectUrl;\n\nclass UploadPodcast extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getDuration = file => {\n      objectUrl = URL.createObjectURL(file);\n      window.document.getElementById(\"audio\").src = objectUrl;\n      window.document.getElementById(\"audio\").addEventListener(\"canplaythrough\", this.onCanPlayAudio);\n    };\n\n    this.onCanPlayAudio = e => {\n      var seconds = e.currentTarget.duration;\n      var duration = moment.duration(seconds, \"seconds\");\n      var time = \"\";\n      var hours = duration.hours();\n\n      if (hours > 0) {\n        time = hours + \":\";\n      }\n\n      time = time + duration.minutes() + \":\" + duration.seconds();\n      URL.revokeObjectURL(objectUrl);\n      this.setState({\n        duration: time\n      });\n    };\n\n    this.state = {\n      isPickedPodcast: false,\n      audioSrc: \"\",\n      name: \"\",\n      duration: \"\"\n    };\n    this.fileUpload = React.createRef();\n    this.podcastContainer = React.createRef();\n    this.showPickedPodcast = this.showPickedPodcast.bind(this);\n    this.pickPodcast = this.pickPodcast.bind(this);\n    this.fileChangedHandler = this.fileChangedHandler.bind(this);\n  }\n\n  showPickedPodcast() {\n    this.setState({\n      isPickedPodcast: true\n    });\n  }\n\n  pickPodcast() {\n    this.fileUpload.current.click();\n  }\n\n  fileChangedHandler(event) {\n    if (event && event.target.files && event.target.files.length > 0) {\n      // const urlObj = URL.createObjectURL(event.target.files[0])\n      const file = event.target.files[0];\n      this.showPickedPodcast();\n      this.setState({\n        name: file.name\n      });\n      this.props.podcastPicked(file);\n      this.getDuration(file);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"podcastContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, !this.state.isPickedPodcast ? React.createElement(\"div\", {\n      className: \"upload_podcast_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"upload_podcast_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u0435 \\u0412\\u0430\\u0448 \\u043F\\u043E\\u0434\\u043A\\u0430\\u0441\\u0442\"), React.createElement(\"p\", {\n      className: \"create_donation_text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0433\\u043E\\u0442\\u043E\\u0432\\u044B\\u0439 \\u0430\\u0443\\u0434\\u0438\\u043E\\u0444\\u0430\\u0439\\u043B \\u0438\\u0437 \\u0432\\u0430\\u0448\\u0435\\u0433\\u043E \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430 \\u0438 \\u0434\\u043E\\u0431\\u0430\\u0432\\u044C\\u0442\\u0435 \\u0435\\u0433\\u043E\"), React.createElement(\"div\", {\n      onClick: this.pickPodcast,\n      className: \"stroke_button horizontal-center hover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0444\\u0430\\u0439\\u043B\")) : React.createElement(\"div\", {\n      className: \"podcast_uploaded_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      onClick: this.pickPodcast,\n      className: \"flex just_content hover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"podcast_icon_picked\",\n      src: podcast_icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"podcast_title_picked\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, this.state.name)), React.createElement(\"p\", {\n      className: \"time_podcast_picked\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"59:16\")), React.createElement(\"p\", {\n      className: \"podcast_picked_decr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"\\u0412\\u044B \\u043C\\u043E\\u0436\\u0435\\u0442\\u0435 \\u0434\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0442\\u0430\\u0439\\u043C\\u043A\\u043E\\u0434\\u044B \\u0438 \\u0441\\u043A\\u043E\\u0440\\u0440\\u0435\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u043E\\u0434\\u043A\\u0430\\u0441\\u0442 \\u0432 \\u0440\\u0435\\u0436\\u0438\\u043C\\u0435 \\u0440\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F\"), React.createElement(\"div\", {\n      className: \"large_stroke_button hover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0430\\u0443\\u0434\\u0438\\u043E\\u0437\\u0430\\u043F\\u0438\\u0441\\u044C\")), React.createElement(\"input\", {\n      id: \"fileInput\",\n      className: \"custom-file-input hover\",\n      type: \"file\",\n      accept: \"audio/*\",\n      onChange: this.fileChangedHandler,\n      style: {\n        display: \"none\"\n      },\n      ref: this.fileUpload,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"audio\", {\n      id: \"audio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default UploadPodcast;","map":{"version":3,"sources":["/Users/spbiphones/Dropbox/projects/web projects/podcasts/src/pages/custom_views/UploadPodcast.js"],"names":["React","Button","moment","objectUrl","UploadPodcast","Component","constructor","props","getDuration","file","URL","createObjectURL","window","document","getElementById","src","addEventListener","onCanPlayAudio","e","seconds","currentTarget","duration","time","hours","minutes","revokeObjectURL","setState","state","isPickedPodcast","audioSrc","name","fileUpload","createRef","podcastContainer","showPickedPodcast","bind","pickPodcast","fileChangedHandler","current","click","event","target","files","length","podcastPicked","render","podcast_icon","display"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button} from '@vkontakte/vkui';\nimport podcast_icon from '../../resources/icons/podcast_icon.svg'\nimport moment from 'moment'\nvar objectUrl;\nclass UploadPodcast extends React.Component {\n   \n    constructor(props){\n        super(props)\n        this.state = {\n            isPickedPodcast : false,\n            audioSrc : \"\",\n            name : \"\",\n            duration : \"\",\n        }\n        this.fileUpload = React.createRef();\n        this.podcastContainer = React.createRef();\n        this.showPickedPodcast = this.showPickedPodcast.bind(this)\n        this.pickPodcast = this.pickPodcast.bind(this)\n        this.fileChangedHandler = this.fileChangedHandler.bind(this);\n\n    }\n    showPickedPodcast(){\n        this.setState({isPickedPodcast : true})\n    }\n    pickPodcast(){\n        this.fileUpload.current.click();\n    }\n    \n    fileChangedHandler(event) {\n        if(event && event.target.files && event.target.files.length > 0){\n            // const urlObj = URL.createObjectURL(event.target.files[0])\n            const file = event.target.files[0]\n            this.showPickedPodcast()\n            this.setState({name : file.name})\n            this.props.podcastPicked(file)\n            this.getDuration(file)\n\n        }\n    }\n    getDuration = (file) => {\n        objectUrl = URL.createObjectURL(file);\n        window.document.getElementById(\"audio\").src = objectUrl\n        window.document.getElementById(\"audio\").addEventListener(\"canplaythrough\", this.onCanPlayAudio)\n        \n    }\n    onCanPlayAudio = (e) =>{\n        var seconds = e.currentTarget.duration;\n        var duration = moment.duration(seconds, \"seconds\");\n        \n        var time = \"\";\n        var hours = duration.hours();\n        if (hours > 0) { time = hours + \":\" ; }\n        \n        time = time + duration.minutes() + \":\" + duration.seconds();\n        \n        URL.revokeObjectURL(objectUrl);\n        this.setState({duration : time})\n    }\n  \n    render() {\n        return (\n            <div id=\"podcastContainer\">\n                {!this.state.isPickedPodcast ? <div className=\"upload_podcast_container\">\n                    <p className=\"upload_podcast_title\">Загрузите Ваш подкаст</p>\n                    <p className=\"create_donation_text\">Выберите готовый аудиофайл из вашего телефона и добавьте его</p>\n                    <div onClick={this.pickPodcast} className=\"stroke_button horizontal-center hover\">Загрузить файл</div>\n                </div> :\n                <div className=\"podcast_uploaded_container\">\n                    <div onClick={this.pickPodcast} className=\"flex just_content hover\">\n                        <div className=\"flex\">\n                            <img className=\"podcast_icon_picked\" src={podcast_icon}/>\n                            <p className=\"podcast_title_picked\">{this.state.name}</p>\n                        </div>\n                        <p className=\"time_podcast_picked\">59:16</p>\n                    </div>\n                    <p className=\"podcast_picked_decr\">Вы можете добавить таймкоды и скорректировать подкаст в режиме редактирования</p>\n                    <div className=\"large_stroke_button hover\">Редактировать аудиозапись</div>\n                </div>}\n                <input id=\"fileInput\" className=\"custom-file-input hover\" type=\"file\" accept=\"audio/*\" onChange={this.fileChangedHandler} style={{ display: \"none\" }} ref={this.fileUpload}/>\n                <audio id=\"audio\"></audio>\n            </div>\n        );\n    }\n}\nexport default UploadPodcast;"]},"metadata":{},"sourceType":"module"}