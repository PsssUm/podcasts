{"ast":null,"code":"import _objectSpread from \"/Users/spbiphones/Dropbox/projects/web projects/podcasts/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/spbiphones/Dropbox/projects/web projects/podcasts/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/spbiphones/Dropbox/projects/web projects/podcasts/src/pages/custom_views/WaveFormExample.js\";\nimport React, { useCallback, useEffect, useRef, useState, useMemo, useImperativeHandle, forwardRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styled from \"styled-components\";\nimport { WaveSurfer, WaveForm, Region } from \"wavesurfer-react\";\nimport RegionsPlugin from \"wavesurfer.js/dist/plugin/wavesurfer.regions.min\";\nimport TimelinePlugin from \"wavesurfer.js/dist/plugin/wavesurfer.timeline.min\";\nvar isUndoClicked = false;\n\nfunction generateNum(min, max) {\n  return Math.random() * (max - min + 1) + min;\n}\n\nconst Button = styled.button``;\n/**\n * @param distance\n * @param min\n * @param max\n * @returns {([*, *]|[*, *])|*[]}\n */\n\nfunction generateTwoNumsWithDistance(distance, min, max) {\n  const num1 = generateNum(min, max);\n  const num2 = generateNum(min, max); // if num2 - num1 < 10\n\n  if (num2 - num1 >= 10) {\n    return [num1, num2];\n  }\n\n  return generateTwoNumsWithDistance(distance, min, max);\n}\n\nconst WaveformExample = forwardRef((props, ref) => {\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        timelineVis = _useState2[0],\n        setTimelineVis = _useState2[1];\n\n  useImperativeHandle(ref, () => ({\n    removeAllRegions() {\n      if (wavesurferRef.current != undefined) {\n        setRegions([]);\n      }\n    }\n\n  }));\n  const plugins = useMemo(() => {\n    return [{\n      plugin: RegionsPlugin,\n      options: {\n        dragSelection: true\n      }\n    }, timelineVis && {\n      plugin: TimelinePlugin,\n      options: {\n        container: \"#timeline\",\n        height: '26px'\n      }\n    }].filter(Boolean);\n  }, [timelineVis]);\n  const toggleTimeline = useCallback(() => {\n    setTimelineVis(!timelineVis);\n  }, [timelineVis]);\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        regions = _useState4[0],\n        setRegions = _useState4[1]; // use regions ref to pass it inside useCallback\n  // so it will use always the most fresh version of regions list\n\n\n  const regionsRef = useRef(regions);\n  useEffect(() => {\n    regionsRef.current = regions;\n  }, [regions]);\n  const regionCreatedHandler = useCallback(region => {\n    console.log(\"region-created --> region:\", region);\n    props.onRegionSelected(region);\n    if (region.data.systemRegionId) return;\n    setRegions([...regionsRef.current, _objectSpread({}, region, {\n      data: _objectSpread({}, region.data, {\n        systemRegionId: -1\n      })\n    })]);\n  }, [regionsRef]);\n  const wavesurferRef = useRef();\n  const handlePosChange = useCallback(position => {\n    console.log(\"position = \" + position);\n  });\n  const handleWSMount = useCallback(waveSurfer => {\n    wavesurferRef.current = waveSurfer;\n\n    if (wavesurferRef.current) {\n      const url = URL.createObjectURL(props.audioSrc);\n      wavesurferRef.current.load(url);\n      wavesurferRef.current.on(\"region-created\", regionCreatedHandler);\n      wavesurferRef.current.on(\"ready\", () => {\n        console.log(\"WaveSurfer is ready\");\n      });\n      wavesurferRef.current.on(\"region-removed\", region => {\n        console.log(\"region-removed --> \", region);\n      });\n      wavesurferRef.current.on(\"loading\", data => {\n        console.log(\"loading --> \", data);\n      });\n      wavesurferRef.current.on(\"audioprocess\", data => {\n        props.onTimeCodeChanged(data);\n        console.log(\"isGrow = \" + props.isGrow);\n\n        if (props.isGrow) {\n          if (data <= parseInt(data)) {\n            console.log(\"volume = 0.1\");\n            wavesurferRef.current.setVolume(0.1);\n          } else {\n            console.log(\"volume = 1\");\n            wavesurferRef.current.setVolume(1);\n          }\n        }\n      });\n      wavesurferRef.current.on(\"interaction\", data => {\n        props.onTimeCodeChanged(wavesurferRef.current.getCurrentTime());\n      });\n\n      if (window) {\n        window.surferidze = wavesurferRef.current;\n      }\n    }\n  }, [regionCreatedHandler]);\n  const play = useCallback(() => {\n    wavesurferRef.current.playPause();\n  }, []);\n\n  if (wavesurferRef.current != undefined) {\n    if (props.isPlaying) {\n      wavesurferRef.current.play();\n    } else {\n      wavesurferRef.current.pause();\n    }\n  }\n\n  const timeout = useCallback(() => {\n    isUndoClicked = false;\n    props.disableUndo();\n  }, []);\n  const removeAllRegions = useCallback(() => {\n    setRegions([]);\n  }, []);\n  const handleRegionUpdate = useCallback((region, smth) => {\n    console.log(\"region-update-end --> region:\", region);\n    console.log(smth);\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, React.createElement(WaveSurfer, {\n    onPosChange: handlePosChange,\n    plugins: plugins,\n    onMount: handleWSMount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"timeline_bg\",\n    id: \"timeline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }), React.createElement(WaveForm, {\n    barWidth: 2,\n    barRadius: 1,\n    barGap: 3,\n    cursorWidth: 2,\n    height: 96,\n    progressColor: \"#3F8AE0\",\n    responsive: true,\n    loopSelection: true,\n    waveColor: \"#3F8AE0\",\n    cursorColor: \"#FF3347\",\n    id: \"waveform\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, regions.map(regionProps => React.createElement(Region, Object.assign({\n    onUpdateEnd: handleRegionUpdate,\n    key: regionProps.id\n  }, regionProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }))))));\n});\nexport default WaveformExample;","map":{"version":3,"sources":["/Users/spbiphones/Dropbox/projects/web projects/podcasts/src/pages/custom_views/WaveFormExample.js"],"names":["React","useCallback","useEffect","useRef","useState","useMemo","useImperativeHandle","forwardRef","ReactDOM","styled","WaveSurfer","WaveForm","Region","RegionsPlugin","TimelinePlugin","isUndoClicked","generateNum","min","max","Math","random","Button","button","generateTwoNumsWithDistance","distance","num1","num2","WaveformExample","props","ref","timelineVis","setTimelineVis","removeAllRegions","wavesurferRef","current","undefined","setRegions","plugins","plugin","options","dragSelection","container","height","filter","Boolean","toggleTimeline","regions","regionsRef","regionCreatedHandler","region","console","log","onRegionSelected","data","systemRegionId","handlePosChange","position","handleWSMount","waveSurfer","url","URL","createObjectURL","audioSrc","load","on","onTimeCodeChanged","isGrow","parseInt","setVolume","getCurrentTime","window","surferidze","play","playPause","isPlaying","pause","timeout","disableUndo","handleRegionUpdate","smth","map","regionProps","id"],"mappings":"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","sourcesContent":["import React, {\n    useCallback,\n    useEffect,\n    useRef,\n    useState,\n    useMemo,\n    useImperativeHandle,\n    forwardRef\n  } from \"react\";\n  import ReactDOM from \"react-dom\";\n  import styled from \"styled-components\";\n  import { WaveSurfer, WaveForm, Region } from \"wavesurfer-react\";\n  import RegionsPlugin from \"wavesurfer.js/dist/plugin/wavesurfer.regions.min\";\n  import TimelinePlugin from \"wavesurfer.js/dist/plugin/wavesurfer.timeline.min\";\n  \n  var isUndoClicked = false\n  function generateNum(min, max) {\n    return Math.random() * (max - min + 1) + min;\n  }\n  const Button = styled.button``;\n  \n  /**\n   * @param distance\n   * @param min\n   * @param max\n   * @returns {([*, *]|[*, *])|*[]}\n   */\n  function generateTwoNumsWithDistance(distance, min, max) {\n    const num1 = generateNum(min, max);\n    const num2 = generateNum(min, max);\n    // if num2 - num1 < 10\n    if (num2 - num1 >= 10) {\n      return [num1, num2];\n    }\n    return generateTwoNumsWithDistance(distance, min, max);\n  }\n const WaveformExample = forwardRef((props, ref) => {\n    const [timelineVis, setTimelineVis] = useState(true);\n    useImperativeHandle(ref, () => ({\n\n        removeAllRegions() {\n            if (wavesurferRef.current != undefined){\n                setRegions([])\n            }\n        }\n       \n    \n      }));\n     \n    const plugins = useMemo(() => {\n      return [\n        {\n          plugin: RegionsPlugin,\n          options: {\n            \n            dragSelection: true,\n\n          }\n        },\n        timelineVis && {\n          plugin: TimelinePlugin,\n          options: {\n            container: \"#timeline\",\n            height : '26px'\n          }\n        }\n      ].filter(Boolean);\n    }, [timelineVis]);\n    \n    const toggleTimeline = useCallback(() => {\n      setTimelineVis(!timelineVis);\n    }, [timelineVis]);\n    \n    const [regions, setRegions] = useState([\n     \n    ]);\n  \n    // use regions ref to pass it inside useCallback\n    // so it will use always the most fresh version of regions list\n    const regionsRef = useRef(regions);\n  \n    useEffect(() => {\n      regionsRef.current = regions;\n    }, [regions]);\n  \n    const regionCreatedHandler = useCallback(\n      region => {\n        console.log(\"region-created --> region:\", region);\n        props.onRegionSelected(region)\n        if (region.data.systemRegionId) return;\n  \n        setRegions([\n          ...regionsRef.current,\n          { ...region, data: { ...region.data, systemRegionId: -1 } }\n        ]);\n      },\n      [regionsRef]\n    );\n  \n    const wavesurferRef = useRef();\n    const handlePosChange = useCallback(position => {\n        console.log(\"position = \" + position)\n    })\n    const handleWSMount = useCallback(\n      waveSurfer => {\n        wavesurferRef.current = waveSurfer;\n        if (wavesurferRef.current) {\n            const url = URL.createObjectURL(props.audioSrc)\n          wavesurferRef.current.load(url);\n  \n          wavesurferRef.current.on(\"region-created\", regionCreatedHandler);\n\n          wavesurferRef.current.on(\"ready\", () => {\n            console.log(\"WaveSurfer is ready\");\n          });\n  \n          wavesurferRef.current.on(\"region-removed\", region => {\n            console.log(\"region-removed --> \", region);\n          });\n  \n          wavesurferRef.current.on(\"loading\", data => {\n            console.log(\"loading --> \", data);\n          });\n          wavesurferRef.current.on(\"audioprocess\", data => {\n            props.onTimeCodeChanged(data)\n            console.log(\"isGrow = \" + props.isGrow)\n            if (props.isGrow){\n                if (data <= parseInt(data)){\n                    console.log(\"volume = 0.1\")\n                    wavesurferRef.current.setVolume(0.1)\n                } else {\n                    console.log(\"volume = 1\")\n                    wavesurferRef.current.setVolume(1)\n                }\n            } \n            \n          });\n          wavesurferRef.current.on(\"interaction\", data => {\n            props.onTimeCodeChanged(wavesurferRef.current.getCurrentTime())\n          });\n  \n          if (window) {\n            window.surferidze = wavesurferRef.current;\n          }\n        }\n        \n      },\n      [regionCreatedHandler]\n    );\n     \n    const play = useCallback(() => {\n      wavesurferRef.current.playPause();\n    }, []);\n    if (wavesurferRef.current != undefined){\n        if (props.isPlaying){\n            wavesurferRef.current.play()\n        } else {\n            wavesurferRef.current.pause()\n        }\n    }\n    const timeout = useCallback(() => {\n        isUndoClicked = false\n        props.disableUndo()\n    }, []);\n    const removeAllRegions = useCallback(() => {\n        setRegions([]);\n      }, []);\n    \n    \n    const handleRegionUpdate = useCallback((region, smth) => {\n        console.log(\"region-update-end --> region:\", region);\n        console.log(smth);\n      }, []);\n   \n    return (\n        \n      <div className=\"App\">\n           \n        <WaveSurfer onPosChange={handlePosChange} plugins={plugins} onMount={handleWSMount}>\n          <div className=\"timeline_bg\" id=\"timeline\" />\n          <WaveForm \n                    barWidth={2}\n                    barRadius={1}\n                    barGap={3}\n                    cursorWidth={2}\n                    height={96} progressColor={\"#3F8AE0\"} responsive={true} loopSelection={true} waveColor={\"#3F8AE0\"} cursorColor={\"#FF3347\"}  id=\"waveform\">\n            {regions.map(regionProps => (\n            <Region\n              onUpdateEnd={handleRegionUpdate}\n              key={regionProps.id}\n              {...regionProps}\n            />\n          ))}\n          </WaveForm>\n        </WaveSurfer>\n        \n      </div>\n    );\n })\n  export default WaveformExample;"]},"metadata":{},"sourceType":"module"}