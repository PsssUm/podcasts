{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport FixedLayout from '../FixedLayout/FixedLayout';\nimport classNames from '../../lib/classNames';\nimport getClassName from '../../helpers/getClassName';\nimport transitionEvents from '../../lib/transitionEvents';\nvar baseClassNames = getClassName('HeaderContext');\n\nvar HeaderContext =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(HeaderContext, _Component);\n\n  function HeaderContext() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, HeaderContext);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(HeaderContext)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      closing: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"elementRef\", React.createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"onAnimationFinish\", function () {\n      _this.setState({\n        closing: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(HeaderContext, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.opened !== prevProps.opened) {\n        if (this.props.opened === false) {\n          this.setState({\n            closing: true\n          });\n          this.waitAnimationFinish(this.onAnimationFinish);\n        }\n      }\n    }\n  }, {\n    key: \"waitAnimationFinish\",\n    value: function waitAnimationFinish(eventHandler) {\n      var eventName = transitionEvents.animationEndEventName;\n      var element = this.elementRef.current;\n\n      if (element) {\n        element.removeEventListener(eventName, eventHandler);\n        element.addEventListener(eventName, eventHandler);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          opened = _this$props.opened,\n          onClose = _this$props.onClose,\n          restProps = _objectWithoutProperties(_this$props, [\"children\", \"className\", \"opened\", \"onClose\"]);\n\n      var closing = this.state.closing;\n      return React.createElement(FixedLayout, _extends({}, restProps, {\n        className: classNames(baseClassNames, {\n          'HeaderContext--opened': opened,\n          'HeaderContext--closing': closing\n        }, className),\n        vertical: \"top\"\n      }), React.createElement(\"div\", {\n        className: \"HeaderContext__in\",\n        ref: this.elementRef\n      }, (opened || closing) && children), (opened || closing) && React.createElement(\"div\", {\n        onClick: onClose,\n        className: \"HeaderContext__fade\"\n      }));\n    }\n  }]);\n\n  return HeaderContext;\n}(Component);\n\n_defineProperty(HeaderContext, \"propTypes\", {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  onClose: PropTypes.func.isRequired,\n  opened: PropTypes.bool.isRequired\n});\n\n_defineProperty(HeaderContext, \"defaultProps\", {\n  opened: false\n});\n\nexport { HeaderContext as default };","map":{"version":3,"sources":["../../../../src/components/HeaderContext/HeaderContext.js"],"names":["baseClassNames","getClassName","HeaderContext","Component","children","PropTypes","className","style","onClose","opened","isRequired","closing","React","prevProps","eventHandler","eventName","transitionEvents","element","restProps","classNames","elementRef"],"mappings":";;;;;;;;;AAAA,OAAA,KAAA,IAAA,SAAA,QAAA,OAAA;AACA,OAAA,SAAA,MAAA,YAAA;AACA,OAAA,WAAA,MAAA,4BAAA;AACA,OAAA,UAAA,MAAA,sBAAA;AACA,OAAA,YAAA,MAAA,4BAAA;AACA,OAAA,gBAAA,MAAA,4BAAA;AAEA,IAAMA,cAAc,GAAGC,YAAY,CAAnC,eAAmC,CAAnC;;IAEqBC,a;;;;;;;;;;;;;;;;;;4DAaX;AACNS,MAAAA,OAAO,EAAE;AADH,K;;iEAIKC,KAAK,CAALA,SAAAA,E;;wEAqBO,YAAM;AACxB,MAAA,KAAA,CAAA,QAAA,CAAc;AAAED,QAAAA,OAAO,EAAE;AAAX,OAAd;;;;;;;;uCApBkBE,S,EAAW;AAC7B,UAAI,KAAA,KAAA,CAAA,MAAA,KAAsBA,SAAS,CAAnC,MAAA,EAA4C;AAC1C,YAAI,KAAA,KAAA,CAAA,MAAA,KAAJ,KAAA,EAAiC;AAC/B,eAAA,QAAA,CAAc;AAAEF,YAAAA,OAAO,EAAE;AAAX,WAAd;AACA,eAAA,mBAAA,CAAyB,KAAzB,iBAAA;AACD;AACF;AACF;;;wCAEoBG,Y,EAAc;AACjC,UAAMC,SAAS,GAAGC,gBAAgB,CAAlC,qBAAA;AACA,UAAMC,OAAO,GAAG,KAAA,UAAA,CAAhB,OAAA;;AAEA,UAAA,OAAA,EAAa;AACXA,QAAAA,OAAO,CAAPA,mBAAAA,CAAAA,SAAAA,EAAAA,YAAAA;AACAA,QAAAA,OAAO,CAAPA,gBAAAA,CAAAA,SAAAA,EAAAA,YAAAA;AACD;AACF;;;6BAMS;AAAA,UAAA,WAAA,GACuD,KADvD,KAAA;AAAA,UACAb,QADA,GAAA,WAAA,CAAA,QAAA;AAAA,UACUE,SADV,GAAA,WAAA,CAAA,SAAA;AAAA,UACqBG,MADrB,GAAA,WAAA,CAAA,MAAA;AAAA,UAC6BD,OAD7B,GAAA,WAAA,CAAA,OAAA;AAAA,UACyCU,SADzC,GAAA,wBAAA,CAAA,WAAA,EAAA,CAAA,UAAA,EAAA,WAAA,EAAA,QAAA,EAAA,SAAA,CAAA,CAAA;;AAAA,UAEAP,OAFA,GAEY,KAFZ,KAEY,CAFZ,OAAA;AAIR,aACE,KAAA,CAAA,aAAA,CAAA,WAAA,EAAA,QAAA,CAAA,EAAA,EAAA,SAAA,EAAA;AAA4B,QAAA,SAAS,EAAEQ,UAAU,CAAA,cAAA,EAAiB;AAChE,mCADgE,MAAA;AAEhE,oCAA0BR;AAFsC,SAAjB,EAAjD,SAAiD,CAAjD;AAGe,QAAA,QAAQ,EAAC;AAHxB,OAAA,CAAA,EAIE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,SAAS,EAAd,mBAAA;AAAmC,QAAA,GAAG,EAAE,KAAKS;AAA7C,OAAA,EACG,CAACX,MAAM,IAAP,OAAA,KALL,QAIE,CAJF,EAOG,CAACA,MAAM,IAAP,OAAA,KAAuB,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,OAAO,EAAZ,OAAA;AAAuB,QAAA,SAAS,EAAC;AAAjC,OAAA,CAP1B,CADF;AAWD;;;;EAzDwCN,S;;gBAAtBD,a,eACA;AACjBE,EAAAA,QAAQ,EAAEC,SAAS,CADF,IAAA;AAEjBC,EAAAA,SAAS,EAAED,SAAS,CAFH,MAAA;AAGjBE,EAAAA,KAAK,EAAEF,SAAS,CAHC,MAAA;AAIjBG,EAAAA,OAAO,EAAEH,SAAS,CAATA,IAAAA,CAJQ,UAAA;AAKjBI,EAAAA,MAAM,EAAEJ,SAAS,CAATA,IAAAA,CAAeK;AALN,C;;gBADAR,a,kBASG;AACpBO,EAAAA,MAAM,EAAE;AADY,C;;SATHP,a","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport FixedLayout from '../FixedLayout/FixedLayout';\nimport classNames from '../../lib/classNames';\nimport getClassName from '../../helpers/getClassName';\nimport transitionEvents from '../../lib/transitionEvents';\n\nconst baseClassNames = getClassName('HeaderContext');\n\nexport default class HeaderContext extends Component {\n  static propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n    style: PropTypes.object,\n    onClose: PropTypes.func.isRequired,\n    opened: PropTypes.bool.isRequired\n  };\n\n  static defaultProps = {\n    opened: false\n  };\n\n  state = {\n    closing: false\n  };\n\n  elementRef = React.createRef();\n\n  componentDidUpdate (prevProps) {\n    if (this.props.opened !== prevProps.opened) {\n      if (this.props.opened === false) {\n        this.setState({ closing: true });\n        this.waitAnimationFinish(this.onAnimationFinish);\n      }\n    }\n  }\n\n  waitAnimationFinish (eventHandler) {\n    const eventName = transitionEvents.animationEndEventName;\n    const element = this.elementRef.current;\n\n    if (element) {\n      element.removeEventListener(eventName, eventHandler);\n      element.addEventListener(eventName, eventHandler);\n    }\n  }\n\n  onAnimationFinish = () => {\n    this.setState({ closing: false });\n  };\n\n  render () {\n    const { children, className, opened, onClose, ...restProps } = this.props;\n    const { closing } = this.state;\n\n    return (\n      <FixedLayout {...restProps} className={classNames(baseClassNames, {\n        'HeaderContext--opened': opened,\n        'HeaderContext--closing': closing\n      }, className)} vertical=\"top\">\n        <div className=\"HeaderContext__in\" ref={this.elementRef}>\n          {(opened || closing) && children}\n        </div>\n        {(opened || closing) && <div onClick={onClose} className=\"HeaderContext__fade\" />}\n      </FixedLayout>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}