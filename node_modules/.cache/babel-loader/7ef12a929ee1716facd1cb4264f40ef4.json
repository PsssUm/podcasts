{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport usePlatform from '../../hooks/usePlatform';\nimport { createMasks } from './masks';\ncreateMasks();\n\nvar UsersStack = function UsersStack(props) {\n  var platform = usePlatform();\n\n  var className = props.className,\n      photos = props.photos,\n      count = props.count,\n      size = props.size,\n      vertical = props.vertical,\n      children = props.children,\n      restProps = _objectWithoutProperties(props, [\"className\", \"photos\", \"count\", \"size\", \"vertical\", \"children\"]);\n\n  var othersCount = Math.max(0, photos.length - count);\n  var canShowOthers = othersCount > 0 && size === 'm';\n  var photosShown = photos.slice(0, count);\n  return React.createElement(\"div\", _extends({}, restProps, {\n    className: classNames(getClassName('UsersStack', platform), className, 'UsersStack--size-' + size, {\n      'UsersStack--with-others': canShowOthers,\n      'UsersStack--v': vertical\n    })\n  }), React.createElement(\"div\", {\n    className: \"UsersStack__photos\"\n  }, photosShown.map(function (photo, i) {\n    return React.createElement(\"div\", {\n      key: i,\n      className: \"UsersStack__photo\",\n      style: {\n        backgroundImage: \"url(\".concat(photo, \")\")\n      }\n    });\n  }), canShowOthers && React.createElement(\"div\", {\n    className: \"UsersStack__photo UsersStack__photo--others\"\n  }, \"+\".concat(othersCount))), children && React.createElement(\"div\", {\n    className: \"UsersStack__text\"\n  }, children));\n};\n\nUsersStack.defaultProps = {\n  photos: [],\n  size: 's',\n  count: 3\n};\nexport default React.memo(UsersStack);","map":{"version":3,"sources":["../../../../src/components/UsersStack/UsersStack.tsx"],"names":["createMasks","UsersStack","platform","usePlatform","className","photos","count","size","vertical","children","restProps","props","othersCount","Math","canShowOthers","photosShown","classNames","getClassName","backgroundImage","React"],"mappings":";;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,YAAA,MAAA,4BAAA;AACA,OAAA,UAAA,MAAA,sBAAA;AAEA,OAAA,WAAA,MAAA,yBAAA;AACA,SAAA,WAAA,QAAA,SAAA;AAEAA,WAAW;;AAsBX,IAAMC,UAAoD,GAAG,SAAvDA,UAAuD,CAAA,KAAA,EAA4B;AACvF,MAAMC,QAAQ,GAAGC,WAAjB,EAAA;;AADuF,MAE/EC,SAF+E,GAEVO,KAFU,CAAA,SAAA;AAAA,MAEpEN,MAFoE,GAEVM,KAFU,CAAA,MAAA;AAAA,MAE5DL,KAF4D,GAEVK,KAFU,CAAA,KAAA;AAAA,MAErDJ,IAFqD,GAEVI,KAFU,CAAA,IAAA;AAAA,MAE/CH,QAF+C,GAEVG,KAFU,CAAA,QAAA;AAAA,MAErCF,QAFqC,GAEVE,KAFU,CAAA,QAAA;AAAA,MAExBD,SAFwB,GAAA,wBAAA,CAAA,KAAA,EAAA,CAAA,WAAA,EAAA,QAAA,EAAA,OAAA,EAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,CAAA;;AAIvF,MAAME,WAAW,GAAGC,IAAI,CAAJA,GAAAA,CAAAA,CAAAA,EAAYR,MAAM,CAANA,MAAAA,GAAhC,KAAoBQ,CAApB;AACA,MAAMC,aAAa,GAAGF,WAAW,GAAXA,CAAAA,IAAmBL,IAAI,KAA7C,GAAA;AAEA,MAAMQ,WAAW,GAAGV,MAAM,CAANA,KAAAA,CAAAA,CAAAA,EAApB,KAAoBA,CAApB;AAEA,SACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA,EAAA,EAAA,SAAA,EAAA;AAAoB,IAAA,SAAS,EAAEW,UAAU,CAACC,YAAY,CAAA,YAAA,EAAb,QAAa,CAAb,EAAA,SAAA,EAAkD,sBAAlD,IAAA,EAA8E;AACrH,iCADqH,aAAA;AAErH,uBAAiBT;AAFoG,KAA9E;AAAzC,GAAA,CAAA,EAIE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EACG,WAAW,CAAX,GAAA,CAAgB,UAAA,KAAA,EAAA,CAAA,EAAA;AAAA,WACf,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,MAAA,GAAG,EADL,CAAA;AAEE,MAAA,SAAS,EAFX,mBAAA;AAGE,MAAA,KAAK,EAAE;AAAEU,QAAAA,eAAe,EAAA,OAAA,MAAA,CAAA,KAAA,EAAA,GAAA;AAAjB;AAHT,KAAA,CADe;AADnB,GACG,CADH,EASGJ,aAAa,IACd,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EAAA,IAAA,MAAA,CAdJ,WAcI,CAAA,CAVF,CAJF,EAkBGL,QAAQ,IACT,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EApBJ,QAoBI,CAnBF,CADF;AATF,CAAA;;AAqCAR,UAAU,CAAVA,YAAAA,GAA0B;AACxBI,EAAAA,MAAM,EADkB,EAAA;AAExBE,EAAAA,IAAI,EAFoB,GAAA;AAGxBD,EAAAA,KAAK,EAAE;AAHiB,CAA1BL;AAMA,eAAekB,KAAK,CAALA,IAAAA,CAAf,UAAeA,CAAf","sourcesContent":["import React from 'react';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport { HasChildren } from '../../types/props';\nimport usePlatform from '../../hooks/usePlatform';\nimport { createMasks } from './masks';\n\ncreateMasks();\n\nexport interface UsersStackProps extends React.HTMLAttributes<HTMLDivElement>, HasChildren {\n  /**\n   * Массив ссылок на фотографии\n   */\n  photos?: string[],\n  /**\n   * Размер аватарок\n   */\n  size?: 's' | 'm',\n  /**\n   * Вертикальный режим. Рекомендуется использовать с размером `m`\n   */\n  vertical?: boolean,\n  /**\n   * Количество аватарок, которые будут показаны.\n   * Если в массиве `photos` больше элементов и используется размер `m`, то будет показано количество остальных элементов\n   */\n  count?: number,\n}\n\nconst UsersStack: React.FunctionComponent<UsersStackProps> = (props: UsersStackProps) => {\n  const platform = usePlatform();\n  const { className, photos, count, size, vertical, children, ...restProps } = props;\n\n  const othersCount = Math.max(0, photos.length - count);\n  const canShowOthers = othersCount > 0 && size === 'm';\n\n  const photosShown = photos.slice(0, count);\n\n  return (\n    <div {...restProps} className={classNames(getClassName('UsersStack', platform), className, 'UsersStack--size-' + size, {\n      'UsersStack--with-others': canShowOthers,\n      'UsersStack--v': vertical\n    })}>\n      <div className=\"UsersStack__photos\">\n        {photosShown.map((photo, i) => (\n          <div\n            key={i}\n            className=\"UsersStack__photo\"\n            style={{ backgroundImage: `url(${photo})` }}\n          />\n        ))}\n\n        {canShowOthers &&\n        <div className=\"UsersStack__photo UsersStack__photo--others\">\n          {`+${othersCount}`}\n        </div>}\n      </div>\n      {children &&\n      <div className=\"UsersStack__text\">\n        {children}\n      </div>\n      }\n    </div>\n  );\n};\n\nUsersStack.defaultProps = {\n  photos: [],\n  size: 's',\n  count: 3\n};\n\nexport default React.memo(UsersStack);\n"]},"metadata":{},"sourceType":"module"}