{"ast":null,"code":"var _jsxFileName = \"/Users/spbiphones/Dropbox/projects/web projects/podcasts/src/pages/custom_views/UploadPodcast.js\";\nimport React from 'react';\nimport { Button } from '@vkontakte/vkui';\nimport podcast_icon from \"../../resources/icons/podcast_icon.svg\";\nvar fr = new FileReader();\n\nclass UploadPodcast extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isPickedPodcast: false,\n      audioSrc: \"\"\n    };\n    this.fileUpload = React.createRef();\n    this.podcastContainer = React.createRef();\n    this.showPickedPodcast = this.showPickedPodcast.bind(this);\n    this.pickPodcast = this.pickPodcast.bind(this);\n    this.fileChangedHandler = this.fileChangedHandler.bind(this);\n  }\n\n  showPickedPodcast() {\n    this.setState({\n      isPickedPodcast: true\n    });\n  }\n\n  pickPodcast() {\n    this.fileUpload.current.click();\n  }\n\n  fileChangedHandler(event) {\n    if (event && event.target.files && event.target.files.length > 0) {\n      const urlObj = URL.createObjectURL(event.target.files[0]);\n      this.showPickedPodcast();\n      this.props.podcastPicked(urlObj);\n      alert(event.target.files[0].name);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"podcastContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, !this.state.isPickedPodcast ? React.createElement(\"div\", {\n      className: \"upload_podcast_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"upload_podcast_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u0435 \\u0412\\u0430\\u0448 \\u043F\\u043E\\u0434\\u043A\\u0430\\u0441\\u0442\"), React.createElement(\"p\", {\n      className: \"create_donation_text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0433\\u043E\\u0442\\u043E\\u0432\\u044B\\u0439 \\u0430\\u0443\\u0434\\u0438\\u043E\\u0444\\u0430\\u0439\\u043B \\u0438\\u0437 \\u0432\\u0430\\u0448\\u0435\\u0433\\u043E \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430 \\u0438 \\u0434\\u043E\\u0431\\u0430\\u0432\\u044C\\u0442\\u0435 \\u0435\\u0433\\u043E\"), React.createElement(\"div\", {\n      onClick: this.pickPodcast,\n      className: \"stroke_button horizontal-center hover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0444\\u0430\\u0439\\u043B\")) : React.createElement(\"div\", {\n      className: \"podcast_uploaded_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      onClick: this.pickPodcast,\n      className: \"flex just_content hover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"podcast_icon_picked\",\n      src: podcast_icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"podcast_title_picked\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"My_podcast.mp3\")), React.createElement(\"p\", {\n      className: \"time_podcast_picked\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"59:16\")), React.createElement(\"p\", {\n      className: \"podcast_picked_decr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"\\u0412\\u044B \\u043C\\u043E\\u0436\\u0435\\u0442\\u0435 \\u0434\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0442\\u0430\\u0439\\u043C\\u043A\\u043E\\u0434\\u044B \\u0438 \\u0441\\u043A\\u043E\\u0440\\u0440\\u0435\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u043E\\u0434\\u043A\\u0430\\u0441\\u0442 \\u0432 \\u0440\\u0435\\u0436\\u0438\\u043C\\u0435 \\u0440\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F\"), React.createElement(\"div\", {\n      className: \"large_stroke_button hover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0430\\u0443\\u0434\\u0438\\u043E\\u0437\\u0430\\u043F\\u0438\\u0441\\u044C\")), React.createElement(\"input\", {\n      id: \"fileInput\",\n      className: \"custom-file-input hover\",\n      type: \"file\",\n      accept: \"audio/*\",\n      onChange: this.fileChangedHandler,\n      style: {\n        display: \"none\"\n      },\n      ref: this.fileUpload,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default UploadPodcast;","map":{"version":3,"sources":["/Users/spbiphones/Dropbox/projects/web projects/podcasts/src/pages/custom_views/UploadPodcast.js"],"names":["React","Button","fr","FileReader","UploadPodcast","Component","constructor","props","state","isPickedPodcast","audioSrc","fileUpload","createRef","podcastContainer","showPickedPodcast","bind","pickPodcast","fileChangedHandler","setState","current","click","event","target","files","length","urlObj","URL","createObjectURL","podcastPicked","alert","name","render","podcast_icon","display"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button} from '@vkontakte/vkui';\nimport podcast_icon from '../../resources/icons/podcast_icon.svg'\nvar fr = new FileReader;\nclass UploadPodcast extends React.Component {\n   \n    constructor(props){\n        super(props)\n        this.state = {\n            isPickedPodcast : false,\n            audioSrc : \"\"\n        }\n        this.fileUpload = React.createRef();\n        this.podcastContainer = React.createRef();\n        this.showPickedPodcast = this.showPickedPodcast.bind(this)\n        this.pickPodcast = this.pickPodcast.bind(this)\n        this.fileChangedHandler = this.fileChangedHandler.bind(this);\n\n    }\n    showPickedPodcast(){\n        this.setState({isPickedPodcast : true})\n    }\n    pickPodcast(){\n        this.fileUpload.current.click();\n    }\n    \n    fileChangedHandler(event) {\n        if(event && event.target.files && event.target.files.length > 0){\n            const urlObj = URL.createObjectURL(event.target.files[0])\n\n            this.showPickedPodcast()\n            this.props.podcastPicked(urlObj)\n            alert(event.target.files[0].name)\n        }\n    }\n  \n    render() {\n        return (\n            <div id=\"podcastContainer\">\n                {!this.state.isPickedPodcast ? <div className=\"upload_podcast_container\">\n                    <p className=\"upload_podcast_title\">Загрузите Ваш подкаст</p>\n                    <p className=\"create_donation_text\">Выберите готовый аудиофайл из вашего телефона и добавьте его</p>\n                    <div onClick={this.pickPodcast} className=\"stroke_button horizontal-center hover\">Загрузить файл</div>\n                </div> :\n                <div className=\"podcast_uploaded_container\">\n                    <div onClick={this.pickPodcast} className=\"flex just_content hover\">\n                        <div className=\"flex\">\n                            <img className=\"podcast_icon_picked\" src={podcast_icon}/>\n                            <p className=\"podcast_title_picked\">My_podcast.mp3</p>\n                        </div>\n                        <p className=\"time_podcast_picked\">59:16</p>\n                    </div>\n                    <p className=\"podcast_picked_decr\">Вы можете добавить таймкоды и скорректировать подкаст в режиме редактирования</p>\n                    <div className=\"large_stroke_button hover\">Редактировать аудиозапись</div>\n                </div>}\n                <input id=\"fileInput\" className=\"custom-file-input hover\" type=\"file\" accept=\"audio/*\" onChange={this.fileChangedHandler} style={{ display: \"none\" }} ref={this.fileUpload}/>\n\n            </div>\n        );\n    }\n}\nexport default UploadPodcast;"]},"metadata":{},"sourceType":"module"}