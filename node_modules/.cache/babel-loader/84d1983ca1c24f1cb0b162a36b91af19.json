{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { getSupportedEvents, coordX, coordY, touchEnabled } from '../../lib/touch';\nvar events = getSupportedEvents();\n/**\n * Контекст для компонентов, использующих Touch в качестве корневой обёртки,\n * и для которых важно не предотвращать вспылие тач-событий от дочерних компонентов\n */\n\nexport var TouchRootContext = React.createContext(false);\n\nvar Touch =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Touch, _Component);\n\n  function Touch() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Touch);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Touch)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"cancelClick\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"gesture\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"onStart\", function (e) {\n      _this.gesture = {\n        startX: coordX(e),\n        startY: coordY(e),\n        startT: new Date(),\n        isPressed: true\n      }; // Вызываем нужные колбеки из props\n\n      var outputEvent = _objectSpread({}, _this.gesture, {\n        originalEvent: e\n      });\n\n      if (_this.props.onStart) {\n        _this.props.onStart(outputEvent);\n      }\n\n      if (_this.props.onStartX) {\n        _this.props.onStartX(outputEvent);\n      }\n\n      if (_this.props.onStartY) {\n        _this.props.onStartY(outputEvent);\n      }\n\n      !touchEnabled && _this.subscribe(_this.document);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onMove\", function (e) {\n      var _this$gesture = _this.gesture,\n          isPressed = _this$gesture.isPressed,\n          isX = _this$gesture.isX,\n          isY = _this$gesture.isY,\n          startX = _this$gesture.startX,\n          startY = _this$gesture.startY;\n\n      if (isPressed) {\n        // смещения\n        var shiftX = coordX(e) - startX;\n        var shiftY = coordY(e) - startY; // абсолютные значения смещений\n\n        var shiftXAbs = Math.abs(shiftX);\n        var shiftYAbs = Math.abs(shiftY); // Если определяем мультитач, то прерываем жест\n\n        if (!!e.touches && e.touches.length > 1) {\n          return _this.onEnd(e);\n        } // если мы ещё не определились\n\n\n        if (!isX && !isY) {\n          var willBeX = shiftXAbs >= 5 && shiftXAbs > shiftYAbs;\n          var willBeY = shiftYAbs >= 5 && shiftYAbs > shiftXAbs;\n          var willBeSlidedX = willBeX && !!_this.props.onMoveX || !!_this.props.onMove;\n          var willBeSlidedY = willBeY && !!_this.props.onMoveY || !!_this.props.onMove;\n          _this.gesture.isY = willBeY;\n          _this.gesture.isX = willBeX;\n          _this.gesture.isSlideX = willBeSlidedX;\n          _this.gesture.isSlideY = willBeSlidedY;\n          _this.gesture.isSlide = willBeSlidedX || willBeSlidedY;\n        }\n\n        if (_this.gesture.isSlide) {\n          _this.gesture.shiftX = shiftX;\n          _this.gesture.shiftY = shiftY;\n          _this.gesture.shiftXAbs = shiftXAbs;\n          _this.gesture.shiftYAbs = shiftYAbs; // Вызываем нужные колбеки из props\n\n          var outputEvent = _objectSpread({}, _this.gesture, {\n            originalEvent: e\n          });\n\n          if (_this.props.onMove) {\n            _this.props.onMove(outputEvent);\n          }\n\n          if (_this.gesture.isSlideX && _this.props.onMoveX) {\n            _this.props.onMoveX(outputEvent);\n          }\n\n          if (_this.gesture.isSlideY && _this.props.onMoveY) {\n            _this.props.onMoveY(outputEvent);\n          }\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onEnd\", function (e) {\n      var _this$gesture2 = _this.gesture,\n          isPressed = _this$gesture2.isPressed,\n          isSlide = _this$gesture2.isSlide,\n          isSlideX = _this$gesture2.isSlideX,\n          isSlideY = _this$gesture2.isSlideY;\n\n      if (isPressed) {\n        // Вызываем нужные колбеки из props\n        var outputEvent = _objectSpread({}, _this.gesture, {\n          originalEvent: e\n        });\n\n        if (_this.props.onEnd) {\n          _this.props.onEnd(outputEvent);\n        }\n\n        if (isSlideY && _this.props.onEndY) {\n          _this.props.onEndY(outputEvent);\n        }\n\n        if (isSlideX && _this.props.onEndX) {\n          _this.props.onEndX(outputEvent);\n        }\n      } // Если закончили жест на ссылке, выставляем флаг для отмены перехода\n\n\n      _this.cancelClick = e.target.tagName === 'A' && isSlide;\n      _this.gesture = {};\n      !touchEnabled && _this.unsubscribe(_this.document);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDragStart\", function (e) {\n      if (e.target.tagName === 'A' || e.target.tagName === 'IMG') {\n        e.preventDefault();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClick\", function (e) {\n      if (_this.cancelClick) {\n        _this.cancelClick = false;\n        e.preventDefault();\n      }\n\n      _this.props.onClick && _this.props.onClick(e);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getRef\", function (container) {\n      _this.container = container;\n      var getRootRef = _this.props.getRootRef;\n\n      if (getRootRef) {\n        if (typeof getRootRef === 'function') {\n          getRootRef(container);\n        } else {\n          getRootRef.current = container;\n        }\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Touch, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.container.addEventListener(events[0], this.onStart, {\n        capture: this.props.useCapture,\n        passive: false\n      });\n      touchEnabled && this.subscribe(this.container);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.container.removeEventListener(events[0], this.onStart, {\n        capture: this.props.useCapture,\n        passive: false\n      });\n      touchEnabled && this.unsubscribe(this.container);\n    }\n    /**\n     * Обработчик событий touchstart\n     *\n     * @param {Object} e Браузерное событие\n     * @returns {void}\n     */\n\n  }, {\n    key: \"subscribe\",\n    value: function subscribe(element) {\n      element.addEventListener(events[1], this.onMove, {\n        capture: this.props.useCapture,\n        passive: false\n      });\n      element.addEventListener(events[2], this.onEnd, {\n        capture: this.props.useCapture,\n        passive: false\n      });\n      element.addEventListener(events[3], this.onEnd, {\n        capture: this.props.useCapture,\n        passive: false\n      });\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe(element) {\n      element.removeEventListener(events[1], this.onMove, {\n        capture: this.props.useCapture,\n        passive: false\n      });\n      element.removeEventListener(events[2], this.onEnd, {\n        capture: this.props.useCapture,\n        passive: false\n      });\n      element.removeEventListener(events[3], this.onEnd, {\n        capture: this.props.useCapture,\n        passive: false\n      });\n    }\n    /**\n     * Обработчик событий dragstart\n     * Отменяет нативное браузерное поведение для вложенных ссылок и изображений\n     *\n     * @param {Object} e Браузерное событие\n     * @returns {void}\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          onStart = _this$props.onStart,\n          onStartX = _this$props.onStartX,\n          onStartY = _this$props.onStartY,\n          onMove = _this$props.onMove,\n          onMoveX = _this$props.onMoveX,\n          onMoveY = _this$props.onMoveY,\n          onEnd = _this$props.onEnd,\n          onEndX = _this$props.onEndX,\n          onEndY = _this$props.onEndY,\n          useCapture = _this$props.useCapture,\n          component = _this$props.component,\n          getRootRef = _this$props.getRootRef,\n          restProps = _objectWithoutProperties(_this$props, [\"onStart\", \"onStartX\", \"onStartY\", \"onMove\", \"onMoveX\", \"onMoveY\", \"onEnd\", \"onEndX\", \"onEndY\", \"useCapture\", \"component\", \"getRootRef\"]);\n\n      var ComponentName = component;\n      return React.createElement(ComponentName, _extends({}, restProps, {\n        onDragStart: this.onDragStart,\n        onClick: this.onClick,\n        ref: this.getRef\n      }), this.props.children);\n    }\n  }, {\n    key: \"document\",\n    get: function get() {\n      return this.context.document || document;\n    }\n  }]);\n\n  return Touch;\n}(Component);\n\n_defineProperty(Touch, \"propTypes\", {\n  onStart: PropTypes.func,\n  onStartX: PropTypes.func,\n  onStartY: PropTypes.func,\n  onMove: PropTypes.func,\n  onMoveX: PropTypes.func,\n  onMoveY: PropTypes.func,\n  onEnd: PropTypes.func,\n  onEndX: PropTypes.func,\n  onEndY: PropTypes.func,\n  useCapture: PropTypes.bool,\n  component: PropTypes.string,\n  children: PropTypes.node,\n  onClick: PropTypes.func,\n  getRootRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.node\n  })])\n});\n\n_defineProperty(Touch, \"defaultProps\", {\n  component: 'div',\n  children: '',\n  useCapture: false\n});\n\n_defineProperty(Touch, \"contextTypes\", {\n  document: PropTypes.any\n});\n\nexport { Touch as default };","map":{"version":3,"sources":["../../../../src/components/Touch/Touch.js"],"names":["events","getSupportedEvents","TouchRootContext","React","Touch","Component","onStart","PropTypes","onStartX","onStartY","onMove","onMoveX","onMoveY","onEnd","onEndX","onEndY","useCapture","component","children","onClick","getRootRef","current","node","document","any","capture","passive","touchEnabled","startX","coordX","startY","coordY","startT","isPressed","outputEvent","originalEvent","e","isX","isY","shiftX","shiftY","shiftXAbs","Math","shiftYAbs","willBeX","willBeY","willBeSlidedX","willBeSlidedY","isSlide","isSlideX","isSlideY","element","restProps","ComponentName","getRef"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { getSupportedEvents, coordX, coordY, touchEnabled } from '../../lib/touch';\n\nconst events = getSupportedEvents();\n\n/**\n * Контекст для компонентов, использующих Touch в качестве корневой обёртки,\n * и для которых важно не предотвращать вспылие тач-событий от дочерних компонентов\n */\nexport const TouchRootContext = React.createContext(false);\n\nexport default class Touch extends Component {\n  cancelClick = false;\n  gesture = {};\n\n  static propTypes = {\n    onStart: PropTypes.func,\n    onStartX: PropTypes.func,\n    onStartY: PropTypes.func,\n    onMove: PropTypes.func,\n    onMoveX: PropTypes.func,\n    onMoveY: PropTypes.func,\n    onEnd: PropTypes.func,\n    onEndX: PropTypes.func,\n    onEndY: PropTypes.func,\n    useCapture: PropTypes.bool,\n    component: PropTypes.string,\n    children: PropTypes.node,\n    onClick: PropTypes.func,\n    getRootRef: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.shape({ current: PropTypes.node })\n    ])\n  };\n  static defaultProps = {\n    component: 'div',\n    children: '',\n    useCapture: false\n  };\n\n  static contextTypes = {\n    document: PropTypes.any\n  };\n\n  get document () {\n    return this.context.document || document;\n  }\n\n  componentDidMount () {\n    this.container.addEventListener(events[0], this.onStart, { capture: this.props.useCapture, passive: false });\n    touchEnabled && this.subscribe(this.container);\n  }\n\n  componentWillUnmount () {\n    this.container.removeEventListener(events[0], this.onStart, { capture: this.props.useCapture, passive: false });\n    touchEnabled && this.unsubscribe(this.container);\n  }\n\n  /**\n   * Обработчик событий touchstart\n   *\n   * @param {Object} e Браузерное событие\n   * @returns {void}\n   */\n  onStart = (e) => {\n    this.gesture = {\n      startX: coordX(e),\n      startY: coordY(e),\n      startT: new Date(),\n      isPressed: true\n    };\n\n    // Вызываем нужные колбеки из props\n    const outputEvent = {\n      ...this.gesture,\n      originalEvent: e\n    };\n\n    if (this.props.onStart) {\n      this.props.onStart(outputEvent);\n    }\n\n    if (this.props.onStartX) {\n      this.props.onStartX(outputEvent);\n    }\n\n    if (this.props.onStartY) {\n      this.props.onStartY(outputEvent);\n    }\n\n    !touchEnabled && this.subscribe(this.document);\n  };\n\n  /**\n   * Обработчик событий touchmove\n   *\n   * @param {Object} e Браузерное событие\n   * @returns {void}\n   */\n  onMove = (e) => {\n    const { isPressed, isX, isY, startX, startY } = this.gesture;\n\n    if (isPressed) {\n      // смещения\n      const shiftX = coordX(e) - startX;\n      const shiftY = coordY(e) - startY;\n\n      // абсолютные значения смещений\n      const shiftXAbs = Math.abs(shiftX);\n      const shiftYAbs = Math.abs(shiftY);\n\n      // Если определяем мультитач, то прерываем жест\n      if (!!e.touches && e.touches.length > 1) {\n        return this.onEnd(e);\n      }\n\n      // если мы ещё не определились\n      if (!isX && !isY) {\n        let willBeX = shiftXAbs >= 5 && shiftXAbs > shiftYAbs;\n        let willBeY = shiftYAbs >= 5 && shiftYAbs > shiftXAbs;\n        let willBeSlidedX = (willBeX && !!this.props.onMoveX) || !!this.props.onMove;\n        let willBeSlidedY = (willBeY && !!this.props.onMoveY) || !!this.props.onMove;\n\n        this.gesture.isY = willBeY;\n        this.gesture.isX = willBeX;\n        this.gesture.isSlideX = willBeSlidedX;\n        this.gesture.isSlideY = willBeSlidedY;\n        this.gesture.isSlide = willBeSlidedX || willBeSlidedY;\n      }\n\n      if (this.gesture.isSlide) {\n        this.gesture.shiftX = shiftX;\n        this.gesture.shiftY = shiftY;\n        this.gesture.shiftXAbs = shiftXAbs;\n        this.gesture.shiftYAbs = shiftYAbs;\n\n        // Вызываем нужные колбеки из props\n        const outputEvent = {\n          ...this.gesture,\n          originalEvent: e\n        };\n\n        if (this.props.onMove) {\n          this.props.onMove(outputEvent);\n        }\n\n        if (this.gesture.isSlideX && this.props.onMoveX) {\n          this.props.onMoveX(outputEvent);\n        }\n\n        if (this.gesture.isSlideY && this.props.onMoveY) {\n          this.props.onMoveY(outputEvent);\n        }\n      }\n    }\n  };\n\n  /**\n   * Обработчик событий touchend, touchcancel\n   *\n   * @param {Object} e Браузерное событие\n   * @returns {void}\n   */\n  onEnd = (e) => {\n    const { isPressed, isSlide, isSlideX, isSlideY } = this.gesture;\n\n    if (isPressed) {\n      // Вызываем нужные колбеки из props\n      const outputEvent = {\n        ...this.gesture,\n        originalEvent: e\n      };\n\n      if (this.props.onEnd) {\n        this.props.onEnd(outputEvent);\n      }\n\n      if (isSlideY && this.props.onEndY) {\n        this.props.onEndY(outputEvent);\n      }\n\n      if (isSlideX && this.props.onEndX) {\n        this.props.onEndX(outputEvent);\n      }\n    }\n\n    // Если закончили жест на ссылке, выставляем флаг для отмены перехода\n    this.cancelClick = e.target.tagName === 'A' && isSlide;\n    this.gesture = {};\n\n    !touchEnabled && this.unsubscribe(this.document);\n  };\n\n  subscribe (element) {\n    element.addEventListener(events[1], this.onMove, { capture: this.props.useCapture, passive: false });\n    element.addEventListener(events[2], this.onEnd, { capture: this.props.useCapture, passive: false });\n    element.addEventListener(events[3], this.onEnd, { capture: this.props.useCapture, passive: false });\n  }\n\n  unsubscribe (element) {\n    element.removeEventListener(events[1], this.onMove, { capture: this.props.useCapture, passive: false });\n    element.removeEventListener(events[2], this.onEnd, { capture: this.props.useCapture, passive: false });\n    element.removeEventListener(events[3], this.onEnd, { capture: this.props.useCapture, passive: false });\n  }\n\n  /**\n   * Обработчик событий dragstart\n   * Отменяет нативное браузерное поведение для вложенных ссылок и изображений\n   *\n   * @param {Object} e Браузерное событие\n   * @returns {void}\n   */\n  onDragStart = (e) => {\n    if (e.target.tagName === 'A' || e.target.tagName === 'IMG') {\n      e.preventDefault();\n    }\n  };\n\n  /**\n   * Обработчик клика по компоненту\n   * Отменяет переход по вложенной ссылке, если был зафиксирован свайп\n   *\n   * @param {Object} e Браузерное событие\n   * @returns {void}\n   */\n  onClick = (e) => {\n    if (this.cancelClick) {\n      this.cancelClick = false;\n      e.preventDefault();\n    }\n    this.props.onClick && this.props.onClick(e);\n  };\n\n  getRef = (container) => {\n    this.container = container;\n\n    const getRootRef = this.props.getRootRef;\n    if (getRootRef) {\n      if (typeof getRootRef === 'function') {\n        getRootRef(container);\n      } else {\n        getRootRef.current = container;\n      }\n    }\n  };\n\n  render () {\n    const {\n      onStart,\n      onStartX,\n      onStartY,\n      onMove,\n      onMoveX,\n      onMoveY,\n      onEnd,\n      onEndX,\n      onEndY,\n      useCapture,\n      component,\n      getRootRef,\n      ...restProps\n    } = this.props;\n    const ComponentName = component;\n\n    return (\n      <ComponentName {...restProps} onDragStart={this.onDragStart} onClick={this.onClick} ref={this.getRef}>\n        {this.props.children}\n      </ComponentName>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}