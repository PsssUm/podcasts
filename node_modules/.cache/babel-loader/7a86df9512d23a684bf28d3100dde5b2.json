{"ast":null,"code":"/**\n * Получает кординату по оси абсцисс из touch- или mouse-события\n *\n * @param e Браузерное событие\n * @returns Координата взаимодействия по оси абсцисс\n */\nvar coordX = function coordX(e) {\n  return e.clientX || e.touches && e.touches[0].clientX;\n};\n/**\n * Получает кординату по оси ординат из touch- или mouse-события\n *\n * @param e Браузерное событие\n * @returns Координата взаимодействия по оси ординат\n */\n\n\nvar coordY = function coordY(e) {\n  return e.clientY || e.touches && e.touches[0].clientY;\n};\n\nvar isClient = typeof window !== 'undefined';\nvar touchEnabled = isClient && 'ontouchstart' in window;\n/**\n * Возвращает массив поддерживаемых событий\n * Если браузер поддерживает pointer events или подключена handjs, вернет события указателя.\n * Если нет, используем события мыши\n */\n\nfunction getSupportedEvents() {\n  if (touchEnabled) {\n    return ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\n  }\n\n  return ['mousedown', 'mousemove', 'mouseup', 'mouseleave'];\n}\n/**\n * Рассчитывает \"сопротивление\" для iOS тач-событий\n */\n\n\nfunction rubber(offset, dimension, resistanceRate, isAndroid) {\n  if (isAndroid || offset < 0) return offset;\n  var result = resistanceRate * Math.abs(offset) * dimension / (dimension + resistanceRate * Math.abs(offset));\n  return offset < 0 ? -result : result;\n}\n\nexport { getSupportedEvents, coordX, coordY, touchEnabled, rubber };","map":{"version":3,"sources":["../../../src/lib/touch.ts"],"names":["coordX","e","coordY","isClient","touchEnabled","isAndroid","offset","result","resistanceRate","Math","dimension"],"mappings":"AAEA;;;;;;AAMA,IAAMA,MAAM,GAAG,SAATA,MAAS,CAAA,CAAA,EAAA;AAAA,SAA+BC,CAAC,CAADA,OAAAA,IAAcA,CAAC,CAADA,OAAAA,IAAaA,CAAC,CAADA,OAAAA,CAAAA,CAAAA,EAA1D,OAAA;AAAf,CAAA;AAEA;;;;;;;;AAMA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAA,CAAA,EAAA;AAAA,SAA+BD,CAAC,CAADA,OAAAA,IAAcA,CAAC,CAADA,OAAAA,IAAaA,CAAC,CAADA,OAAAA,CAAAA,CAAAA,EAA1D,OAAA;AAAf,CAAA;;AAEA,IAAME,QAAiB,GAAG,OAAA,MAAA,KAA1B,WAAA;AACA,IAAMC,YAAqB,GAAGD,QAAQ,IAAI,kBAA1C,MAAA;AAEA;;;;;;AAKA,SAAA,kBAAA,GAA6C;AAC3C,MAAA,YAAA,EAAkB;AAChB,WAAO,CAAA,YAAA,EAAA,WAAA,EAAA,UAAA,EAAP,aAAO,CAAP;AACD;;AAED,SAAO,CAAA,WAAA,EAAA,WAAA,EAAA,SAAA,EAAP,YAAO,CAAP;AACD;AAED;;;;;AAGA,SAAA,MAAA,CAAA,MAAA,EAAA,SAAA,EAAA,cAAA,EAAA,SAAA,EAAuG;AACrG,MAAIE,SAAS,IAAIC,MAAM,GAAvB,CAAA,EAA6B,OAAA,MAAA;AAE7B,MAAMC,MAAM,GAAIC,cAAc,GAAGC,IAAI,CAAJA,GAAAA,CAAjBD,MAAiBC,CAAjBD,GAAD,SAACA,IAAkDE,SAAS,GAAGF,cAAc,GAAGC,IAAI,CAAJA,GAAAA,CAA/F,MAA+FA,CAA/ED,CAAhB;AACA,SAAOF,MAAM,GAANA,CAAAA,GAAa,CAAbA,MAAAA,GAAP,MAAA;AACD;;AAED,SAAA,kBAAA,EAAA,MAAA,EAAA,MAAA,EAAA,YAAA,EAAA,MAAA","sourcesContent":["export interface VKUITouchEvent extends MouseEvent, TouchEvent {}\n\n/**\n * Получает кординату по оси абсцисс из touch- или mouse-события\n *\n * @param e Браузерное событие\n * @returns Координата взаимодействия по оси абсцисс\n */\nconst coordX = (e: VKUITouchEvent): number => e.clientX || (e.touches && e.touches[0].clientX);\n\n/**\n * Получает кординату по оси ординат из touch- или mouse-события\n *\n * @param e Браузерное событие\n * @returns Координата взаимодействия по оси ординат\n */\nconst coordY = (e: VKUITouchEvent): number => e.clientY || (e.touches && e.touches[0].clientY);\n\nconst isClient: boolean = typeof window !== 'undefined';\nconst touchEnabled: boolean = isClient && 'ontouchstart' in window;\n\n/**\n * Возвращает массив поддерживаемых событий\n * Если браузер поддерживает pointer events или подключена handjs, вернет события указателя.\n * Если нет, используем события мыши\n */\nfunction getSupportedEvents(): Array<string> {\n  if (touchEnabled) {\n    return ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\n  }\n\n  return ['mousedown', 'mousemove', 'mouseup', 'mouseleave'];\n}\n\n/**\n * Рассчитывает \"сопротивление\" для iOS тач-событий\n */\nfunction rubber(offset: number, dimension: number, resistanceRate: number, isAndroid: boolean): number {\n  if (isAndroid || offset < 0) return offset;\n\n  const result = (resistanceRate * Math.abs(offset) * dimension) / (dimension + resistanceRate * Math.abs(offset));\n  return offset < 0 ? -result : result;\n}\n\nexport { getSupportedEvents, coordX, coordY, touchEnabled, rubber };\n"]},"metadata":{},"sourceType":"module"}