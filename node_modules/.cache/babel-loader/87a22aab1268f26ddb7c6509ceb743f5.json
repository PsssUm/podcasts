{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport React from 'react';\nimport { IS_PLATFORM_IOS } from '../../lib/platform';\nimport SearchIOS from '../SearchIOS/SearchIOS';\nimport SearchAndroid from '../SearchAndroid/SearchAndroid';\nimport PropTypes from 'prop-types';\n\nvar Search =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Search, _React$Component);\n\n  function Search() {\n    _classCallCheck(this, Search);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Search).apply(this, arguments));\n  }\n\n  _createClass(Search, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          onClose = _this$props.onClose,\n          autoFocus = _this$props.autoFocus,\n          iosProps = _objectWithoutProperties(_this$props, [\"onClose\", \"autoFocus\"]);\n\n      var _this$props2 = this.props,\n          after = _this$props2.after,\n          before = _this$props2.before,\n          androidProps = _objectWithoutProperties(_this$props2, [\"after\", \"before\"]);\n\n      if (IS_PLATFORM_IOS) {\n        return React.createElement(SearchIOS, iosProps);\n      } else {\n        return React.createElement(SearchAndroid, androidProps);\n      }\n    }\n  }]);\n\n  return Search;\n}(React.Component);\n\n_defineProperty(Search, \"propTypes\", {\n  className: PropTypes.string,\n  getRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.any\n  })]),\n\n  /**\n   * iOS only. Текст кнопки \"отмена\", которая чистит текстовое поле и убирает фокус.\n   */\n  after: PropTypes.node,\n\n  /**\n   * iOS only\n   */\n  before: PropTypes.node,\n  theme: PropTypes.oneOf(['header', 'default']),\n\n  /**\n   * Android only. Вызывается при клике по стрелке (слева). Этот контрол служит для выхода из режима поиска.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Android only. Определяет, будет ли установлен фокус в поле поиска.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * **Важно:** в коллбэк первым аргументом прилетает *значение* текстового поля.\n   * Объект события передается вторым аргументом.\n   */\n  onChange: PropTypes.func,\n  autoComplete: PropTypes.string\n});\n\n_defineProperty(Search, \"defaultProps\", {\n  theme: 'default',\n  autoComplete: 'off'\n});\n\nexport { Search as default };","map":{"version":3,"sources":["../../../../src/components/Search/Search.js"],"names":["Search","React","Component","className","PropTypes","getRef","current","any","after","before","theme","onClose","autoFocus","onChange","autoComplete","string","iosProps","androidProps"],"mappings":";;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,eAAA,QAAA,oBAAA;AACA,OAAA,SAAA,MAAA,wBAAA;AACA,OAAA,aAAA,MAAA,gCAAA;AACA,OAAA,SAAA,MAAA,YAAA;;IAEqBA,M;;;;;;;;;;;;;6BAwCT;AAAA,UAAA,WAAA,GACoC,KADpC,KAAA;AAAA,UACAW,OADA,GAAA,WAAA,CAAA,OAAA;AAAA,UACSC,SADT,GAAA,WAAA,CAAA,SAAA;AAAA,UACuBI,QADvB,GAAA,wBAAA,CAAA,WAAA,EAAA,CAAA,SAAA,EAAA,WAAA,CAAA,CAAA;;AAAA,UAAA,YAAA,GAEmC,KAFnC,KAAA;AAAA,UAEAR,KAFA,GAAA,YAAA,CAAA,KAAA;AAAA,UAEOC,MAFP,GAAA,YAAA,CAAA,MAAA;AAAA,UAEkBQ,YAFlB,GAAA,wBAAA,CAAA,YAAA,EAAA,CAAA,OAAA,EAAA,QAAA,CAAA,CAAA;;AAGR,UAAA,eAAA,EAAqB;AACnB,eAAO,KAAA,CAAA,aAAA,CAAA,SAAA,EAAP,QAAO,CAAP;AADF,OAAA,MAEO;AACL,eAAO,KAAA,CAAA,aAAA,CAAA,aAAA,EAAP,YAAO,CAAP;AACD;AACF;;;;EAhDiChB,KAAK,CAACC,S;;gBAArBF,M,eACA;AACjBG,EAAAA,SAAS,EAAEC,SAAS,CADH,MAAA;AAEjBC,EAAAA,MAAM,EAAE,SAAS,CAAT,SAAA,CAAoB,CAC1BD,SAAS,CADiB,IAAA,EAE1B,SAAS,CAAT,KAAA,CAAgB;AAAEE,IAAAA,OAAO,EAAEF,SAAS,CAACG;AAArB,GAAhB,CAF0B,CAApB,CAFS;;AAMjB;;;AAGAC,EAAAA,KAAK,EAAEJ,SAAS,CATC,IAAA;;AAUjB;;;AAGAK,EAAAA,MAAM,EAAEL,SAAS,CAbA,IAAA;AAcjBM,EAAAA,KAAK,EAAEN,SAAS,CAATA,KAAAA,CAAgB,CAAA,QAAA,EAdN,SAcM,CAAhBA,CAdU;;AAgBjB;;;AAGAO,EAAAA,OAAO,EAAEP,SAAS,CAnBD,IAAA;;AAqBjB;;;AAGAQ,EAAAA,SAAS,EAAER,SAAS,CAxBH,IAAA;;AA0BjB;;;;AAIAS,EAAAA,QAAQ,EAAET,SAAS,CA9BF,IAAA;AA+BjBU,EAAAA,YAAY,EAAEV,SAAS,CAACW;AA/BP,C;;gBADAf,M,kBAmCG;AACpBU,EAAAA,KAAK,EADe,SAAA;AAEpBI,EAAAA,YAAY,EAAE;AAFM,C;;SAnCHd,M","sourcesContent":["import React from 'react';\nimport { IS_PLATFORM_IOS } from '../../lib/platform';\nimport SearchIOS from '../SearchIOS/SearchIOS';\nimport SearchAndroid from '../SearchAndroid/SearchAndroid';\nimport PropTypes from 'prop-types';\n\nexport default class Search extends React.Component {\n  static propTypes = {\n    className: PropTypes.string,\n    getRef: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.shape({ current: PropTypes.any })\n    ]),\n    /**\n     * iOS only. Текст кнопки \"отмена\", которая чистит текстовое поле и убирает фокус.\n     */\n    after: PropTypes.node,\n    /**\n     * iOS only\n     */\n    before: PropTypes.node,\n    theme: PropTypes.oneOf(['header', 'default']),\n\n    /**\n     * Android only. Вызывается при клике по стрелке (слева). Этот контрол служит для выхода из режима поиска.\n     */\n    onClose: PropTypes.func,\n\n    /**\n     * Android only. Определяет, будет ли установлен фокус в поле поиска.\n     */\n    autoFocus: PropTypes.bool,\n\n    /**\n     * **Важно:** в коллбэк первым аргументом прилетает *значение* текстового поля.\n     * Объект события передается вторым аргументом.\n     */\n    onChange: PropTypes.func,\n    autoComplete: PropTypes.string\n  };\n\n  static defaultProps = {\n    theme: 'default',\n    autoComplete: 'off'\n  };\n\n  render () {\n    const { onClose, autoFocus, ...iosProps } = this.props;\n    const { after, before, ...androidProps } = this.props;\n    if (IS_PLATFORM_IOS) {\n      return <SearchIOS {...iosProps} />;\n    } else {\n      return <SearchAndroid {...androidProps} />;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}