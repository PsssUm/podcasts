{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { Children, Fragment } from 'react';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport usePlatform from '../../hooks/usePlatform';\n\nvar preventDefault = function preventDefault(e) {\n  return e.preventDefault();\n};\n\nvar FormLayout = function FormLayout(props) {\n  var children = props.children,\n      TagName = props.TagName,\n      className = props.className,\n      getRef = props.getRef,\n      onSubmit = props.onSubmit,\n      restProps = _objectWithoutProperties(props, [\"children\", \"TagName\", \"className\", \"getRef\", \"onSubmit\"]);\n\n  var platform = usePlatform(); // Не используем тут JSX из-за этой проблемы: https://github.com/Microsoft/TypeScript/issues/28892\n\n  return React.createElement(TagName, _objectSpread({}, restProps, {\n    className: classNames(getClassName('FormLayout', platform), className),\n    onSubmit: onSubmit,\n    ref: getRef\n  }), React.createElement(Fragment, null, React.createElement(\"div\", {\n    className: \"FormLayout__container\"\n  }, Children.toArray(children).map(function (field, i) {\n    if (field) {\n      var _field$props = field.props,\n          status = _field$props.status,\n          top = _field$props.top,\n          bottom = _field$props.bottom;\n      return React.createElement(\"div\", {\n        className: classNames('FormLayout__row', _defineProperty({}, \"FormLayout__row--s-\".concat(status), !!status)),\n        key: field.key || \"row-\".concat(i)\n      }, top && React.createElement(\"div\", {\n        className: \"FormLayout__row-top\"\n      }, top), field, bottom && React.createElement(\"div\", {\n        className: \"FormLayout__row-bottom\"\n      }, bottom));\n    } else {\n      return null;\n    }\n  })), TagName === 'form' && React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"FormLayout__submit\",\n    value: \"\"\n  })));\n};\n\nFormLayout.defaultProps = {\n  TagName: 'form',\n  onSubmit: preventDefault\n};\nexport default FormLayout;","map":{"version":3,"sources":["../../../../src/components/FormLayout/FormLayout.tsx"],"names":["preventDefault","e","FormLayout","children","TagName","className","getRef","onSubmit","restProps","props","platform","usePlatform","classNames","getClassName","ref","status","top","bottom","field"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,QAAA,EAAA,QAAA,QAAA,OAAA;AACA,OAAA,YAAA,MAAA,4BAAA;AACA,OAAA,UAAA,MAAA,sBAAA;AACA,OAAA,WAAA,MAAA,yBAAA;;AAGA,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,CAAA,CAAA,EAAC;AAAA,SAAIC,CAAC,CAAL,cAAIA,EAAJ;AAAxB,CAAA;;AAMA,IAAMC,UAA8C,GAAG,SAAjDA,UAAiD,CAAA,KAAA,EAA4B;AAAA,MAE/EC,QAF+E,GAQ7EM,KAR6E,CAAA,QAAA;AAAA,MAG/EL,OAH+E,GAQ7EK,KAR6E,CAAA,OAAA;AAAA,MAI/EJ,SAJ+E,GAQ7EI,KAR6E,CAAA,SAAA;AAAA,MAK/EH,MAL+E,GAQ7EG,KAR6E,CAAA,MAAA;AAAA,MAM/EF,QAN+E,GAQ7EE,KAR6E,CAAA,QAAA;AAAA,MAO5ED,SAP4E,GAAA,wBAAA,CAAA,KAAA,EAAA,CAAA,UAAA,EAAA,SAAA,EAAA,WAAA,EAAA,QAAA,EAAA,UAAA,CAAA,CAAA;;AAUjF,MAAME,QAAQ,GAAGC,WAVgE,EAUjF,CAViF,CAYjF;;AACA,SAAO,KAAK,CAAL,aAAA,CAAA,OAAA,EAAA,aAAA,CAAA,EAAA,EAAA,SAAA,EAAA;AAELN,IAAAA,SAAS,EAAEO,UAAU,CAACC,YAAY,CAAA,YAAA,EAAb,QAAa,CAAb,EAFhB,SAEgB,CAFhB;AAGLN,IAAAA,QAAQ,EAHH,QAAA;AAILO,IAAAA,GAAG,EAAER;AAJA,GAAA,CAAA,EAMP,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EACG,QAAQ,CAAR,OAAA,CAAA,QAAA,EAAA,GAAA,CAA+B,UAAA,KAAA,EAAA,CAAA,EAA4B;AAC1D,QAAA,KAAA,EAAW;AAAA,UAAA,YAAA,GACuBY,KAAK,CAD5B,KAAA;AAAA,UACDH,MADC,GAAA,YAAA,CAAA,MAAA;AAAA,UACOC,GADP,GAAA,YAAA,CAAA,GAAA;AAAA,UACYC,MADZ,GAAA,YAAA,CAAA,MAAA;AAGT,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,QAAA,SAAS,EAAEL,UAAU,CAAA,iBAAA,EAAA,eAAA,CAAA,EAAA,EAAA,sBAAA,MAAA,CAAA,MAAA,CAAA,EAAwD,CAAC,CADhF,MACuB,CAAA,CADvB;AAEE,QAAA,GAAG,EAAEM,KAAK,CAALA,GAAAA,IAAAA,OAAAA,MAAAA,CAAAA,CAAAA;AAFP,OAAA,EAIGF,GAAG,IAAI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,SAAS,EAAC;AAAf,OAAA,EAJV,GAIU,CAJV,EAAA,KAAA,EAMGC,MAAM,IAAI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,SAAS,EAAC;AAAf,OAAA,EAPf,MAOe,CANb,CADF;AAHF,KAAA,MAaO;AACL,aAAA,IAAA;AACD;AAlBP,GAEK,CADH,CADF,EAqBGb,OAAO,KAAPA,MAAAA,IACC,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA;AAAO,IAAA,IAAI,EAAX,QAAA;AAAqB,IAAA,SAAS,EAA9B,oBAAA;AAAoD,IAAA,KAAK,EAAC;AAA1D,GAAA,CAtBJ,CANO,CAAP;AAbF,CAAA;;AA8CAF,UAAU,CAAVA,YAAAA,GAA0B;AACxBE,EAAAA,OAAO,EADiB,MAAA;AAExBG,EAAAA,QAAQ,EAAEP;AAFc,CAA1BE;AAKA,eAAA,UAAA","sourcesContent":["import React, { Children, FunctionComponent, HTMLAttributes, ReactElement, Fragment } from 'react';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport usePlatform from '../../hooks/usePlatform';\nimport { HasChildren, HasRef } from '../../types/props';\n\nconst preventDefault = e => e.preventDefault();\n\nexport interface FormLayoutProps extends HTMLAttributes<HTMLElement>, HasRef<HTMLElement>, HasChildren {\n  TagName?: string;\n}\n\nconst FormLayout: FunctionComponent<FormLayoutProps> = (props: FormLayoutProps) => {\n  const {\n    children,\n    TagName,\n    className,\n    getRef,\n    onSubmit,\n    ...restProps\n  } = props;\n\n  const platform = usePlatform();\n\n  // Не используем тут JSX из-за этой проблемы: https://github.com/Microsoft/TypeScript/issues/28892\n  return React.createElement(TagName, {\n    ...restProps,\n    className: classNames(getClassName('FormLayout', platform), className),\n    onSubmit,\n    ref: getRef\n  },\n  <Fragment>\n    <div className=\"FormLayout__container\">\n      {Children.toArray(children).map((field: ReactElement, i) => {\n        if (field) {\n          const { status, top, bottom } = field.props;\n\n          return (\n            <div\n              className={classNames('FormLayout__row', { [`FormLayout__row--s-${status}`]: !!status })}\n              key={field.key || `row-${i}`}\n            >\n              {top && <div className=\"FormLayout__row-top\">{top}</div>}\n              {field}\n              {bottom && <div className=\"FormLayout__row-bottom\">{bottom}</div>}\n            </div>\n          );\n        } else {\n          return null;\n        }\n      })}\n    </div>\n    {TagName === 'form' && (\n      <input type=\"submit\" className=\"FormLayout__submit\" value=\"\" />\n    )}\n  </Fragment>);\n};\n\nFormLayout.defaultProps = {\n  TagName: 'form',\n  onSubmit: preventDefault\n};\n\nexport default FormLayout;\n"]},"metadata":{},"sourceType":"module"}