{"ast":null,"code":"var _jsxFileName = \"/Users/spbiphones/Dropbox/projects/web projects/podcasts/src/pages/custom_views/Waveform.js\";\nimport React from 'react';\nimport WaveSurfer from 'wavesurfer.js';\nimport { WaveformContianer, Wave, PlayButton } from './Waveform.styled';\n\nclass Waveform extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePlay = () => {\n      this.setState({\n        playing: !this.state.playing\n      });\n      this.waveform.playPause();\n    };\n  }\n\n  componentDidMount() {\n    const track = document.querySelector('#track');\n\n    for (var key in WaveSurfer.util) {\n      // var value = WaveSurfer[key];\n      console.log(\"value = \" + key);\n    }\n\n    this.plugins = [WaveSurfer.timeline.create({\n      container: \"#waveform\"\n    })];\n    this.waveform = WaveSurfer.create({\n      barWidth: 2,\n      cursorWidth: 10,\n      container: '#waveform',\n      backend: 'WebAudio',\n      height: 96,\n      progressColor: '#3F8AE0',\n      responsive: true,\n      waveColor: '#3F8AE0',\n      cursorColor: 'transparent',\n      loopSelection: true\n    });\n    this.waveform.load(\"https://www.mfiles.co.uk/mp3-downloads/gs-cd-track2.mp3\");\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps != this.props.isPlaying && prevProps.isPlaying != this.props.isPlaying) {\n      this.waveform.playPause();\n    }\n  }\n\n  render() {\n    const url = 'https://www.mfiles.co.uk/mp3-downloads/gs-cd-track2.mp3';\n    return React.createElement(WaveformContianer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"#wave-timeline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Wave, {\n      id: \"waveform\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"audio\", {\n      id: \"track\",\n      src: url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\nexport default Waveform;","map":{"version":3,"sources":["/Users/spbiphones/Dropbox/projects/web projects/podcasts/src/pages/custom_views/Waveform.js"],"names":["React","WaveSurfer","WaveformContianer","Wave","PlayButton","Waveform","Component","constructor","props","handlePlay","setState","playing","state","waveform","playPause","componentDidMount","track","document","querySelector","key","util","console","log","plugins","timeline","create","container","barWidth","cursorWidth","backend","height","progressColor","responsive","waveColor","cursorColor","loopSelection","load","componentDidUpdate","prevProps","isPlaying","render","url"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,SAASC,iBAAT,EAA4BC,IAA5B,EAAkCC,UAAlC,QAAoD,mBAApD;;AAEA,MAAMC,QAAN,SAAuBL,KAAK,CAACM,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAsClBC,UAtCkB,GAsCL,MAAM;AACjB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE,CAAC,KAAKC,KAAL,CAAWD;AAAvB,OAAd;AACA,WAAKE,QAAL,CAAcC,SAAd;AACD,KAzCiB;AAEjB;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAd;;AAEA,SAAI,IAAIC,GAAR,IAAelB,UAAU,CAACmB,IAA1B,EAAgC;AAC/B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAaH,GAAzB;AACF;;AACD,SAAKI,OAAL,GAAe,CACbtB,UAAU,CAACuB,QAAX,CAAoBC,MAApB,CAA2B;AACvBC,MAAAA,SAAS,EAAE;AADY,KAA3B,CADa,CAAf;AAKE,SAAKb,QAAL,GAAgBZ,UAAU,CAACwB,MAAX,CAAkB;AAC/BE,MAAAA,QAAQ,EAAE,CADqB;AAE/BC,MAAAA,WAAW,EAAE,EAFkB;AAG/BF,MAAAA,SAAS,EAAE,WAHoB;AAI/BG,MAAAA,OAAO,EAAE,UAJsB;AAK/BC,MAAAA,MAAM,EAAE,EALuB;AAM/BC,MAAAA,aAAa,EAAE,SANgB;AAO/BC,MAAAA,UAAU,EAAE,IAPmB;AAQ/BC,MAAAA,SAAS,EAAE,SARoB;AAS/BC,MAAAA,WAAW,EAAE,aATkB;AAU9BC,MAAAA,aAAa,EAAE;AAVe,KAAlB,CAAhB;AAeA,SAAKtB,QAAL,CAAcuB,IAAd,CAAmB,yDAAnB;AACD;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAW;AAC3B,QAAGA,SAAS,IAAI,KAAK9B,KAAL,CAAW+B,SAAxB,IAAqCD,SAAS,CAACC,SAAV,IAAuB,KAAK/B,KAAL,CAAW+B,SAA1E,EAAoF;AAChF,WAAK1B,QAAL,CAAcC,SAAd;AACH;AACF;;AAMD0B,EAAAA,MAAM,GAAG;AACP,UAAMC,GAAG,GAAG,yDAAZ;AAEA,WACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,EAAE,EAAC,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAME;AAAO,MAAA,EAAE,EAAC,OAAV;AAAkB,MAAA,GAAG,EAAEA,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAUD;;AAzDoC;;AA0DtC;AAED,eAAepC,QAAf","sourcesContent":["import React from 'react';\nimport WaveSurfer from 'wavesurfer.js';\n\nimport { WaveformContianer, Wave, PlayButton } from './Waveform.styled';\n\nclass Waveform extends React.Component {\n  constructor(props){\n    super(props)\n  }\n  componentDidMount() {\n    const track = document.querySelector('#track');\n\n    for(var key in WaveSurfer.util) {\n\t    // var value = WaveSurfer[key];\n\t    console.log(\"value = \" + key)\n  }\n  this.plugins = [\n    WaveSurfer.timeline.create({\n        container: \"#waveform\"\n    })\n  ]\n    this.waveform = WaveSurfer.create({\n\t      barWidth: 2,\n\t      cursorWidth: 10,\n\t      container: '#waveform',\n\t      backend: 'WebAudio',\n\t      height: 96,\n\t      progressColor: '#3F8AE0',\n\t      responsive: true,\n\t      waveColor: '#3F8AE0',\n\t      cursorColor: 'transparent',\n        loopSelection: true,\n        \n        });\n\n\n    this.waveform.load(\"https://www.mfiles.co.uk/mp3-downloads/gs-cd-track2.mp3\");\n  };\n  \n  componentDidUpdate(prevProps){\n    if(prevProps != this.props.isPlaying && prevProps.isPlaying != this.props.isPlaying){\n        this.waveform.playPause();\n    }\n  }\n  handlePlay = () => {\n    this.setState({ playing: !this.state.playing });\n    this.waveform.playPause();\n  };\n  \n  render() {\n    const url = 'https://www.mfiles.co.uk/mp3-downloads/gs-cd-track2.mp3';\n\n    return (\n      <WaveformContianer>\n        <div id=\"#wave-timeline\"></div>\n        {/* <PlayButton onClick={this.handlePlay} >\n          {!this.state.playing ? 'Play' : 'Pause'}\n        </PlayButton> */}\n        <Wave id=\"waveform\" />\n        <audio id=\"track\" src={url} />\n      </WaveformContianer>\n    );\n  }\n};\n\nexport default Waveform;\n\n\n"]},"metadata":{},"sourceType":"module"}